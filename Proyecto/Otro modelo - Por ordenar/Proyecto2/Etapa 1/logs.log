2024-12-05 20:33:57,899:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-05 20:33:57,899:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-05 20:33:57,899:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-05 20:33:57,899:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-05 20:35:56,701:INFO:PyCaret ClassificationExperiment
2024-12-05 20:35:56,701:INFO:Logging name: clf-default-name
2024-12-05 20:35:56,996:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-05 20:35:56,996:INFO:version 3.3.2
2024-12-05 20:35:56,996:INFO:Initializing setup()
2024-12-05 20:35:56,996:INFO:self.USI: 9270
2024-12-05 20:35:56,996:INFO:self._variable_keys: {'y_train', 'memory', 'fold_shuffle_param', 'X', 'is_multiclass', 'html_param', 'X_test', 'log_plots_param', 'X_train', '_ml_usecase', 'fix_imbalance', 'exp_name_log', 'target_param', 'fold_generator', 'exp_id', 'fold_groups_param', 'USI', 'idx', 'pipeline', 'y_test', 'data', 'n_jobs_param', 'seed', 'y', 'logging_param', '_available_plots', 'gpu_n_jobs_param', 'gpu_param'}
2024-12-05 20:35:56,996:INFO:Checking environment
2024-12-05 20:35:56,996:INFO:python_version: 3.10.11
2024-12-05 20:35:56,996:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-12-05 20:35:56,996:INFO:machine: AMD64
2024-12-05 20:35:56,996:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-05 20:35:57,002:INFO:Memory: svmem(total=17041244160, available=5974396928, percent=64.9, used=11066847232, free=5974396928)
2024-12-05 20:35:57,002:INFO:Physical Core: 4
2024-12-05 20:35:57,002:INFO:Logical Core: 8
2024-12-05 20:35:57,002:INFO:Checking libraries
2024-12-05 20:35:57,002:INFO:System:
2024-12-05 20:35:57,002:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-12-05 20:35:57,002:INFO:executable: c:\Users\diego\AppData\Local\Programs\Python\Python310\python.exe
2024-12-05 20:35:57,002:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-05 20:35:57,002:INFO:PyCaret required dependencies:
2024-12-05 20:35:57,247:INFO:                 pip: 24.2
2024-12-05 20:35:57,247:INFO:          setuptools: 65.5.0
2024-12-05 20:35:57,247:INFO:             pycaret: 3.3.2
2024-12-05 20:35:57,247:INFO:             IPython: 8.26.0
2024-12-05 20:35:57,247:INFO:          ipywidgets: 8.1.5
2024-12-05 20:35:57,247:INFO:                tqdm: 4.66.5
2024-12-05 20:35:57,247:INFO:               numpy: 1.26.4
2024-12-05 20:35:57,247:INFO:              pandas: 1.5.3
2024-12-05 20:35:57,247:INFO:              jinja2: 3.1.4
2024-12-05 20:35:57,247:INFO:               scipy: 1.11.4
2024-12-05 20:35:57,247:INFO:              joblib: 1.3.2
2024-12-05 20:35:57,247:INFO:             sklearn: 1.4.2
2024-12-05 20:35:57,247:INFO:                pyod: 2.0.2
2024-12-05 20:35:57,247:INFO:            imblearn: 0.12.3
2024-12-05 20:35:57,247:INFO:   category_encoders: 2.6.4
2024-12-05 20:35:57,247:INFO:            lightgbm: 4.5.0
2024-12-05 20:35:57,247:INFO:               numba: 0.60.0
2024-12-05 20:35:57,247:INFO:            requests: 2.32.3
2024-12-05 20:35:57,247:INFO:          matplotlib: 3.7.5
2024-12-05 20:35:57,247:INFO:          scikitplot: 0.3.7
2024-12-05 20:35:57,247:INFO:         yellowbrick: 1.5
2024-12-05 20:35:57,247:INFO:              plotly: 5.24.1
2024-12-05 20:35:57,247:INFO:    plotly-resampler: Not installed
2024-12-05 20:35:57,247:INFO:             kaleido: 0.2.1
2024-12-05 20:35:57,247:INFO:           schemdraw: 0.15
2024-12-05 20:35:57,247:INFO:         statsmodels: 0.14.4
2024-12-05 20:35:57,247:INFO:              sktime: 0.26.0
2024-12-05 20:35:57,247:INFO:               tbats: 1.1.3
2024-12-05 20:35:57,247:INFO:            pmdarima: 2.0.4
2024-12-05 20:35:57,247:INFO:              psutil: 6.0.0
2024-12-05 20:35:57,247:INFO:          markupsafe: 2.1.5
2024-12-05 20:35:57,247:INFO:             pickle5: Not installed
2024-12-05 20:35:57,247:INFO:         cloudpickle: 3.1.0
2024-12-05 20:35:57,247:INFO:         deprecation: 2.1.0
2024-12-05 20:35:57,247:INFO:              xxhash: 3.5.0
2024-12-05 20:35:57,247:INFO:           wurlitzer: Not installed
2024-12-05 20:35:57,247:INFO:PyCaret optional dependencies:
2024-12-05 20:35:57,260:INFO:                shap: 0.44.0
2024-12-05 20:35:57,260:INFO:           interpret: 0.5.0
2024-12-05 20:35:57,260:INFO:                umap: 0.5.6
2024-12-05 20:35:57,260:INFO:     ydata_profiling: 4.11.0
2024-12-05 20:35:57,260:INFO:  explainerdashboard: 0.4.7
2024-12-05 20:35:57,260:INFO:             autoviz: Not installed
2024-12-05 20:35:57,260:INFO:           fairlearn: 0.7.0
2024-12-05 20:35:57,260:INFO:          deepchecks: Not installed
2024-12-05 20:35:57,260:INFO:             xgboost: 2.1.2
2024-12-05 20:35:57,260:INFO:            catboost: 1.2.7
2024-12-05 20:35:57,260:INFO:              kmodes: Not installed
2024-12-05 20:35:57,260:INFO:             mlxtend: Not installed
2024-12-05 20:35:57,260:INFO:       statsforecast: Not installed
2024-12-05 20:35:57,260:INFO:        tune_sklearn: Not installed
2024-12-05 20:35:57,260:INFO:                 ray: Not installed
2024-12-05 20:35:57,260:INFO:            hyperopt: Not installed
2024-12-05 20:35:57,260:INFO:              optuna: 4.0.0
2024-12-05 20:35:57,260:INFO:               skopt: Not installed
2024-12-05 20:35:57,260:INFO:              mlflow: 2.18.0
2024-12-05 20:35:57,260:INFO:              gradio: Not installed
2024-12-05 20:35:57,260:INFO:             fastapi: Not installed
2024-12-05 20:35:57,260:INFO:             uvicorn: Not installed
2024-12-05 20:35:57,260:INFO:              m2cgen: Not installed
2024-12-05 20:35:57,260:INFO:           evidently: Not installed
2024-12-05 20:35:57,260:INFO:               fugue: Not installed
2024-12-05 20:35:57,260:INFO:           streamlit: 1.39.0
2024-12-05 20:35:57,260:INFO:             prophet: Not installed
2024-12-05 20:35:57,260:INFO:None
2024-12-05 20:35:57,260:INFO:Set up data.
2024-12-05 20:35:57,319:INFO:Set up folding strategy.
2024-12-05 20:35:57,319:INFO:Set up train/test split.
2024-12-05 20:35:57,398:INFO:Set up index.
2024-12-05 20:35:57,443:INFO:Assigning column types.
2024-12-05 20:35:57,487:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-05 20:35:57,557:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 20:35:57,578:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 20:35:57,619:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:35:57,626:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:35:59,741:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 20:35:59,741:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 20:35:59,770:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:35:59,770:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:35:59,778:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-05 20:35:59,833:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 20:35:59,858:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:35:59,858:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:35:59,907:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 20:35:59,947:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:35:59,951:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:35:59,952:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-05 20:36:00,027:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:36:00,027:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:36:00,121:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:36:00,127:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:36:00,127:INFO:Preparing preprocessing pipeline...
2024-12-05 20:36:00,151:INFO:Set up simple imputation.
2024-12-05 20:36:00,247:INFO:Finished creating preprocessing pipeline.
2024-12-05 20:36:00,262:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\diego\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_et...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-12-05 20:36:00,262:INFO:Creating final display dataframe.
2024-12-05 20:36:00,548:INFO:Setup _display_container:                     Description                          Value
0                    Session id                            123
1                        Target  unique_lending_protocol_count
2                   Target type                         Binary
3           Original data shape                    (31007, 77)
4        Transformed data shape                    (31007, 76)
5   Transformed train set shape                    (21704, 76)
6    Transformed test set shape                     (9303, 76)
7               Ignore features                              1
8              Numeric features                             75
9                    Preprocess                           True
10              Imputation type                         simple
11           Numeric imputation                           mean
12       Categorical imputation                           mode
13               Fold Generator                StratifiedKFold
14                  Fold Number                              5
15                     CPU Jobs                             -1
16                      Use GPU                          False
17               Log Experiment                          False
18              Experiment Name               clf-default-name
19                          USI                           9270
2024-12-05 20:36:00,728:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:36:00,728:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:36:00,812:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:36:00,812:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:36:00,812:INFO:setup() successfully completed in 4.22s...............
2024-12-05 20:36:00,818:INFO:Initializing compare_models()
2024-12-05 20:36:00,818:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-05 20:36:00,818:INFO:Checking exceptions
2024-12-05 20:36:00,842:INFO:Preparing display monitor
2024-12-05 20:36:00,881:INFO:Initializing Logistic Regression
2024-12-05 20:36:00,881:INFO:Total runtime is 0.0 minutes
2024-12-05 20:36:00,885:INFO:SubProcess create_model() called ==================================
2024-12-05 20:36:00,885:INFO:Initializing create_model()
2024-12-05 20:36:00,885:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C1213F8B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:36:00,885:INFO:Checking exceptions
2024-12-05 20:36:00,885:INFO:Importing libraries
2024-12-05 20:36:00,886:INFO:Copying training dataset
2024-12-05 20:36:00,936:INFO:Defining folds
2024-12-05 20:36:00,936:INFO:Declaring metric variables
2024-12-05 20:36:00,942:INFO:Importing untrained model
2024-12-05 20:36:00,946:INFO:Logistic Regression Imported successfully
2024-12-05 20:36:00,958:INFO:Starting cross validation
2024-12-05 20:36:00,959:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:36:12,762:INFO:Calculating mean and std
2024-12-05 20:36:12,762:INFO:Creating metrics dataframe
2024-12-05 20:36:12,762:INFO:Uploading results into container
2024-12-05 20:36:12,762:INFO:Uploading model into container now
2024-12-05 20:36:12,762:INFO:_master_model_container: 1
2024-12-05 20:36:12,762:INFO:_display_container: 2
2024-12-05 20:36:12,762:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-05 20:36:12,762:INFO:create_model() successfully completed......................................
2024-12-05 20:36:13,071:INFO:SubProcess create_model() end ==================================
2024-12-05 20:36:13,071:INFO:Creating metrics dataframe
2024-12-05 20:36:13,080:INFO:Initializing K Neighbors Classifier
2024-12-05 20:36:13,080:INFO:Total runtime is 0.20332550605138142 minutes
2024-12-05 20:36:13,080:INFO:SubProcess create_model() called ==================================
2024-12-05 20:36:13,080:INFO:Initializing create_model()
2024-12-05 20:36:13,080:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C1213F8B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:36:13,080:INFO:Checking exceptions
2024-12-05 20:36:13,080:INFO:Importing libraries
2024-12-05 20:36:13,080:INFO:Copying training dataset
2024-12-05 20:36:13,115:INFO:Defining folds
2024-12-05 20:36:13,115:INFO:Declaring metric variables
2024-12-05 20:36:13,118:INFO:Importing untrained model
2024-12-05 20:36:13,125:INFO:K Neighbors Classifier Imported successfully
2024-12-05 20:36:13,134:INFO:Starting cross validation
2024-12-05 20:36:13,135:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:36:19,535:INFO:Calculating mean and std
2024-12-05 20:36:19,535:INFO:Creating metrics dataframe
2024-12-05 20:36:19,544:INFO:Uploading results into container
2024-12-05 20:36:19,546:INFO:Uploading model into container now
2024-12-05 20:36:19,547:INFO:_master_model_container: 2
2024-12-05 20:36:19,547:INFO:_display_container: 2
2024-12-05 20:36:19,548:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-05 20:36:19,548:INFO:create_model() successfully completed......................................
2024-12-05 20:36:19,692:INFO:SubProcess create_model() end ==================================
2024-12-05 20:36:19,692:INFO:Creating metrics dataframe
2024-12-05 20:36:19,708:INFO:Initializing Naive Bayes
2024-12-05 20:36:19,708:INFO:Total runtime is 0.31377764145533243 minutes
2024-12-05 20:36:19,711:INFO:SubProcess create_model() called ==================================
2024-12-05 20:36:19,711:INFO:Initializing create_model()
2024-12-05 20:36:19,711:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C1213F8B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:36:19,711:INFO:Checking exceptions
2024-12-05 20:36:19,711:INFO:Importing libraries
2024-12-05 20:36:19,711:INFO:Copying training dataset
2024-12-05 20:36:19,758:INFO:Defining folds
2024-12-05 20:36:19,758:INFO:Declaring metric variables
2024-12-05 20:36:19,761:INFO:Importing untrained model
2024-12-05 20:36:19,771:INFO:Naive Bayes Imported successfully
2024-12-05 20:36:19,780:INFO:Starting cross validation
2024-12-05 20:36:19,782:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:36:20,210:INFO:Calculating mean and std
2024-12-05 20:36:20,210:INFO:Creating metrics dataframe
2024-12-05 20:36:20,210:INFO:Uploading results into container
2024-12-05 20:36:20,218:INFO:Uploading model into container now
2024-12-05 20:36:20,218:INFO:_master_model_container: 3
2024-12-05 20:36:20,218:INFO:_display_container: 2
2024-12-05 20:36:20,218:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-05 20:36:20,218:INFO:create_model() successfully completed......................................
2024-12-05 20:36:20,369:INFO:SubProcess create_model() end ==================================
2024-12-05 20:36:20,369:INFO:Creating metrics dataframe
2024-12-05 20:36:20,387:INFO:Initializing Decision Tree Classifier
2024-12-05 20:36:20,387:INFO:Total runtime is 0.325101363658905 minutes
2024-12-05 20:36:20,393:INFO:SubProcess create_model() called ==================================
2024-12-05 20:36:20,393:INFO:Initializing create_model()
2024-12-05 20:36:20,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C1213F8B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:36:20,394:INFO:Checking exceptions
2024-12-05 20:36:20,394:INFO:Importing libraries
2024-12-05 20:36:20,394:INFO:Copying training dataset
2024-12-05 20:36:20,460:INFO:Defining folds
2024-12-05 20:36:20,460:INFO:Declaring metric variables
2024-12-05 20:36:20,476:INFO:Importing untrained model
2024-12-05 20:36:20,480:INFO:Decision Tree Classifier Imported successfully
2024-12-05 20:36:20,486:INFO:Starting cross validation
2024-12-05 20:36:20,490:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:36:20,960:INFO:Calculating mean and std
2024-12-05 20:36:20,960:INFO:Creating metrics dataframe
2024-12-05 20:36:20,960:INFO:Uploading results into container
2024-12-05 20:36:20,960:INFO:Uploading model into container now
2024-12-05 20:36:20,960:INFO:_master_model_container: 4
2024-12-05 20:36:20,960:INFO:_display_container: 2
2024-12-05 20:36:20,960:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-12-05 20:36:20,967:INFO:create_model() successfully completed......................................
2024-12-05 20:36:21,080:INFO:SubProcess create_model() end ==================================
2024-12-05 20:36:21,080:INFO:Creating metrics dataframe
2024-12-05 20:36:21,102:INFO:Initializing SVM - Linear Kernel
2024-12-05 20:36:21,102:INFO:Total runtime is 0.337026043732961 minutes
2024-12-05 20:36:21,102:INFO:SubProcess create_model() called ==================================
2024-12-05 20:36:21,102:INFO:Initializing create_model()
2024-12-05 20:36:21,109:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C1213F8B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:36:21,109:INFO:Checking exceptions
2024-12-05 20:36:21,109:INFO:Importing libraries
2024-12-05 20:36:21,109:INFO:Copying training dataset
2024-12-05 20:36:21,145:INFO:Defining folds
2024-12-05 20:36:21,145:INFO:Declaring metric variables
2024-12-05 20:36:21,151:INFO:Importing untrained model
2024-12-05 20:36:21,153:INFO:SVM - Linear Kernel Imported successfully
2024-12-05 20:36:21,161:INFO:Starting cross validation
2024-12-05 20:36:21,161:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:36:22,241:INFO:Calculating mean and std
2024-12-05 20:36:22,241:INFO:Creating metrics dataframe
2024-12-05 20:36:22,264:INFO:Uploading results into container
2024-12-05 20:36:22,264:INFO:Uploading model into container now
2024-12-05 20:36:22,264:INFO:_master_model_container: 5
2024-12-05 20:36:22,264:INFO:_display_container: 2
2024-12-05 20:36:22,264:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-05 20:36:22,264:INFO:create_model() successfully completed......................................
2024-12-05 20:36:22,441:INFO:SubProcess create_model() end ==================================
2024-12-05 20:36:22,441:INFO:Creating metrics dataframe
2024-12-05 20:36:22,458:INFO:Initializing Ridge Classifier
2024-12-05 20:36:22,458:INFO:Total runtime is 0.35961066087086996 minutes
2024-12-05 20:36:22,463:INFO:SubProcess create_model() called ==================================
2024-12-05 20:36:22,463:INFO:Initializing create_model()
2024-12-05 20:36:22,464:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C1213F8B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:36:22,464:INFO:Checking exceptions
2024-12-05 20:36:22,464:INFO:Importing libraries
2024-12-05 20:36:22,464:INFO:Copying training dataset
2024-12-05 20:36:22,506:INFO:Defining folds
2024-12-05 20:36:22,509:INFO:Declaring metric variables
2024-12-05 20:36:22,510:INFO:Importing untrained model
2024-12-05 20:36:22,520:INFO:Ridge Classifier Imported successfully
2024-12-05 20:36:22,531:INFO:Starting cross validation
2024-12-05 20:36:22,534:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:36:22,751:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.56901e-22): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-12-05 20:36:22,751:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.60106e-22): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-12-05 20:36:23,151:INFO:Calculating mean and std
2024-12-05 20:36:23,151:INFO:Creating metrics dataframe
2024-12-05 20:36:23,155:INFO:Uploading results into container
2024-12-05 20:36:23,155:INFO:Uploading model into container now
2024-12-05 20:36:23,155:INFO:_master_model_container: 6
2024-12-05 20:36:23,155:INFO:_display_container: 2
2024-12-05 20:36:23,155:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-12-05 20:36:23,155:INFO:create_model() successfully completed......................................
2024-12-05 20:36:23,270:INFO:SubProcess create_model() end ==================================
2024-12-05 20:36:23,270:INFO:Creating metrics dataframe
2024-12-05 20:36:23,286:INFO:Initializing Random Forest Classifier
2024-12-05 20:36:23,287:INFO:Total runtime is 0.3734289169311523 minutes
2024-12-05 20:36:23,291:INFO:SubProcess create_model() called ==================================
2024-12-05 20:36:23,292:INFO:Initializing create_model()
2024-12-05 20:36:23,292:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C1213F8B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:36:23,292:INFO:Checking exceptions
2024-12-05 20:36:23,293:INFO:Importing libraries
2024-12-05 20:36:23,293:INFO:Copying training dataset
2024-12-05 20:36:23,336:INFO:Defining folds
2024-12-05 20:36:23,336:INFO:Declaring metric variables
2024-12-05 20:36:23,341:INFO:Importing untrained model
2024-12-05 20:36:23,348:INFO:Random Forest Classifier Imported successfully
2024-12-05 20:36:23,353:INFO:Starting cross validation
2024-12-05 20:36:23,359:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:36:26,487:INFO:Calculating mean and std
2024-12-05 20:36:26,487:INFO:Creating metrics dataframe
2024-12-05 20:36:26,490:INFO:Uploading results into container
2024-12-05 20:36:26,490:INFO:Uploading model into container now
2024-12-05 20:36:26,490:INFO:_master_model_container: 7
2024-12-05 20:36:26,490:INFO:_display_container: 2
2024-12-05 20:36:26,490:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 20:36:26,490:INFO:create_model() successfully completed......................................
2024-12-05 20:36:26,642:INFO:SubProcess create_model() end ==================================
2024-12-05 20:36:26,642:INFO:Creating metrics dataframe
2024-12-05 20:36:26,681:INFO:Initializing Quadratic Discriminant Analysis
2024-12-05 20:36:26,682:INFO:Total runtime is 0.4300244530042012 minutes
2024-12-05 20:36:26,690:INFO:SubProcess create_model() called ==================================
2024-12-05 20:36:26,692:INFO:Initializing create_model()
2024-12-05 20:36:26,693:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C1213F8B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:36:26,693:INFO:Checking exceptions
2024-12-05 20:36:26,693:INFO:Importing libraries
2024-12-05 20:36:26,693:INFO:Copying training dataset
2024-12-05 20:36:26,759:INFO:Defining folds
2024-12-05 20:36:26,760:INFO:Declaring metric variables
2024-12-05 20:36:26,761:INFO:Importing untrained model
2024-12-05 20:36:26,769:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-05 20:36:26,777:INFO:Starting cross validation
2024-12-05 20:36:26,780:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:36:27,192:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 20:36:27,192:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 20:36:27,192:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 20:36:27,192:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 20:36:27,192:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 20:36:27,938:INFO:Calculating mean and std
2024-12-05 20:36:27,940:INFO:Creating metrics dataframe
2024-12-05 20:36:27,940:INFO:Uploading results into container
2024-12-05 20:36:27,940:INFO:Uploading model into container now
2024-12-05 20:36:27,940:INFO:_master_model_container: 8
2024-12-05 20:36:27,940:INFO:_display_container: 2
2024-12-05 20:36:27,940:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-05 20:36:27,940:INFO:create_model() successfully completed......................................
2024-12-05 20:36:28,086:INFO:SubProcess create_model() end ==================================
2024-12-05 20:36:28,086:INFO:Creating metrics dataframe
2024-12-05 20:36:28,100:INFO:Initializing Ada Boost Classifier
2024-12-05 20:36:28,102:INFO:Total runtime is 0.4536836783091227 minutes
2024-12-05 20:36:28,102:INFO:SubProcess create_model() called ==================================
2024-12-05 20:36:28,102:INFO:Initializing create_model()
2024-12-05 20:36:28,102:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C1213F8B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:36:28,102:INFO:Checking exceptions
2024-12-05 20:36:28,102:INFO:Importing libraries
2024-12-05 20:36:28,102:INFO:Copying training dataset
2024-12-05 20:36:28,143:INFO:Defining folds
2024-12-05 20:36:28,144:INFO:Declaring metric variables
2024-12-05 20:36:28,145:INFO:Importing untrained model
2024-12-05 20:36:28,151:INFO:Ada Boost Classifier Imported successfully
2024-12-05 20:36:28,161:INFO:Starting cross validation
2024-12-05 20:36:28,168:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:36:28,320:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 20:36:28,320:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 20:36:28,320:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 20:36:28,320:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 20:36:28,637:INFO:Calculating mean and std
2024-12-05 20:36:28,637:INFO:Creating metrics dataframe
2024-12-05 20:36:28,641:INFO:Uploading results into container
2024-12-05 20:36:28,641:INFO:Uploading model into container now
2024-12-05 20:36:28,641:INFO:_master_model_container: 9
2024-12-05 20:36:28,641:INFO:_display_container: 2
2024-12-05 20:36:28,641:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-12-05 20:36:28,641:INFO:create_model() successfully completed......................................
2024-12-05 20:36:28,770:INFO:SubProcess create_model() end ==================================
2024-12-05 20:36:28,770:INFO:Creating metrics dataframe
2024-12-05 20:36:28,788:INFO:Initializing Gradient Boosting Classifier
2024-12-05 20:36:28,788:INFO:Total runtime is 0.46511662006378174 minutes
2024-12-05 20:36:28,791:INFO:SubProcess create_model() called ==================================
2024-12-05 20:36:28,792:INFO:Initializing create_model()
2024-12-05 20:36:28,792:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C1213F8B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:36:28,792:INFO:Checking exceptions
2024-12-05 20:36:28,792:INFO:Importing libraries
2024-12-05 20:36:28,792:INFO:Copying training dataset
2024-12-05 20:36:28,828:INFO:Defining folds
2024-12-05 20:36:28,828:INFO:Declaring metric variables
2024-12-05 20:36:28,835:INFO:Importing untrained model
2024-12-05 20:36:28,840:INFO:Gradient Boosting Classifier Imported successfully
2024-12-05 20:36:28,851:INFO:Starting cross validation
2024-12-05 20:36:28,851:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:36:42,360:INFO:Calculating mean and std
2024-12-05 20:36:42,362:INFO:Creating metrics dataframe
2024-12-05 20:36:42,368:INFO:Uploading results into container
2024-12-05 20:36:42,369:INFO:Uploading model into container now
2024-12-05 20:36:42,369:INFO:_master_model_container: 10
2024-12-05 20:36:42,369:INFO:_display_container: 2
2024-12-05 20:36:42,369:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-05 20:36:42,369:INFO:create_model() successfully completed......................................
2024-12-05 20:36:42,475:INFO:SubProcess create_model() end ==================================
2024-12-05 20:36:42,475:INFO:Creating metrics dataframe
2024-12-05 20:36:42,490:INFO:Initializing Linear Discriminant Analysis
2024-12-05 20:36:42,490:INFO:Total runtime is 0.6934868892033895 minutes
2024-12-05 20:36:42,493:INFO:SubProcess create_model() called ==================================
2024-12-05 20:36:42,493:INFO:Initializing create_model()
2024-12-05 20:36:42,493:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C1213F8B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:36:42,493:INFO:Checking exceptions
2024-12-05 20:36:42,493:INFO:Importing libraries
2024-12-05 20:36:42,493:INFO:Copying training dataset
2024-12-05 20:36:42,527:INFO:Defining folds
2024-12-05 20:36:42,527:INFO:Declaring metric variables
2024-12-05 20:36:42,531:INFO:Importing untrained model
2024-12-05 20:36:42,537:INFO:Linear Discriminant Analysis Imported successfully
2024-12-05 20:36:42,548:INFO:Starting cross validation
2024-12-05 20:36:42,549:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:36:43,535:INFO:Calculating mean and std
2024-12-05 20:36:43,536:INFO:Creating metrics dataframe
2024-12-05 20:36:43,542:INFO:Uploading results into container
2024-12-05 20:36:43,542:INFO:Uploading model into container now
2024-12-05 20:36:43,542:INFO:_master_model_container: 11
2024-12-05 20:36:43,543:INFO:_display_container: 2
2024-12-05 20:36:43,543:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-05 20:36:43,543:INFO:create_model() successfully completed......................................
2024-12-05 20:36:43,663:INFO:SubProcess create_model() end ==================================
2024-12-05 20:36:43,663:INFO:Creating metrics dataframe
2024-12-05 20:36:43,705:INFO:Initializing Extra Trees Classifier
2024-12-05 20:36:43,706:INFO:Total runtime is 0.7137558023134868 minutes
2024-12-05 20:36:43,710:INFO:SubProcess create_model() called ==================================
2024-12-05 20:36:43,710:INFO:Initializing create_model()
2024-12-05 20:36:43,710:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C1213F8B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:36:43,710:INFO:Checking exceptions
2024-12-05 20:36:43,710:INFO:Importing libraries
2024-12-05 20:36:43,710:INFO:Copying training dataset
2024-12-05 20:36:43,751:INFO:Defining folds
2024-12-05 20:36:43,751:INFO:Declaring metric variables
2024-12-05 20:36:43,751:INFO:Importing untrained model
2024-12-05 20:36:43,761:INFO:Extra Trees Classifier Imported successfully
2024-12-05 20:36:43,769:INFO:Starting cross validation
2024-12-05 20:36:43,770:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:36:46,217:INFO:Calculating mean and std
2024-12-05 20:36:46,217:INFO:Creating metrics dataframe
2024-12-05 20:36:46,220:INFO:Uploading results into container
2024-12-05 20:36:46,220:INFO:Uploading model into container now
2024-12-05 20:36:46,220:INFO:_master_model_container: 12
2024-12-05 20:36:46,220:INFO:_display_container: 2
2024-12-05 20:36:46,220:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 20:36:46,220:INFO:create_model() successfully completed......................................
2024-12-05 20:36:46,339:INFO:SubProcess create_model() end ==================================
2024-12-05 20:36:46,339:INFO:Creating metrics dataframe
2024-12-05 20:36:46,360:INFO:Initializing Extreme Gradient Boosting
2024-12-05 20:36:46,362:INFO:Total runtime is 0.7580248753229778 minutes
2024-12-05 20:36:46,375:INFO:SubProcess create_model() called ==================================
2024-12-05 20:36:46,379:INFO:Initializing create_model()
2024-12-05 20:36:46,379:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C1213F8B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:36:46,379:INFO:Checking exceptions
2024-12-05 20:36:46,379:INFO:Importing libraries
2024-12-05 20:36:46,379:INFO:Copying training dataset
2024-12-05 20:36:46,454:INFO:Defining folds
2024-12-05 20:36:46,459:INFO:Declaring metric variables
2024-12-05 20:36:46,462:INFO:Importing untrained model
2024-12-05 20:36:46,470:INFO:Extreme Gradient Boosting Imported successfully
2024-12-05 20:36:46,489:INFO:Starting cross validation
2024-12-05 20:36:46,490:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:36:49,382:INFO:Calculating mean and std
2024-12-05 20:36:49,383:INFO:Creating metrics dataframe
2024-12-05 20:36:49,389:INFO:Uploading results into container
2024-12-05 20:36:49,390:INFO:Uploading model into container now
2024-12-05 20:36:49,392:INFO:_master_model_container: 13
2024-12-05 20:36:49,392:INFO:_display_container: 2
2024-12-05 20:36:49,392:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-12-05 20:36:49,394:INFO:create_model() successfully completed......................................
2024-12-05 20:36:49,584:INFO:SubProcess create_model() end ==================================
2024-12-05 20:36:49,585:INFO:Creating metrics dataframe
2024-12-05 20:36:49,619:INFO:Initializing Light Gradient Boosting Machine
2024-12-05 20:36:49,619:INFO:Total runtime is 0.8122998356819153 minutes
2024-12-05 20:36:49,641:INFO:SubProcess create_model() called ==================================
2024-12-05 20:36:49,642:INFO:Initializing create_model()
2024-12-05 20:36:49,642:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C1213F8B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:36:49,642:INFO:Checking exceptions
2024-12-05 20:36:49,643:INFO:Importing libraries
2024-12-05 20:36:49,643:INFO:Copying training dataset
2024-12-05 20:36:49,693:INFO:Defining folds
2024-12-05 20:36:49,700:INFO:Declaring metric variables
2024-12-05 20:36:49,707:INFO:Importing untrained model
2024-12-05 20:36:49,711:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-05 20:36:49,727:INFO:Starting cross validation
2024-12-05 20:36:49,729:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:36:52,846:INFO:Calculating mean and std
2024-12-05 20:36:52,848:INFO:Creating metrics dataframe
2024-12-05 20:36:52,856:INFO:Uploading results into container
2024-12-05 20:36:52,857:INFO:Uploading model into container now
2024-12-05 20:36:52,859:INFO:_master_model_container: 14
2024-12-05 20:36:52,859:INFO:_display_container: 2
2024-12-05 20:36:52,860:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-05 20:36:52,860:INFO:create_model() successfully completed......................................
2024-12-05 20:36:53,033:INFO:SubProcess create_model() end ==================================
2024-12-05 20:36:53,033:INFO:Creating metrics dataframe
2024-12-05 20:36:53,050:INFO:Initializing CatBoost Classifier
2024-12-05 20:36:53,051:INFO:Total runtime is 0.8695008635520936 minutes
2024-12-05 20:36:53,055:INFO:SubProcess create_model() called ==================================
2024-12-05 20:36:53,056:INFO:Initializing create_model()
2024-12-05 20:36:53,056:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C1213F8B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:36:53,056:INFO:Checking exceptions
2024-12-05 20:36:53,056:INFO:Importing libraries
2024-12-05 20:36:53,056:INFO:Copying training dataset
2024-12-05 20:36:53,100:INFO:Defining folds
2024-12-05 20:36:53,100:INFO:Declaring metric variables
2024-12-05 20:36:53,106:INFO:Importing untrained model
2024-12-05 20:36:53,111:INFO:CatBoost Classifier Imported successfully
2024-12-05 20:36:53,124:INFO:Starting cross validation
2024-12-05 20:36:53,127:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:38:08,699:INFO:Calculating mean and std
2024-12-05 20:38:08,700:INFO:Creating metrics dataframe
2024-12-05 20:38:08,700:INFO:Uploading results into container
2024-12-05 20:38:08,700:INFO:Uploading model into container now
2024-12-05 20:38:08,700:INFO:_master_model_container: 15
2024-12-05 20:38:08,700:INFO:_display_container: 2
2024-12-05 20:38:08,700:INFO:<catboost.core.CatBoostClassifier object at 0x0000023C111F56C0>
2024-12-05 20:38:08,700:INFO:create_model() successfully completed......................................
2024-12-05 20:38:08,832:INFO:SubProcess create_model() end ==================================
2024-12-05 20:38:08,832:INFO:Creating metrics dataframe
2024-12-05 20:38:08,848:INFO:Initializing Dummy Classifier
2024-12-05 20:38:08,848:INFO:Total runtime is 2.1327921787897743 minutes
2024-12-05 20:38:08,852:INFO:SubProcess create_model() called ==================================
2024-12-05 20:38:08,853:INFO:Initializing create_model()
2024-12-05 20:38:08,853:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C1213F8B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:38:08,854:INFO:Checking exceptions
2024-12-05 20:38:08,854:INFO:Importing libraries
2024-12-05 20:38:08,854:INFO:Copying training dataset
2024-12-05 20:38:08,890:INFO:Defining folds
2024-12-05 20:38:08,891:INFO:Declaring metric variables
2024-12-05 20:38:08,896:INFO:Importing untrained model
2024-12-05 20:38:08,901:INFO:Dummy Classifier Imported successfully
2024-12-05 20:38:08,912:INFO:Starting cross validation
2024-12-05 20:38:08,913:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:38:09,249:INFO:Calculating mean and std
2024-12-05 20:38:09,250:INFO:Creating metrics dataframe
2024-12-05 20:38:09,255:INFO:Uploading results into container
2024-12-05 20:38:09,256:INFO:Uploading model into container now
2024-12-05 20:38:09,256:INFO:_master_model_container: 16
2024-12-05 20:38:09,257:INFO:_display_container: 2
2024-12-05 20:38:09,257:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-12-05 20:38:09,257:INFO:create_model() successfully completed......................................
2024-12-05 20:38:09,370:INFO:SubProcess create_model() end ==================================
2024-12-05 20:38:09,370:INFO:Creating metrics dataframe
2024-12-05 20:38:09,396:INFO:Initializing create_model()
2024-12-05 20:38:09,396:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:38:09,397:INFO:Checking exceptions
2024-12-05 20:38:09,398:INFO:Importing libraries
2024-12-05 20:38:09,398:INFO:Copying training dataset
2024-12-05 20:38:09,460:INFO:Defining folds
2024-12-05 20:38:09,460:INFO:Declaring metric variables
2024-12-05 20:38:09,460:INFO:Importing untrained model
2024-12-05 20:38:09,460:INFO:Declaring custom model
2024-12-05 20:38:09,465:INFO:Decision Tree Classifier Imported successfully
2024-12-05 20:38:09,466:INFO:Cross validation set to False
2024-12-05 20:38:09,470:INFO:Fitting Model
2024-12-05 20:38:09,700:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-12-05 20:38:09,700:INFO:create_model() successfully completed......................................
2024-12-05 20:38:09,898:INFO:_master_model_container: 16
2024-12-05 20:38:09,898:INFO:_display_container: 2
2024-12-05 20:38:09,899:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-12-05 20:38:09,900:INFO:compare_models() successfully completed......................................
2024-12-05 20:39:19,097:INFO:Initializing predict_model()
2024-12-05 20:39:19,097:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C10B85510>)
2024-12-05 20:39:19,097:INFO:Checking exceptions
2024-12-05 20:39:19,098:INFO:Preloading libraries
2024-12-05 20:39:19,100:INFO:Set up data.
2024-12-05 20:39:19,155:INFO:Set up index.
2024-12-05 20:39:19,405:INFO:Initializing finalize_model()
2024-12-05 20:39:19,405:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-05 20:39:19,405:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-12-05 20:39:19,422:INFO:Initializing create_model()
2024-12-05 20:39:19,422:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:39:19,422:INFO:Checking exceptions
2024-12-05 20:39:19,422:INFO:Importing libraries
2024-12-05 20:39:19,422:INFO:Copying training dataset
2024-12-05 20:39:19,430:INFO:Defining folds
2024-12-05 20:39:19,430:INFO:Declaring metric variables
2024-12-05 20:39:19,430:INFO:Importing untrained model
2024-12-05 20:39:19,430:INFO:Declaring custom model
2024-12-05 20:39:19,430:INFO:Decision Tree Classifier Imported successfully
2024-12-05 20:39:19,431:INFO:Cross validation set to False
2024-12-05 20:39:19,431:INFO:Fitting Model
2024-12-05 20:39:19,656:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2024-12-05 20:39:19,656:INFO:create_model() successfully completed......................................
2024-12-05 20:39:19,780:INFO:_master_model_container: 16
2024-12-05 20:39:19,781:INFO:_display_container: 3
2024-12-05 20:39:19,788:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2024-12-05 20:39:19,789:INFO:finalize_model() successfully completed......................................
2024-12-05 20:39:19,925:INFO:Initializing predict_model()
2024-12-05 20:39:19,925:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C1194EB60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C080D36D0>)
2024-12-05 20:39:19,925:INFO:Checking exceptions
2024-12-05 20:39:19,925:INFO:Preloading libraries
2024-12-05 20:39:19,926:INFO:Set up data.
2024-12-05 20:39:19,981:INFO:Set up index.
2024-12-05 20:42:44,112:INFO:PyCaret ClassificationExperiment
2024-12-05 20:42:44,112:INFO:Logging name: clf-default-name
2024-12-05 20:42:44,113:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-05 20:42:44,113:INFO:version 3.3.2
2024-12-05 20:42:44,113:INFO:Initializing setup()
2024-12-05 20:42:44,113:INFO:self.USI: 7563
2024-12-05 20:42:44,113:INFO:self._variable_keys: {'y_train', 'memory', 'fold_shuffle_param', 'X', 'is_multiclass', 'html_param', 'X_test', 'log_plots_param', 'X_train', '_ml_usecase', 'fix_imbalance', 'exp_name_log', 'target_param', 'fold_generator', 'exp_id', 'fold_groups_param', 'USI', 'idx', 'pipeline', 'y_test', 'data', 'n_jobs_param', 'seed', 'y', 'logging_param', '_available_plots', 'gpu_n_jobs_param', 'gpu_param'}
2024-12-05 20:42:44,113:INFO:Checking environment
2024-12-05 20:42:44,113:INFO:python_version: 3.10.11
2024-12-05 20:42:44,113:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-12-05 20:42:44,113:INFO:machine: AMD64
2024-12-05 20:42:44,113:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-05 20:42:44,118:INFO:Memory: svmem(total=17041244160, available=4178083840, percent=75.5, used=12863160320, free=4178083840)
2024-12-05 20:42:44,118:INFO:Physical Core: 4
2024-12-05 20:42:44,118:INFO:Logical Core: 8
2024-12-05 20:42:44,118:INFO:Checking libraries
2024-12-05 20:42:44,118:INFO:System:
2024-12-05 20:42:44,118:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-12-05 20:42:44,118:INFO:executable: c:\Users\diego\AppData\Local\Programs\Python\Python310\python.exe
2024-12-05 20:42:44,118:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-05 20:42:44,118:INFO:PyCaret required dependencies:
2024-12-05 20:42:44,118:INFO:                 pip: 24.2
2024-12-05 20:42:44,118:INFO:          setuptools: 65.5.0
2024-12-05 20:42:44,118:INFO:             pycaret: 3.3.2
2024-12-05 20:42:44,118:INFO:             IPython: 8.26.0
2024-12-05 20:42:44,119:INFO:          ipywidgets: 8.1.5
2024-12-05 20:42:44,119:INFO:                tqdm: 4.66.5
2024-12-05 20:42:44,119:INFO:               numpy: 1.26.4
2024-12-05 20:42:44,119:INFO:              pandas: 1.5.3
2024-12-05 20:42:44,119:INFO:              jinja2: 3.1.4
2024-12-05 20:42:44,119:INFO:               scipy: 1.11.4
2024-12-05 20:42:44,119:INFO:              joblib: 1.3.2
2024-12-05 20:42:44,119:INFO:             sklearn: 1.4.2
2024-12-05 20:42:44,119:INFO:                pyod: 2.0.2
2024-12-05 20:42:44,119:INFO:            imblearn: 0.12.3
2024-12-05 20:42:44,119:INFO:   category_encoders: 2.6.4
2024-12-05 20:42:44,119:INFO:            lightgbm: 4.5.0
2024-12-05 20:42:44,119:INFO:               numba: 0.60.0
2024-12-05 20:42:44,119:INFO:            requests: 2.32.3
2024-12-05 20:42:44,119:INFO:          matplotlib: 3.7.5
2024-12-05 20:42:44,119:INFO:          scikitplot: 0.3.7
2024-12-05 20:42:44,119:INFO:         yellowbrick: 1.5
2024-12-05 20:42:44,119:INFO:              plotly: 5.24.1
2024-12-05 20:42:44,119:INFO:    plotly-resampler: Not installed
2024-12-05 20:42:44,119:INFO:             kaleido: 0.2.1
2024-12-05 20:42:44,119:INFO:           schemdraw: 0.15
2024-12-05 20:42:44,119:INFO:         statsmodels: 0.14.4
2024-12-05 20:42:44,119:INFO:              sktime: 0.26.0
2024-12-05 20:42:44,119:INFO:               tbats: 1.1.3
2024-12-05 20:42:44,119:INFO:            pmdarima: 2.0.4
2024-12-05 20:42:44,119:INFO:              psutil: 6.0.0
2024-12-05 20:42:44,119:INFO:          markupsafe: 2.1.5
2024-12-05 20:42:44,119:INFO:             pickle5: Not installed
2024-12-05 20:42:44,119:INFO:         cloudpickle: 3.1.0
2024-12-05 20:42:44,119:INFO:         deprecation: 2.1.0
2024-12-05 20:42:44,119:INFO:              xxhash: 3.5.0
2024-12-05 20:42:44,119:INFO:           wurlitzer: Not installed
2024-12-05 20:42:44,119:INFO:PyCaret optional dependencies:
2024-12-05 20:42:44,119:INFO:                shap: 0.44.0
2024-12-05 20:42:44,119:INFO:           interpret: 0.5.0
2024-12-05 20:42:44,119:INFO:                umap: 0.5.6
2024-12-05 20:42:44,119:INFO:     ydata_profiling: 4.11.0
2024-12-05 20:42:44,119:INFO:  explainerdashboard: 0.4.7
2024-12-05 20:42:44,119:INFO:             autoviz: Not installed
2024-12-05 20:42:44,119:INFO:           fairlearn: 0.7.0
2024-12-05 20:42:44,119:INFO:          deepchecks: Not installed
2024-12-05 20:42:44,120:INFO:             xgboost: 2.1.2
2024-12-05 20:42:44,120:INFO:            catboost: 1.2.7
2024-12-05 20:42:44,120:INFO:              kmodes: Not installed
2024-12-05 20:42:44,120:INFO:             mlxtend: Not installed
2024-12-05 20:42:44,120:INFO:       statsforecast: Not installed
2024-12-05 20:42:44,120:INFO:        tune_sklearn: Not installed
2024-12-05 20:42:44,120:INFO:                 ray: Not installed
2024-12-05 20:42:44,120:INFO:            hyperopt: Not installed
2024-12-05 20:42:44,120:INFO:              optuna: 4.0.0
2024-12-05 20:42:44,120:INFO:               skopt: Not installed
2024-12-05 20:42:44,120:INFO:              mlflow: 2.18.0
2024-12-05 20:42:44,120:INFO:              gradio: Not installed
2024-12-05 20:42:44,120:INFO:             fastapi: Not installed
2024-12-05 20:42:44,120:INFO:             uvicorn: Not installed
2024-12-05 20:42:44,120:INFO:              m2cgen: Not installed
2024-12-05 20:42:44,120:INFO:           evidently: Not installed
2024-12-05 20:42:44,120:INFO:               fugue: Not installed
2024-12-05 20:42:44,120:INFO:           streamlit: 1.39.0
2024-12-05 20:42:44,120:INFO:             prophet: Not installed
2024-12-05 20:42:44,120:INFO:None
2024-12-05 20:42:44,120:INFO:Set up data.
2024-12-05 20:42:44,195:INFO:Set up folding strategy.
2024-12-05 20:42:44,195:INFO:Set up train/test split.
2024-12-05 20:42:44,236:INFO:Set up index.
2024-12-05 20:42:44,239:INFO:Assigning column types.
2024-12-05 20:42:44,267:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-05 20:42:44,347:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 20:42:44,348:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 20:42:44,386:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:42:44,388:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:42:44,435:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 20:42:44,436:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 20:42:44,479:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:42:44,487:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:42:44,487:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-05 20:42:44,529:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 20:42:44,576:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:42:44,578:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:42:44,619:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 20:42:44,651:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:42:44,651:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:42:44,651:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-05 20:42:44,729:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:42:44,735:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:42:44,838:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:42:44,842:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:42:44,843:INFO:Preparing preprocessing pipeline...
2024-12-05 20:42:44,847:INFO:Set up simple imputation.
2024-12-05 20:42:44,952:INFO:Finished creating preprocessing pipeline.
2024-12-05 20:42:44,960:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\diego\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_et...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-12-05 20:42:44,960:INFO:Creating final display dataframe.
2024-12-05 20:42:45,319:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            target
2                   Target type            Binary
3           Original data shape       (31007, 78)
4        Transformed data shape       (31007, 77)
5   Transformed train set shape       (21704, 77)
6    Transformed test set shape        (9303, 77)
7               Ignore features                 1
8              Numeric features                76
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                 5
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              7563
2024-12-05 20:42:45,409:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:42:45,419:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:42:45,493:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:42:45,493:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:42:45,499:INFO:setup() successfully completed in 1.44s...............
2024-12-05 20:42:45,539:INFO:Initializing compare_models()
2024-12-05 20:42:45,543:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-05 20:42:45,543:INFO:Checking exceptions
2024-12-05 20:42:45,569:INFO:Preparing display monitor
2024-12-05 20:42:45,600:INFO:Initializing Logistic Regression
2024-12-05 20:42:45,601:INFO:Total runtime is 2.154111862182617e-05 minutes
2024-12-05 20:42:45,605:INFO:SubProcess create_model() called ==================================
2024-12-05 20:42:45,605:INFO:Initializing create_model()
2024-12-05 20:42:45,605:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C10DF1C60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:42:45,605:INFO:Checking exceptions
2024-12-05 20:42:45,605:INFO:Importing libraries
2024-12-05 20:42:45,605:INFO:Copying training dataset
2024-12-05 20:42:45,653:INFO:Defining folds
2024-12-05 20:42:45,653:INFO:Declaring metric variables
2024-12-05 20:42:45,658:INFO:Importing untrained model
2024-12-05 20:42:45,665:INFO:Logistic Regression Imported successfully
2024-12-05 20:42:45,674:INFO:Starting cross validation
2024-12-05 20:42:45,676:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:42:52,099:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-12-05 20:42:52,099:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-12-05 20:42:52,099:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-12-05 20:42:52,169:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-12-05 20:42:52,335:INFO:Calculating mean and std
2024-12-05 20:42:52,335:INFO:Creating metrics dataframe
2024-12-05 20:42:52,339:INFO:Uploading results into container
2024-12-05 20:42:52,339:INFO:Uploading model into container now
2024-12-05 20:42:52,339:INFO:_master_model_container: 1
2024-12-05 20:42:52,339:INFO:_display_container: 2
2024-12-05 20:42:52,339:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-05 20:42:52,339:INFO:create_model() successfully completed......................................
2024-12-05 20:42:52,459:INFO:SubProcess create_model() end ==================================
2024-12-05 20:42:52,459:INFO:Creating metrics dataframe
2024-12-05 20:42:52,472:INFO:Initializing K Neighbors Classifier
2024-12-05 20:42:52,472:INFO:Total runtime is 0.1145355463027954 minutes
2024-12-05 20:42:52,479:INFO:SubProcess create_model() called ==================================
2024-12-05 20:42:52,479:INFO:Initializing create_model()
2024-12-05 20:42:52,479:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C10DF1C60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:42:52,479:INFO:Checking exceptions
2024-12-05 20:42:52,479:INFO:Importing libraries
2024-12-05 20:42:52,479:INFO:Copying training dataset
2024-12-05 20:42:52,519:INFO:Defining folds
2024-12-05 20:42:52,519:INFO:Declaring metric variables
2024-12-05 20:42:52,522:INFO:Importing untrained model
2024-12-05 20:42:52,526:INFO:K Neighbors Classifier Imported successfully
2024-12-05 20:42:52,535:INFO:Starting cross validation
2024-12-05 20:42:52,535:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:42:55,138:INFO:Calculating mean and std
2024-12-05 20:42:55,140:INFO:Creating metrics dataframe
2024-12-05 20:42:55,145:INFO:Uploading results into container
2024-12-05 20:42:55,146:INFO:Uploading model into container now
2024-12-05 20:42:55,148:INFO:_master_model_container: 2
2024-12-05 20:42:55,148:INFO:_display_container: 2
2024-12-05 20:42:55,148:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-05 20:42:55,148:INFO:create_model() successfully completed......................................
2024-12-05 20:42:55,318:INFO:SubProcess create_model() end ==================================
2024-12-05 20:42:55,318:INFO:Creating metrics dataframe
2024-12-05 20:42:55,329:INFO:Initializing Naive Bayes
2024-12-05 20:42:55,329:INFO:Total runtime is 0.16215044260025024 minutes
2024-12-05 20:42:55,335:INFO:SubProcess create_model() called ==================================
2024-12-05 20:42:55,335:INFO:Initializing create_model()
2024-12-05 20:42:55,335:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C10DF1C60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:42:55,335:INFO:Checking exceptions
2024-12-05 20:42:55,335:INFO:Importing libraries
2024-12-05 20:42:55,335:INFO:Copying training dataset
2024-12-05 20:42:55,370:INFO:Defining folds
2024-12-05 20:42:55,376:INFO:Declaring metric variables
2024-12-05 20:42:55,379:INFO:Importing untrained model
2024-12-05 20:42:55,386:INFO:Naive Bayes Imported successfully
2024-12-05 20:42:55,394:INFO:Starting cross validation
2024-12-05 20:42:55,395:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:42:55,807:INFO:Calculating mean and std
2024-12-05 20:42:55,809:INFO:Creating metrics dataframe
2024-12-05 20:42:55,809:INFO:Uploading results into container
2024-12-05 20:42:55,809:INFO:Uploading model into container now
2024-12-05 20:42:55,809:INFO:_master_model_container: 3
2024-12-05 20:42:55,809:INFO:_display_container: 2
2024-12-05 20:42:55,809:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-05 20:42:55,809:INFO:create_model() successfully completed......................................
2024-12-05 20:42:55,937:INFO:SubProcess create_model() end ==================================
2024-12-05 20:42:55,937:INFO:Creating metrics dataframe
2024-12-05 20:42:55,949:INFO:Initializing Decision Tree Classifier
2024-12-05 20:42:55,949:INFO:Total runtime is 0.17248424688975017 minutes
2024-12-05 20:42:55,955:INFO:SubProcess create_model() called ==================================
2024-12-05 20:42:55,955:INFO:Initializing create_model()
2024-12-05 20:42:55,955:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C10DF1C60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:42:55,955:INFO:Checking exceptions
2024-12-05 20:42:55,955:INFO:Importing libraries
2024-12-05 20:42:55,955:INFO:Copying training dataset
2024-12-05 20:42:55,993:INFO:Defining folds
2024-12-05 20:42:55,993:INFO:Declaring metric variables
2024-12-05 20:42:55,993:INFO:Importing untrained model
2024-12-05 20:42:56,002:INFO:Decision Tree Classifier Imported successfully
2024-12-05 20:42:56,010:INFO:Starting cross validation
2024-12-05 20:42:56,012:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:42:58,808:INFO:Calculating mean and std
2024-12-05 20:42:58,809:INFO:Creating metrics dataframe
2024-12-05 20:42:58,809:INFO:Uploading results into container
2024-12-05 20:42:58,809:INFO:Uploading model into container now
2024-12-05 20:42:58,809:INFO:_master_model_container: 4
2024-12-05 20:42:58,809:INFO:_display_container: 2
2024-12-05 20:42:58,809:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-12-05 20:42:58,809:INFO:create_model() successfully completed......................................
2024-12-05 20:42:58,919:INFO:SubProcess create_model() end ==================================
2024-12-05 20:42:58,924:INFO:Creating metrics dataframe
2024-12-05 20:42:58,939:INFO:Initializing SVM - Linear Kernel
2024-12-05 20:42:58,939:INFO:Total runtime is 0.22231814463933308 minutes
2024-12-05 20:42:58,946:INFO:SubProcess create_model() called ==================================
2024-12-05 20:42:58,946:INFO:Initializing create_model()
2024-12-05 20:42:58,947:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C10DF1C60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:42:58,947:INFO:Checking exceptions
2024-12-05 20:42:58,947:INFO:Importing libraries
2024-12-05 20:42:58,947:INFO:Copying training dataset
2024-12-05 20:42:59,002:INFO:Defining folds
2024-12-05 20:42:59,002:INFO:Declaring metric variables
2024-12-05 20:42:59,006:INFO:Importing untrained model
2024-12-05 20:42:59,010:INFO:SVM - Linear Kernel Imported successfully
2024-12-05 20:42:59,016:INFO:Starting cross validation
2024-12-05 20:42:59,018:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:43:01,567:INFO:Calculating mean and std
2024-12-05 20:43:01,569:INFO:Creating metrics dataframe
2024-12-05 20:43:01,570:INFO:Uploading results into container
2024-12-05 20:43:01,570:INFO:Uploading model into container now
2024-12-05 20:43:01,570:INFO:_master_model_container: 5
2024-12-05 20:43:01,570:INFO:_display_container: 2
2024-12-05 20:43:01,570:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-05 20:43:01,570:INFO:create_model() successfully completed......................................
2024-12-05 20:43:01,685:INFO:SubProcess create_model() end ==================================
2024-12-05 20:43:01,686:INFO:Creating metrics dataframe
2024-12-05 20:43:01,716:INFO:Initializing Ridge Classifier
2024-12-05 20:43:01,724:INFO:Total runtime is 0.268735925356547 minutes
2024-12-05 20:43:01,729:INFO:SubProcess create_model() called ==================================
2024-12-05 20:43:01,729:INFO:Initializing create_model()
2024-12-05 20:43:01,729:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C10DF1C60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:43:01,729:INFO:Checking exceptions
2024-12-05 20:43:01,729:INFO:Importing libraries
2024-12-05 20:43:01,729:INFO:Copying training dataset
2024-12-05 20:43:01,799:INFO:Defining folds
2024-12-05 20:43:01,799:INFO:Declaring metric variables
2024-12-05 20:43:01,801:INFO:Importing untrained model
2024-12-05 20:43:01,801:INFO:Ridge Classifier Imported successfully
2024-12-05 20:43:01,811:INFO:Starting cross validation
2024-12-05 20:43:01,817:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:43:02,004:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.60917e-22): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-12-05 20:43:02,601:INFO:Calculating mean and std
2024-12-05 20:43:02,601:INFO:Creating metrics dataframe
2024-12-05 20:43:02,601:INFO:Uploading results into container
2024-12-05 20:43:02,601:INFO:Uploading model into container now
2024-12-05 20:43:02,601:INFO:_master_model_container: 6
2024-12-05 20:43:02,601:INFO:_display_container: 2
2024-12-05 20:43:02,609:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-12-05 20:43:02,609:INFO:create_model() successfully completed......................................
2024-12-05 20:43:02,720:INFO:SubProcess create_model() end ==================================
2024-12-05 20:43:02,720:INFO:Creating metrics dataframe
2024-12-05 20:43:02,729:INFO:Initializing Random Forest Classifier
2024-12-05 20:43:02,729:INFO:Total runtime is 0.2854898293813069 minutes
2024-12-05 20:43:02,734:INFO:SubProcess create_model() called ==================================
2024-12-05 20:43:02,734:INFO:Initializing create_model()
2024-12-05 20:43:02,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C10DF1C60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:43:02,734:INFO:Checking exceptions
2024-12-05 20:43:02,734:INFO:Importing libraries
2024-12-05 20:43:02,734:INFO:Copying training dataset
2024-12-05 20:43:02,769:INFO:Defining folds
2024-12-05 20:43:02,769:INFO:Declaring metric variables
2024-12-05 20:43:02,776:INFO:Importing untrained model
2024-12-05 20:43:02,779:INFO:Random Forest Classifier Imported successfully
2024-12-05 20:43:02,789:INFO:Starting cross validation
2024-12-05 20:43:02,792:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:43:15,059:INFO:Calculating mean and std
2024-12-05 20:43:15,059:INFO:Creating metrics dataframe
2024-12-05 20:43:15,059:INFO:Uploading results into container
2024-12-05 20:43:15,059:INFO:Uploading model into container now
2024-12-05 20:43:15,059:INFO:_master_model_container: 7
2024-12-05 20:43:15,059:INFO:_display_container: 2
2024-12-05 20:43:15,059:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 20:43:15,059:INFO:create_model() successfully completed......................................
2024-12-05 20:43:15,211:INFO:SubProcess create_model() end ==================================
2024-12-05 20:43:15,211:INFO:Creating metrics dataframe
2024-12-05 20:43:15,234:INFO:Initializing Quadratic Discriminant Analysis
2024-12-05 20:43:15,234:INFO:Total runtime is 0.49391017754872635 minutes
2024-12-05 20:43:15,239:INFO:SubProcess create_model() called ==================================
2024-12-05 20:43:15,239:INFO:Initializing create_model()
2024-12-05 20:43:15,239:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C10DF1C60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:43:15,239:INFO:Checking exceptions
2024-12-05 20:43:15,242:INFO:Importing libraries
2024-12-05 20:43:15,242:INFO:Copying training dataset
2024-12-05 20:43:15,282:INFO:Defining folds
2024-12-05 20:43:15,282:INFO:Declaring metric variables
2024-12-05 20:43:15,293:INFO:Importing untrained model
2024-12-05 20:43:15,299:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-05 20:43:15,312:INFO:Starting cross validation
2024-12-05 20:43:15,314:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:43:15,744:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 20:43:15,754:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 20:43:15,754:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 20:43:15,754:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 20:43:15,764:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 20:43:16,248:INFO:Calculating mean and std
2024-12-05 20:43:16,249:INFO:Creating metrics dataframe
2024-12-05 20:43:16,249:INFO:Uploading results into container
2024-12-05 20:43:16,249:INFO:Uploading model into container now
2024-12-05 20:43:16,249:INFO:_master_model_container: 8
2024-12-05 20:43:16,249:INFO:_display_container: 2
2024-12-05 20:43:16,254:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-05 20:43:16,254:INFO:create_model() successfully completed......................................
2024-12-05 20:43:16,369:INFO:SubProcess create_model() end ==================================
2024-12-05 20:43:16,369:INFO:Creating metrics dataframe
2024-12-05 20:43:16,387:INFO:Initializing Ada Boost Classifier
2024-12-05 20:43:16,387:INFO:Total runtime is 0.5131254474322 minutes
2024-12-05 20:43:16,392:INFO:SubProcess create_model() called ==================================
2024-12-05 20:43:16,392:INFO:Initializing create_model()
2024-12-05 20:43:16,392:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C10DF1C60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:43:16,392:INFO:Checking exceptions
2024-12-05 20:43:16,392:INFO:Importing libraries
2024-12-05 20:43:16,392:INFO:Copying training dataset
2024-12-05 20:43:16,459:INFO:Defining folds
2024-12-05 20:43:16,459:INFO:Declaring metric variables
2024-12-05 20:43:16,470:INFO:Importing untrained model
2024-12-05 20:43:16,479:INFO:Ada Boost Classifier Imported successfully
2024-12-05 20:43:16,489:INFO:Starting cross validation
2024-12-05 20:43:16,491:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:43:16,609:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 20:43:16,624:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 20:43:16,624:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 20:43:16,629:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 20:43:16,644:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 20:43:24,334:INFO:Calculating mean and std
2024-12-05 20:43:24,336:INFO:Creating metrics dataframe
2024-12-05 20:43:24,339:INFO:Uploading results into container
2024-12-05 20:43:24,339:INFO:Uploading model into container now
2024-12-05 20:43:24,340:INFO:_master_model_container: 9
2024-12-05 20:43:24,340:INFO:_display_container: 2
2024-12-05 20:43:24,340:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-12-05 20:43:24,340:INFO:create_model() successfully completed......................................
2024-12-05 20:43:24,489:INFO:SubProcess create_model() end ==================================
2024-12-05 20:43:24,489:INFO:Creating metrics dataframe
2024-12-05 20:43:24,501:INFO:Initializing Gradient Boosting Classifier
2024-12-05 20:43:24,501:INFO:Total runtime is 0.6483455936113992 minutes
2024-12-05 20:43:24,511:INFO:SubProcess create_model() called ==================================
2024-12-05 20:43:24,512:INFO:Initializing create_model()
2024-12-05 20:43:24,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C10DF1C60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:43:24,512:INFO:Checking exceptions
2024-12-05 20:43:24,512:INFO:Importing libraries
2024-12-05 20:43:24,512:INFO:Copying training dataset
2024-12-05 20:43:24,551:INFO:Defining folds
2024-12-05 20:43:24,551:INFO:Declaring metric variables
2024-12-05 20:43:24,556:INFO:Importing untrained model
2024-12-05 20:43:24,560:INFO:Gradient Boosting Classifier Imported successfully
2024-12-05 20:43:24,573:INFO:Starting cross validation
2024-12-05 20:43:24,575:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:44:04,086:INFO:Calculating mean and std
2024-12-05 20:44:04,086:INFO:Creating metrics dataframe
2024-12-05 20:44:04,092:INFO:Uploading results into container
2024-12-05 20:44:04,092:INFO:Uploading model into container now
2024-12-05 20:44:04,092:INFO:_master_model_container: 10
2024-12-05 20:44:04,092:INFO:_display_container: 2
2024-12-05 20:44:04,092:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-05 20:44:04,095:INFO:create_model() successfully completed......................................
2024-12-05 20:44:04,222:INFO:SubProcess create_model() end ==================================
2024-12-05 20:44:04,222:INFO:Creating metrics dataframe
2024-12-05 20:44:04,237:INFO:Initializing Linear Discriminant Analysis
2024-12-05 20:44:04,237:INFO:Total runtime is 1.310611343383789 minutes
2024-12-05 20:44:04,242:INFO:SubProcess create_model() called ==================================
2024-12-05 20:44:04,243:INFO:Initializing create_model()
2024-12-05 20:44:04,243:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C10DF1C60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:44:04,243:INFO:Checking exceptions
2024-12-05 20:44:04,243:INFO:Importing libraries
2024-12-05 20:44:04,244:INFO:Copying training dataset
2024-12-05 20:44:04,283:INFO:Defining folds
2024-12-05 20:44:04,283:INFO:Declaring metric variables
2024-12-05 20:44:04,289:INFO:Importing untrained model
2024-12-05 20:44:04,294:INFO:Linear Discriminant Analysis Imported successfully
2024-12-05 20:44:04,304:INFO:Starting cross validation
2024-12-05 20:44:04,306:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:44:05,302:INFO:Calculating mean and std
2024-12-05 20:44:05,307:INFO:Creating metrics dataframe
2024-12-05 20:44:05,312:INFO:Uploading results into container
2024-12-05 20:44:05,313:INFO:Uploading model into container now
2024-12-05 20:44:05,313:INFO:_master_model_container: 11
2024-12-05 20:44:05,314:INFO:_display_container: 2
2024-12-05 20:44:05,315:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-05 20:44:05,315:INFO:create_model() successfully completed......................................
2024-12-05 20:44:05,532:INFO:SubProcess create_model() end ==================================
2024-12-05 20:44:05,533:INFO:Creating metrics dataframe
2024-12-05 20:44:05,542:INFO:Initializing Extra Trees Classifier
2024-12-05 20:44:05,542:INFO:Total runtime is 1.3323638955752053 minutes
2024-12-05 20:44:05,552:INFO:SubProcess create_model() called ==================================
2024-12-05 20:44:05,553:INFO:Initializing create_model()
2024-12-05 20:44:05,553:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C10DF1C60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:44:05,553:INFO:Checking exceptions
2024-12-05 20:44:05,553:INFO:Importing libraries
2024-12-05 20:44:05,554:INFO:Copying training dataset
2024-12-05 20:44:05,588:INFO:Defining folds
2024-12-05 20:44:05,588:INFO:Declaring metric variables
2024-12-05 20:44:05,593:INFO:Importing untrained model
2024-12-05 20:44:05,600:INFO:Extra Trees Classifier Imported successfully
2024-12-05 20:44:05,610:INFO:Starting cross validation
2024-12-05 20:44:05,612:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:44:11,657:INFO:Calculating mean and std
2024-12-05 20:44:11,658:INFO:Creating metrics dataframe
2024-12-05 20:44:11,661:INFO:Uploading results into container
2024-12-05 20:44:11,661:INFO:Uploading model into container now
2024-12-05 20:44:11,661:INFO:_master_model_container: 12
2024-12-05 20:44:11,665:INFO:_display_container: 2
2024-12-05 20:44:11,666:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 20:44:11,666:INFO:create_model() successfully completed......................................
2024-12-05 20:44:11,822:INFO:SubProcess create_model() end ==================================
2024-12-05 20:44:11,824:INFO:Creating metrics dataframe
2024-12-05 20:44:11,840:INFO:Initializing Extreme Gradient Boosting
2024-12-05 20:44:11,841:INFO:Total runtime is 1.4373455286026 minutes
2024-12-05 20:44:11,843:INFO:SubProcess create_model() called ==================================
2024-12-05 20:44:11,843:INFO:Initializing create_model()
2024-12-05 20:44:11,843:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C10DF1C60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:44:11,843:INFO:Checking exceptions
2024-12-05 20:44:11,843:INFO:Importing libraries
2024-12-05 20:44:11,843:INFO:Copying training dataset
2024-12-05 20:44:11,896:INFO:Defining folds
2024-12-05 20:44:11,897:INFO:Declaring metric variables
2024-12-05 20:44:11,902:INFO:Importing untrained model
2024-12-05 20:44:11,908:INFO:Extreme Gradient Boosting Imported successfully
2024-12-05 20:44:11,941:INFO:Starting cross validation
2024-12-05 20:44:11,948:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:44:16,836:INFO:Calculating mean and std
2024-12-05 20:44:16,837:INFO:Creating metrics dataframe
2024-12-05 20:44:16,841:INFO:Uploading results into container
2024-12-05 20:44:16,842:INFO:Uploading model into container now
2024-12-05 20:44:16,842:INFO:_master_model_container: 13
2024-12-05 20:44:16,842:INFO:_display_container: 2
2024-12-05 20:44:16,842:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-12-05 20:44:16,842:INFO:create_model() successfully completed......................................
2024-12-05 20:44:16,983:INFO:SubProcess create_model() end ==================================
2024-12-05 20:44:16,983:INFO:Creating metrics dataframe
2024-12-05 20:44:17,002:INFO:Initializing Light Gradient Boosting Machine
2024-12-05 20:44:17,002:INFO:Total runtime is 1.5233638405799865 minutes
2024-12-05 20:44:17,006:INFO:SubProcess create_model() called ==================================
2024-12-05 20:44:17,006:INFO:Initializing create_model()
2024-12-05 20:44:17,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C10DF1C60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:44:17,007:INFO:Checking exceptions
2024-12-05 20:44:17,007:INFO:Importing libraries
2024-12-05 20:44:17,007:INFO:Copying training dataset
2024-12-05 20:44:17,052:INFO:Defining folds
2024-12-05 20:44:17,052:INFO:Declaring metric variables
2024-12-05 20:44:17,057:INFO:Importing untrained model
2024-12-05 20:44:17,061:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-05 20:44:17,072:INFO:Starting cross validation
2024-12-05 20:44:17,074:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:44:21,742:INFO:Calculating mean and std
2024-12-05 20:44:21,750:INFO:Creating metrics dataframe
2024-12-05 20:44:21,755:INFO:Uploading results into container
2024-12-05 20:44:21,757:INFO:Uploading model into container now
2024-12-05 20:44:21,758:INFO:_master_model_container: 14
2024-12-05 20:44:21,758:INFO:_display_container: 2
2024-12-05 20:44:21,758:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-05 20:44:21,758:INFO:create_model() successfully completed......................................
2024-12-05 20:44:21,942:INFO:SubProcess create_model() end ==================================
2024-12-05 20:44:21,942:INFO:Creating metrics dataframe
2024-12-05 20:44:21,962:INFO:Initializing CatBoost Classifier
2024-12-05 20:44:21,962:INFO:Total runtime is 1.6060304363568623 minutes
2024-12-05 20:44:21,969:INFO:SubProcess create_model() called ==================================
2024-12-05 20:44:21,970:INFO:Initializing create_model()
2024-12-05 20:44:21,970:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C10DF1C60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:44:21,970:INFO:Checking exceptions
2024-12-05 20:44:21,970:INFO:Importing libraries
2024-12-05 20:44:21,970:INFO:Copying training dataset
2024-12-05 20:44:22,016:INFO:Defining folds
2024-12-05 20:44:22,016:INFO:Declaring metric variables
2024-12-05 20:44:22,026:INFO:Importing untrained model
2024-12-05 20:44:22,026:INFO:CatBoost Classifier Imported successfully
2024-12-05 20:44:22,040:INFO:Starting cross validation
2024-12-05 20:44:22,042:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:45:28,079:INFO:Calculating mean and std
2024-12-05 20:45:28,085:INFO:Creating metrics dataframe
2024-12-05 20:45:28,104:INFO:Uploading results into container
2024-12-05 20:45:28,107:INFO:Uploading model into container now
2024-12-05 20:45:28,112:INFO:_master_model_container: 15
2024-12-05 20:45:28,112:INFO:_display_container: 2
2024-12-05 20:45:28,112:INFO:<catboost.core.CatBoostClassifier object at 0x0000023C02664370>
2024-12-05 20:45:28,112:INFO:create_model() successfully completed......................................
2024-12-05 20:45:28,323:INFO:SubProcess create_model() end ==================================
2024-12-05 20:45:28,323:INFO:Creating metrics dataframe
2024-12-05 20:45:28,342:INFO:Initializing Dummy Classifier
2024-12-05 20:45:28,342:INFO:Total runtime is 2.7123628298441567 minutes
2024-12-05 20:45:28,351:INFO:SubProcess create_model() called ==================================
2024-12-05 20:45:28,351:INFO:Initializing create_model()
2024-12-05 20:45:28,351:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C10DF1C60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:45:28,351:INFO:Checking exceptions
2024-12-05 20:45:28,351:INFO:Importing libraries
2024-12-05 20:45:28,351:INFO:Copying training dataset
2024-12-05 20:45:28,457:INFO:Defining folds
2024-12-05 20:45:28,457:INFO:Declaring metric variables
2024-12-05 20:45:28,475:INFO:Importing untrained model
2024-12-05 20:45:28,475:INFO:Dummy Classifier Imported successfully
2024-12-05 20:45:28,486:INFO:Starting cross validation
2024-12-05 20:45:28,489:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:45:28,812:INFO:Calculating mean and std
2024-12-05 20:45:28,812:INFO:Creating metrics dataframe
2024-12-05 20:45:28,832:INFO:Uploading results into container
2024-12-05 20:45:28,836:INFO:Uploading model into container now
2024-12-05 20:45:28,838:INFO:_master_model_container: 16
2024-12-05 20:45:28,839:INFO:_display_container: 2
2024-12-05 20:45:28,839:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-12-05 20:45:28,839:INFO:create_model() successfully completed......................................
2024-12-05 20:45:29,114:INFO:SubProcess create_model() end ==================================
2024-12-05 20:45:29,114:INFO:Creating metrics dataframe
2024-12-05 20:45:29,152:INFO:Initializing create_model()
2024-12-05 20:45:29,152:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:45:29,152:INFO:Checking exceptions
2024-12-05 20:45:29,152:INFO:Importing libraries
2024-12-05 20:45:29,152:INFO:Copying training dataset
2024-12-05 20:45:29,214:INFO:Defining folds
2024-12-05 20:45:29,214:INFO:Declaring metric variables
2024-12-05 20:45:29,214:INFO:Importing untrained model
2024-12-05 20:45:29,215:INFO:Declaring custom model
2024-12-05 20:45:29,216:INFO:Random Forest Classifier Imported successfully
2024-12-05 20:45:29,217:INFO:Cross validation set to False
2024-12-05 20:45:29,217:INFO:Fitting Model
2024-12-05 20:45:32,372:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 20:45:32,372:INFO:create_model() successfully completed......................................
2024-12-05 20:45:32,648:INFO:_master_model_container: 16
2024-12-05 20:45:32,648:INFO:_display_container: 2
2024-12-05 20:45:32,649:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 20:45:32,658:INFO:compare_models() successfully completed......................................
2024-12-05 20:45:32,786:INFO:Initializing predict_model()
2024-12-05 20:45:32,786:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C04E080D0>)
2024-12-05 20:45:32,786:INFO:Checking exceptions
2024-12-05 20:45:32,787:INFO:Preloading libraries
2024-12-05 20:45:32,790:INFO:Set up data.
2024-12-05 20:45:32,892:INFO:Set up index.
2024-12-05 20:45:33,257:INFO:Initializing finalize_model()
2024-12-05 20:45:33,257:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-05 20:45:33,257:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 20:45:33,276:INFO:Initializing create_model()
2024-12-05 20:45:33,276:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:45:33,276:INFO:Checking exceptions
2024-12-05 20:45:33,278:INFO:Importing libraries
2024-12-05 20:45:33,278:INFO:Copying training dataset
2024-12-05 20:45:33,281:INFO:Defining folds
2024-12-05 20:45:33,281:INFO:Declaring metric variables
2024-12-05 20:45:33,281:INFO:Importing untrained model
2024-12-05 20:45:33,281:INFO:Declaring custom model
2024-12-05 20:45:33,281:INFO:Random Forest Classifier Imported successfully
2024-12-05 20:45:33,282:INFO:Cross validation set to False
2024-12-05 20:45:33,282:INFO:Fitting Model
2024-12-05 20:45:38,082:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-12-05 20:45:38,082:INFO:create_model() successfully completed......................................
2024-12-05 20:45:38,192:INFO:_master_model_container: 16
2024-12-05 20:45:38,192:INFO:_display_container: 3
2024-12-05 20:45:38,197:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-12-05 20:45:38,197:INFO:finalize_model() successfully completed......................................
2024-12-05 20:45:38,321:INFO:Initializing predict_model()
2024-12-05 20:45:38,321:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C10BCC700>)
2024-12-05 20:45:38,321:INFO:Checking exceptions
2024-12-05 20:45:38,321:INFO:Preloading libraries
2024-12-05 20:45:38,324:INFO:Set up data.
2024-12-05 20:45:38,363:INFO:Set up index.
2024-12-05 20:47:14,991:INFO:Initializing finalize_model()
2024-12-05 20:47:14,991:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-05 20:47:14,992:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 20:47:15,013:INFO:Initializing create_model()
2024-12-05 20:47:15,013:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:47:15,013:INFO:Checking exceptions
2024-12-05 20:47:15,021:INFO:Importing libraries
2024-12-05 20:47:15,021:INFO:Copying training dataset
2024-12-05 20:47:15,023:INFO:Defining folds
2024-12-05 20:47:15,023:INFO:Declaring metric variables
2024-12-05 20:47:15,024:INFO:Importing untrained model
2024-12-05 20:47:15,024:INFO:Declaring custom model
2024-12-05 20:47:15,024:INFO:Random Forest Classifier Imported successfully
2024-12-05 20:47:15,025:INFO:Cross validation set to False
2024-12-05 20:47:15,025:INFO:Fitting Model
2024-12-05 20:47:19,272:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-12-05 20:47:19,272:INFO:create_model() successfully completed......................................
2024-12-05 20:47:19,381:INFO:_master_model_container: 16
2024-12-05 20:47:19,381:INFO:_display_container: 4
2024-12-05 20:47:19,394:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-12-05 20:47:19,394:INFO:finalize_model() successfully completed......................................
2024-12-05 20:47:19,503:INFO:Initializing predict_model()
2024-12-05 20:47:19,503:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C0D176440>)
2024-12-05 20:47:19,503:INFO:Checking exceptions
2024-12-05 20:47:19,503:INFO:Preloading libraries
2024-12-05 20:47:19,503:INFO:Set up data.
2024-12-05 20:47:19,554:INFO:Set up index.
2024-12-05 20:47:28,279:INFO:Initializing finalize_model()
2024-12-05 20:47:28,279:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-05 20:47:28,287:INFO:Finalizing Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-12-05 20:47:28,341:INFO:Initializing create_model()
2024-12-05 20:47:28,341:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:47:28,341:INFO:Checking exceptions
2024-12-05 20:47:28,364:INFO:Importing libraries
2024-12-05 20:47:28,364:INFO:Copying training dataset
2024-12-05 20:47:28,369:INFO:Defining folds
2024-12-05 20:47:28,369:INFO:Declaring metric variables
2024-12-05 20:47:28,369:INFO:Importing untrained model
2024-12-05 20:47:28,369:INFO:Declaring custom model
2024-12-05 20:47:28,373:INFO:Random Forest Classifier Imported successfully
2024-12-05 20:47:28,374:INFO:Cross validation set to False
2024-12-05 20:47:28,374:INFO:Fitting Model
2024-12-05 20:47:32,868:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-12-05 20:47:32,868:INFO:create_model() successfully completed......................................
2024-12-05 20:47:32,987:INFO:_master_model_container: 16
2024-12-05 20:47:32,987:INFO:_display_container: 5
2024-12-05 20:47:32,995:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-12-05 20:47:32,995:INFO:finalize_model() successfully completed......................................
2024-12-05 20:47:33,112:INFO:Initializing predict_model()
2024-12-05 20:47:33,112:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C10BCC670>)
2024-12-05 20:47:33,112:INFO:Checking exceptions
2024-12-05 20:47:33,112:INFO:Preloading libraries
2024-12-05 20:47:33,112:INFO:Set up data.
2024-12-05 20:47:33,234:INFO:Set up index.
2024-12-05 20:51:28,574:INFO:Initializing predict_model()
2024-12-05 20:51:28,574:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C119870A0>)
2024-12-05 20:51:28,574:INFO:Checking exceptions
2024-12-05 20:51:28,574:INFO:Preloading libraries
2024-12-05 20:51:28,589:INFO:Set up data.
2024-12-05 20:51:28,692:INFO:Set up index.
2024-12-05 20:51:33,523:INFO:Initializing predict_model()
2024-12-05 20:51:33,523:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C027CE290>)
2024-12-05 20:51:33,523:INFO:Checking exceptions
2024-12-05 20:51:33,523:INFO:Preloading libraries
2024-12-05 20:51:33,537:INFO:Set up data.
2024-12-05 20:51:33,685:INFO:Set up index.
2024-12-05 20:52:24,289:INFO:Initializing plot_model()
2024-12-05 20:52:24,290:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, system=True)
2024-12-05 20:52:24,290:INFO:Checking exceptions
2024-12-05 20:52:24,376:INFO:Preloading libraries
2024-12-05 20:52:24,484:INFO:Copying training dataset
2024-12-05 20:52:24,484:INFO:Plot type: feature
2024-12-05 20:52:24,484:WARNING:No coef_ found. Trying feature_importances_
2024-12-05 20:52:25,114:INFO:Visual Rendered Successfully
2024-12-05 20:52:25,207:INFO:plot_model() successfully completed......................................
2024-12-05 20:52:35,897:INFO:Initializing plot_model()
2024-12-05 20:52:35,897:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C10B5FD90>, system=True)
2024-12-05 20:52:35,897:INFO:Checking exceptions
2024-12-05 20:52:36,037:INFO:Preloading libraries
2024-12-05 20:52:36,104:INFO:Copying training dataset
2024-12-05 20:52:36,104:INFO:Plot type: feature
2024-12-05 20:52:36,105:WARNING:No coef_ found. Trying feature_importances_
2024-12-05 20:52:36,339:INFO:Visual Rendered Successfully
2024-12-05 20:52:36,472:INFO:plot_model() successfully completed......................................
2024-12-05 20:54:31,856:INFO:PyCaret ClassificationExperiment
2024-12-05 20:54:31,856:INFO:Logging name: clf-default-name
2024-12-05 20:54:31,856:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-05 20:54:31,856:INFO:version 3.3.2
2024-12-05 20:54:31,856:INFO:Initializing setup()
2024-12-05 20:54:31,856:INFO:self.USI: 4d81
2024-12-05 20:54:31,856:INFO:self._variable_keys: {'y_train', 'memory', 'fold_shuffle_param', 'X', 'is_multiclass', 'html_param', 'X_test', 'log_plots_param', 'X_train', '_ml_usecase', 'fix_imbalance', 'exp_name_log', 'target_param', 'fold_generator', 'exp_id', 'fold_groups_param', 'USI', 'idx', 'pipeline', 'y_test', 'data', 'n_jobs_param', 'seed', 'y', 'logging_param', '_available_plots', 'gpu_n_jobs_param', 'gpu_param'}
2024-12-05 20:54:31,856:INFO:Checking environment
2024-12-05 20:54:31,856:INFO:python_version: 3.10.11
2024-12-05 20:54:31,856:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-12-05 20:54:31,856:INFO:machine: AMD64
2024-12-05 20:54:31,856:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-05 20:54:31,861:INFO:Memory: svmem(total=17041244160, available=5854982144, percent=65.6, used=11186262016, free=5854982144)
2024-12-05 20:54:31,861:INFO:Physical Core: 4
2024-12-05 20:54:31,861:INFO:Logical Core: 8
2024-12-05 20:54:31,861:INFO:Checking libraries
2024-12-05 20:54:31,861:INFO:System:
2024-12-05 20:54:31,861:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-12-05 20:54:31,861:INFO:executable: c:\Users\diego\AppData\Local\Programs\Python\Python310\python.exe
2024-12-05 20:54:31,861:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-05 20:54:31,861:INFO:PyCaret required dependencies:
2024-12-05 20:54:31,861:INFO:                 pip: 24.2
2024-12-05 20:54:31,861:INFO:          setuptools: 65.5.0
2024-12-05 20:54:31,861:INFO:             pycaret: 3.3.2
2024-12-05 20:54:31,861:INFO:             IPython: 8.26.0
2024-12-05 20:54:31,861:INFO:          ipywidgets: 8.1.5
2024-12-05 20:54:31,861:INFO:                tqdm: 4.66.5
2024-12-05 20:54:31,861:INFO:               numpy: 1.26.4
2024-12-05 20:54:31,861:INFO:              pandas: 1.5.3
2024-12-05 20:54:31,861:INFO:              jinja2: 3.1.4
2024-12-05 20:54:31,861:INFO:               scipy: 1.11.4
2024-12-05 20:54:31,861:INFO:              joblib: 1.3.2
2024-12-05 20:54:31,861:INFO:             sklearn: 1.4.2
2024-12-05 20:54:31,861:INFO:                pyod: 2.0.2
2024-12-05 20:54:31,861:INFO:            imblearn: 0.12.3
2024-12-05 20:54:31,861:INFO:   category_encoders: 2.6.4
2024-12-05 20:54:31,861:INFO:            lightgbm: 4.5.0
2024-12-05 20:54:31,861:INFO:               numba: 0.60.0
2024-12-05 20:54:31,861:INFO:            requests: 2.32.3
2024-12-05 20:54:31,861:INFO:          matplotlib: 3.7.5
2024-12-05 20:54:31,861:INFO:          scikitplot: 0.3.7
2024-12-05 20:54:31,861:INFO:         yellowbrick: 1.5
2024-12-05 20:54:31,861:INFO:              plotly: 5.24.1
2024-12-05 20:54:31,861:INFO:    plotly-resampler: Not installed
2024-12-05 20:54:31,861:INFO:             kaleido: 0.2.1
2024-12-05 20:54:31,861:INFO:           schemdraw: 0.15
2024-12-05 20:54:31,861:INFO:         statsmodels: 0.14.4
2024-12-05 20:54:31,861:INFO:              sktime: 0.26.0
2024-12-05 20:54:31,861:INFO:               tbats: 1.1.3
2024-12-05 20:54:31,861:INFO:            pmdarima: 2.0.4
2024-12-05 20:54:31,861:INFO:              psutil: 6.0.0
2024-12-05 20:54:31,861:INFO:          markupsafe: 2.1.5
2024-12-05 20:54:31,861:INFO:             pickle5: Not installed
2024-12-05 20:54:31,861:INFO:         cloudpickle: 3.1.0
2024-12-05 20:54:31,861:INFO:         deprecation: 2.1.0
2024-12-05 20:54:31,861:INFO:              xxhash: 3.5.0
2024-12-05 20:54:31,861:INFO:           wurlitzer: Not installed
2024-12-05 20:54:31,861:INFO:PyCaret optional dependencies:
2024-12-05 20:54:31,861:INFO:                shap: 0.44.0
2024-12-05 20:54:31,861:INFO:           interpret: 0.5.0
2024-12-05 20:54:31,866:INFO:                umap: 0.5.6
2024-12-05 20:54:31,866:INFO:     ydata_profiling: 4.11.0
2024-12-05 20:54:31,866:INFO:  explainerdashboard: 0.4.7
2024-12-05 20:54:31,866:INFO:             autoviz: Not installed
2024-12-05 20:54:31,866:INFO:           fairlearn: 0.7.0
2024-12-05 20:54:31,866:INFO:          deepchecks: Not installed
2024-12-05 20:54:31,866:INFO:             xgboost: 2.1.2
2024-12-05 20:54:31,866:INFO:            catboost: 1.2.7
2024-12-05 20:54:31,866:INFO:              kmodes: Not installed
2024-12-05 20:54:31,866:INFO:             mlxtend: Not installed
2024-12-05 20:54:31,866:INFO:       statsforecast: Not installed
2024-12-05 20:54:31,866:INFO:        tune_sklearn: Not installed
2024-12-05 20:54:31,866:INFO:                 ray: Not installed
2024-12-05 20:54:31,866:INFO:            hyperopt: Not installed
2024-12-05 20:54:31,866:INFO:              optuna: 4.0.0
2024-12-05 20:54:31,866:INFO:               skopt: Not installed
2024-12-05 20:54:31,866:INFO:              mlflow: 2.18.0
2024-12-05 20:54:31,866:INFO:              gradio: Not installed
2024-12-05 20:54:31,866:INFO:             fastapi: Not installed
2024-12-05 20:54:31,866:INFO:             uvicorn: Not installed
2024-12-05 20:54:31,866:INFO:              m2cgen: Not installed
2024-12-05 20:54:31,866:INFO:           evidently: Not installed
2024-12-05 20:54:31,866:INFO:               fugue: Not installed
2024-12-05 20:54:31,866:INFO:           streamlit: 1.39.0
2024-12-05 20:54:31,866:INFO:             prophet: Not installed
2024-12-05 20:54:31,866:INFO:None
2024-12-05 20:54:31,866:INFO:Set up data.
2024-12-05 20:54:31,937:INFO:Set up folding strategy.
2024-12-05 20:54:31,937:INFO:Set up train/test split.
2024-12-05 20:54:31,977:INFO:Set up index.
2024-12-05 20:54:31,977:INFO:Assigning column types.
2024-12-05 20:54:32,020:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-05 20:54:32,091:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 20:54:32,091:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 20:54:32,118:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:54:32,121:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:54:32,162:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 20:54:32,166:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 20:54:32,196:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:54:32,196:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:54:32,202:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-05 20:54:32,247:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 20:54:32,276:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:54:32,279:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:54:32,324:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 20:54:32,352:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:54:32,356:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:54:32,356:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-05 20:54:32,429:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:54:32,429:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:54:32,506:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:54:32,506:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:54:32,506:INFO:Preparing preprocessing pipeline...
2024-12-05 20:54:32,513:INFO:Set up simple imputation.
2024-12-05 20:54:32,544:INFO:Set up encoding of categorical features.
2024-12-05 20:54:32,736:INFO:Finished creating preprocessing pipeline.
2024-12-05 20:54:32,746:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\diego\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_et...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['wallet_address'],
                                    transformer=TargetEncoder(cols=['wallet_address'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-12-05 20:54:32,746:INFO:Creating final display dataframe.
2024-12-05 20:54:33,306:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            target
2                   Target type            Binary
3           Original data shape       (31007, 78)
4        Transformed data shape       (31007, 78)
5   Transformed train set shape       (21704, 78)
6    Transformed test set shape        (9303, 78)
7              Numeric features                76
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   StratifiedKFold
16                  Fold Number                 5
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  clf-default-name
21                          USI              4d81
2024-12-05 20:54:33,406:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:54:33,406:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:54:33,553:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 20:54:33,558:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 20:54:33,559:INFO:setup() successfully completed in 1.77s...............
2024-12-05 20:54:33,601:INFO:Initializing compare_models()
2024-12-05 20:54:33,601:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-05 20:54:33,601:INFO:Checking exceptions
2024-12-05 20:54:33,626:INFO:Preparing display monitor
2024-12-05 20:54:33,670:INFO:Initializing Logistic Regression
2024-12-05 20:54:33,670:INFO:Total runtime is 0.0 minutes
2024-12-05 20:54:33,676:INFO:SubProcess create_model() called ==================================
2024-12-05 20:54:33,676:INFO:Initializing create_model()
2024-12-05 20:54:33,676:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C103D4D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:54:33,676:INFO:Checking exceptions
2024-12-05 20:54:33,676:INFO:Importing libraries
2024-12-05 20:54:33,676:INFO:Copying training dataset
2024-12-05 20:54:33,732:INFO:Defining folds
2024-12-05 20:54:33,732:INFO:Declaring metric variables
2024-12-05 20:54:33,737:INFO:Importing untrained model
2024-12-05 20:54:33,745:INFO:Logistic Regression Imported successfully
2024-12-05 20:54:33,761:INFO:Starting cross validation
2024-12-05 20:54:33,764:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:54:41,759:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-12-05 20:54:48,024:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-12-05 20:54:48,058:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-12-05 20:54:48,066:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-12-05 20:54:48,072:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-12-05 20:54:48,295:INFO:Calculating mean and std
2024-12-05 20:54:48,300:INFO:Creating metrics dataframe
2024-12-05 20:54:48,317:INFO:Uploading results into container
2024-12-05 20:54:48,320:INFO:Uploading model into container now
2024-12-05 20:54:48,322:INFO:_master_model_container: 1
2024-12-05 20:54:48,323:INFO:_display_container: 2
2024-12-05 20:54:48,326:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-05 20:54:48,327:INFO:create_model() successfully completed......................................
2024-12-05 20:54:48,515:INFO:SubProcess create_model() end ==================================
2024-12-05 20:54:48,516:INFO:Creating metrics dataframe
2024-12-05 20:54:48,525:INFO:Initializing K Neighbors Classifier
2024-12-05 20:54:48,525:INFO:Total runtime is 0.24757547775904337 minutes
2024-12-05 20:54:48,529:INFO:SubProcess create_model() called ==================================
2024-12-05 20:54:48,529:INFO:Initializing create_model()
2024-12-05 20:54:48,530:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C103D4D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:54:48,530:INFO:Checking exceptions
2024-12-05 20:54:48,530:INFO:Importing libraries
2024-12-05 20:54:48,530:INFO:Copying training dataset
2024-12-05 20:54:48,565:INFO:Defining folds
2024-12-05 20:54:48,565:INFO:Declaring metric variables
2024-12-05 20:54:48,570:INFO:Importing untrained model
2024-12-05 20:54:48,574:INFO:K Neighbors Classifier Imported successfully
2024-12-05 20:54:48,585:INFO:Starting cross validation
2024-12-05 20:54:48,588:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:54:55,620:INFO:Calculating mean and std
2024-12-05 20:54:55,622:INFO:Creating metrics dataframe
2024-12-05 20:54:55,627:INFO:Uploading results into container
2024-12-05 20:54:55,628:INFO:Uploading model into container now
2024-12-05 20:54:55,629:INFO:_master_model_container: 2
2024-12-05 20:54:55,630:INFO:_display_container: 2
2024-12-05 20:54:55,631:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-05 20:54:55,631:INFO:create_model() successfully completed......................................
2024-12-05 20:54:55,843:INFO:SubProcess create_model() end ==================================
2024-12-05 20:54:55,843:INFO:Creating metrics dataframe
2024-12-05 20:54:55,872:INFO:Initializing Naive Bayes
2024-12-05 20:54:55,873:INFO:Total runtime is 0.37004162470499674 minutes
2024-12-05 20:54:55,881:INFO:SubProcess create_model() called ==================================
2024-12-05 20:54:55,881:INFO:Initializing create_model()
2024-12-05 20:54:55,882:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C103D4D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:54:55,882:INFO:Checking exceptions
2024-12-05 20:54:55,882:INFO:Importing libraries
2024-12-05 20:54:55,882:INFO:Copying training dataset
2024-12-05 20:54:55,969:INFO:Defining folds
2024-12-05 20:54:55,969:INFO:Declaring metric variables
2024-12-05 20:54:55,980:INFO:Importing untrained model
2024-12-05 20:54:55,990:INFO:Naive Bayes Imported successfully
2024-12-05 20:54:56,009:INFO:Starting cross validation
2024-12-05 20:54:56,013:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:54:56,914:INFO:Calculating mean and std
2024-12-05 20:54:56,916:INFO:Creating metrics dataframe
2024-12-05 20:54:56,918:INFO:Uploading results into container
2024-12-05 20:54:56,919:INFO:Uploading model into container now
2024-12-05 20:54:56,920:INFO:_master_model_container: 3
2024-12-05 20:54:56,920:INFO:_display_container: 2
2024-12-05 20:54:56,920:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-05 20:54:56,920:INFO:create_model() successfully completed......................................
2024-12-05 20:54:57,036:INFO:SubProcess create_model() end ==================================
2024-12-05 20:54:57,037:INFO:Creating metrics dataframe
2024-12-05 20:54:57,048:INFO:Initializing Decision Tree Classifier
2024-12-05 20:54:57,048:INFO:Total runtime is 0.3896363894144694 minutes
2024-12-05 20:54:57,051:INFO:SubProcess create_model() called ==================================
2024-12-05 20:54:57,051:INFO:Initializing create_model()
2024-12-05 20:54:57,052:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C103D4D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:54:57,052:INFO:Checking exceptions
2024-12-05 20:54:57,052:INFO:Importing libraries
2024-12-05 20:54:57,052:INFO:Copying training dataset
2024-12-05 20:54:57,086:INFO:Defining folds
2024-12-05 20:54:57,086:INFO:Declaring metric variables
2024-12-05 20:54:57,090:INFO:Importing untrained model
2024-12-05 20:54:57,097:INFO:Decision Tree Classifier Imported successfully
2024-12-05 20:54:57,108:INFO:Starting cross validation
2024-12-05 20:54:57,111:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:55:00,398:INFO:Calculating mean and std
2024-12-05 20:55:00,401:INFO:Creating metrics dataframe
2024-12-05 20:55:00,414:INFO:Uploading results into container
2024-12-05 20:55:00,417:INFO:Uploading model into container now
2024-12-05 20:55:00,418:INFO:_master_model_container: 4
2024-12-05 20:55:00,418:INFO:_display_container: 2
2024-12-05 20:55:00,420:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-12-05 20:55:00,421:INFO:create_model() successfully completed......................................
2024-12-05 20:55:00,642:INFO:SubProcess create_model() end ==================================
2024-12-05 20:55:00,642:INFO:Creating metrics dataframe
2024-12-05 20:55:00,658:INFO:Initializing SVM - Linear Kernel
2024-12-05 20:55:00,658:INFO:Total runtime is 0.4498055537541707 minutes
2024-12-05 20:55:00,666:INFO:SubProcess create_model() called ==================================
2024-12-05 20:55:00,667:INFO:Initializing create_model()
2024-12-05 20:55:00,667:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C103D4D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:55:00,667:INFO:Checking exceptions
2024-12-05 20:55:00,667:INFO:Importing libraries
2024-12-05 20:55:00,667:INFO:Copying training dataset
2024-12-05 20:55:00,712:INFO:Defining folds
2024-12-05 20:55:00,712:INFO:Declaring metric variables
2024-12-05 20:55:00,717:INFO:Importing untrained model
2024-12-05 20:55:00,724:INFO:SVM - Linear Kernel Imported successfully
2024-12-05 20:55:00,737:INFO:Starting cross validation
2024-12-05 20:55:00,739:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:55:03,574:INFO:Calculating mean and std
2024-12-05 20:55:03,575:INFO:Creating metrics dataframe
2024-12-05 20:55:03,579:INFO:Uploading results into container
2024-12-05 20:55:03,580:INFO:Uploading model into container now
2024-12-05 20:55:03,580:INFO:_master_model_container: 5
2024-12-05 20:55:03,581:INFO:_display_container: 2
2024-12-05 20:55:03,581:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-05 20:55:03,581:INFO:create_model() successfully completed......................................
2024-12-05 20:55:03,728:INFO:SubProcess create_model() end ==================================
2024-12-05 20:55:03,728:INFO:Creating metrics dataframe
2024-12-05 20:55:03,741:INFO:Initializing Ridge Classifier
2024-12-05 20:55:03,741:INFO:Total runtime is 0.501187531153361 minutes
2024-12-05 20:55:03,748:INFO:SubProcess create_model() called ==================================
2024-12-05 20:55:03,748:INFO:Initializing create_model()
2024-12-05 20:55:03,748:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C103D4D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:55:03,749:INFO:Checking exceptions
2024-12-05 20:55:03,749:INFO:Importing libraries
2024-12-05 20:55:03,749:INFO:Copying training dataset
2024-12-05 20:55:03,789:INFO:Defining folds
2024-12-05 20:55:03,789:INFO:Declaring metric variables
2024-12-05 20:55:03,793:INFO:Importing untrained model
2024-12-05 20:55:03,798:INFO:Ridge Classifier Imported successfully
2024-12-05 20:55:03,809:INFO:Starting cross validation
2024-12-05 20:55:03,811:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:55:04,337:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.6089e-22): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-12-05 20:55:05,512:INFO:Calculating mean and std
2024-12-05 20:55:05,514:INFO:Creating metrics dataframe
2024-12-05 20:55:05,517:INFO:Uploading results into container
2024-12-05 20:55:05,518:INFO:Uploading model into container now
2024-12-05 20:55:05,519:INFO:_master_model_container: 6
2024-12-05 20:55:05,519:INFO:_display_container: 2
2024-12-05 20:55:05,520:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-12-05 20:55:05,520:INFO:create_model() successfully completed......................................
2024-12-05 20:55:05,691:INFO:SubProcess create_model() end ==================================
2024-12-05 20:55:05,691:INFO:Creating metrics dataframe
2024-12-05 20:55:05,703:INFO:Initializing Random Forest Classifier
2024-12-05 20:55:05,703:INFO:Total runtime is 0.533881139755249 minutes
2024-12-05 20:55:05,707:INFO:SubProcess create_model() called ==================================
2024-12-05 20:55:05,708:INFO:Initializing create_model()
2024-12-05 20:55:05,708:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C103D4D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:55:05,708:INFO:Checking exceptions
2024-12-05 20:55:05,708:INFO:Importing libraries
2024-12-05 20:55:05,708:INFO:Copying training dataset
2024-12-05 20:55:05,749:INFO:Defining folds
2024-12-05 20:55:05,750:INFO:Declaring metric variables
2024-12-05 20:55:05,755:INFO:Importing untrained model
2024-12-05 20:55:05,759:INFO:Random Forest Classifier Imported successfully
2024-12-05 20:55:05,769:INFO:Starting cross validation
2024-12-05 20:55:05,772:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:55:18,694:INFO:Calculating mean and std
2024-12-05 20:55:18,697:INFO:Creating metrics dataframe
2024-12-05 20:55:18,704:INFO:Uploading results into container
2024-12-05 20:55:18,705:INFO:Uploading model into container now
2024-12-05 20:55:18,706:INFO:_master_model_container: 7
2024-12-05 20:55:18,708:INFO:_display_container: 2
2024-12-05 20:55:18,709:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 20:55:18,709:INFO:create_model() successfully completed......................................
2024-12-05 20:55:18,866:INFO:SubProcess create_model() end ==================================
2024-12-05 20:55:18,866:INFO:Creating metrics dataframe
2024-12-05 20:55:18,880:INFO:Initializing Quadratic Discriminant Analysis
2024-12-05 20:55:18,880:INFO:Total runtime is 0.7535023053487142 minutes
2024-12-05 20:55:18,885:INFO:SubProcess create_model() called ==================================
2024-12-05 20:55:18,885:INFO:Initializing create_model()
2024-12-05 20:55:18,886:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C103D4D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:55:18,886:INFO:Checking exceptions
2024-12-05 20:55:18,886:INFO:Importing libraries
2024-12-05 20:55:18,886:INFO:Copying training dataset
2024-12-05 20:55:18,930:INFO:Defining folds
2024-12-05 20:55:18,930:INFO:Declaring metric variables
2024-12-05 20:55:18,934:INFO:Importing untrained model
2024-12-05 20:55:18,939:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-05 20:55:18,949:INFO:Starting cross validation
2024-12-05 20:55:18,951:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:55:19,823:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 20:55:19,824:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 20:55:19,868:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 20:55:19,914:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 20:55:19,937:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 20:55:20,701:INFO:Calculating mean and std
2024-12-05 20:55:20,702:INFO:Creating metrics dataframe
2024-12-05 20:55:20,709:INFO:Uploading results into container
2024-12-05 20:55:20,714:INFO:Uploading model into container now
2024-12-05 20:55:20,716:INFO:_master_model_container: 8
2024-12-05 20:55:20,717:INFO:_display_container: 2
2024-12-05 20:55:20,718:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-05 20:55:20,719:INFO:create_model() successfully completed......................................
2024-12-05 20:55:20,891:INFO:SubProcess create_model() end ==================================
2024-12-05 20:55:20,891:INFO:Creating metrics dataframe
2024-12-05 20:55:20,904:INFO:Initializing Ada Boost Classifier
2024-12-05 20:55:20,904:INFO:Total runtime is 0.7872247854868571 minutes
2024-12-05 20:55:20,907:INFO:SubProcess create_model() called ==================================
2024-12-05 20:55:20,907:INFO:Initializing create_model()
2024-12-05 20:55:20,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C103D4D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:55:20,907:INFO:Checking exceptions
2024-12-05 20:55:20,907:INFO:Importing libraries
2024-12-05 20:55:20,907:INFO:Copying training dataset
2024-12-05 20:55:20,937:INFO:Defining folds
2024-12-05 20:55:20,937:INFO:Declaring metric variables
2024-12-05 20:55:20,946:INFO:Importing untrained model
2024-12-05 20:55:20,949:INFO:Ada Boost Classifier Imported successfully
2024-12-05 20:55:20,958:INFO:Starting cross validation
2024-12-05 20:55:20,959:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:55:21,389:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 20:55:21,406:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 20:55:21,408:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 20:55:21,417:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 20:55:21,422:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 20:55:29,564:INFO:Calculating mean and std
2024-12-05 20:55:29,570:INFO:Creating metrics dataframe
2024-12-05 20:55:29,582:INFO:Uploading results into container
2024-12-05 20:55:29,584:INFO:Uploading model into container now
2024-12-05 20:55:29,586:INFO:_master_model_container: 9
2024-12-05 20:55:29,586:INFO:_display_container: 2
2024-12-05 20:55:29,587:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-12-05 20:55:29,588:INFO:create_model() successfully completed......................................
2024-12-05 20:55:29,835:INFO:SubProcess create_model() end ==================================
2024-12-05 20:55:29,835:INFO:Creating metrics dataframe
2024-12-05 20:55:29,859:INFO:Initializing Gradient Boosting Classifier
2024-12-05 20:55:29,859:INFO:Total runtime is 0.9364747802416484 minutes
2024-12-05 20:55:29,865:INFO:SubProcess create_model() called ==================================
2024-12-05 20:55:29,866:INFO:Initializing create_model()
2024-12-05 20:55:29,866:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C103D4D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:55:29,866:INFO:Checking exceptions
2024-12-05 20:55:29,866:INFO:Importing libraries
2024-12-05 20:55:29,867:INFO:Copying training dataset
2024-12-05 20:55:29,921:INFO:Defining folds
2024-12-05 20:55:29,922:INFO:Declaring metric variables
2024-12-05 20:55:29,930:INFO:Importing untrained model
2024-12-05 20:55:29,938:INFO:Gradient Boosting Classifier Imported successfully
2024-12-05 20:55:29,957:INFO:Starting cross validation
2024-12-05 20:55:29,961:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:56:03,961:INFO:Calculating mean and std
2024-12-05 20:56:03,964:INFO:Creating metrics dataframe
2024-12-05 20:56:03,972:INFO:Uploading results into container
2024-12-05 20:56:03,974:INFO:Uploading model into container now
2024-12-05 20:56:03,974:INFO:_master_model_container: 10
2024-12-05 20:56:03,976:INFO:_display_container: 2
2024-12-05 20:56:03,977:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-05 20:56:03,977:INFO:create_model() successfully completed......................................
2024-12-05 20:56:04,158:INFO:SubProcess create_model() end ==================================
2024-12-05 20:56:04,159:INFO:Creating metrics dataframe
2024-12-05 20:56:04,189:INFO:Initializing Linear Discriminant Analysis
2024-12-05 20:56:04,189:INFO:Total runtime is 1.5086474577585856 minutes
2024-12-05 20:56:04,197:INFO:SubProcess create_model() called ==================================
2024-12-05 20:56:04,199:INFO:Initializing create_model()
2024-12-05 20:56:04,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C103D4D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:56:04,199:INFO:Checking exceptions
2024-12-05 20:56:04,199:INFO:Importing libraries
2024-12-05 20:56:04,199:INFO:Copying training dataset
2024-12-05 20:56:04,255:INFO:Defining folds
2024-12-05 20:56:04,256:INFO:Declaring metric variables
2024-12-05 20:56:04,262:INFO:Importing untrained model
2024-12-05 20:56:04,265:INFO:Linear Discriminant Analysis Imported successfully
2024-12-05 20:56:04,273:INFO:Starting cross validation
2024-12-05 20:56:04,275:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:56:05,991:INFO:Calculating mean and std
2024-12-05 20:56:05,999:INFO:Creating metrics dataframe
2024-12-05 20:56:06,022:INFO:Uploading results into container
2024-12-05 20:56:06,026:INFO:Uploading model into container now
2024-12-05 20:56:06,030:INFO:_master_model_container: 11
2024-12-05 20:56:06,033:INFO:_display_container: 2
2024-12-05 20:56:06,037:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-05 20:56:06,037:INFO:create_model() successfully completed......................................
2024-12-05 20:56:06,245:INFO:SubProcess create_model() end ==================================
2024-12-05 20:56:06,246:INFO:Creating metrics dataframe
2024-12-05 20:56:06,279:INFO:Initializing Extra Trees Classifier
2024-12-05 20:56:06,279:INFO:Total runtime is 1.5434879183769226 minutes
2024-12-05 20:56:06,290:INFO:SubProcess create_model() called ==================================
2024-12-05 20:56:06,291:INFO:Initializing create_model()
2024-12-05 20:56:06,292:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C103D4D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:56:06,292:INFO:Checking exceptions
2024-12-05 20:56:06,292:INFO:Importing libraries
2024-12-05 20:56:06,293:INFO:Copying training dataset
2024-12-05 20:56:06,362:INFO:Defining folds
2024-12-05 20:56:06,362:INFO:Declaring metric variables
2024-12-05 20:56:06,373:INFO:Importing untrained model
2024-12-05 20:56:06,381:INFO:Extra Trees Classifier Imported successfully
2024-12-05 20:56:06,396:INFO:Starting cross validation
2024-12-05 20:56:06,399:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:56:11,276:INFO:Calculating mean and std
2024-12-05 20:56:11,277:INFO:Creating metrics dataframe
2024-12-05 20:56:11,281:INFO:Uploading results into container
2024-12-05 20:56:11,282:INFO:Uploading model into container now
2024-12-05 20:56:11,282:INFO:_master_model_container: 12
2024-12-05 20:56:11,282:INFO:_display_container: 2
2024-12-05 20:56:11,282:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 20:56:11,283:INFO:create_model() successfully completed......................................
2024-12-05 20:56:11,395:INFO:SubProcess create_model() end ==================================
2024-12-05 20:56:11,395:INFO:Creating metrics dataframe
2024-12-05 20:56:11,407:INFO:Initializing Extreme Gradient Boosting
2024-12-05 20:56:11,407:INFO:Total runtime is 1.6289402604103087 minutes
2024-12-05 20:56:11,411:INFO:SubProcess create_model() called ==================================
2024-12-05 20:56:11,412:INFO:Initializing create_model()
2024-12-05 20:56:11,412:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C103D4D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:56:11,412:INFO:Checking exceptions
2024-12-05 20:56:11,412:INFO:Importing libraries
2024-12-05 20:56:11,412:INFO:Copying training dataset
2024-12-05 20:56:11,441:INFO:Defining folds
2024-12-05 20:56:11,441:INFO:Declaring metric variables
2024-12-05 20:56:11,446:INFO:Importing untrained model
2024-12-05 20:56:11,451:INFO:Extreme Gradient Boosting Imported successfully
2024-12-05 20:56:11,459:INFO:Starting cross validation
2024-12-05 20:56:11,461:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:56:14,934:INFO:Calculating mean and std
2024-12-05 20:56:14,938:INFO:Creating metrics dataframe
2024-12-05 20:56:14,951:INFO:Uploading results into container
2024-12-05 20:56:14,953:INFO:Uploading model into container now
2024-12-05 20:56:14,954:INFO:_master_model_container: 13
2024-12-05 20:56:14,954:INFO:_display_container: 2
2024-12-05 20:56:14,958:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-12-05 20:56:14,958:INFO:create_model() successfully completed......................................
2024-12-05 20:56:15,167:INFO:SubProcess create_model() end ==================================
2024-12-05 20:56:15,167:INFO:Creating metrics dataframe
2024-12-05 20:56:15,182:INFO:Initializing Light Gradient Boosting Machine
2024-12-05 20:56:15,183:INFO:Total runtime is 1.6918779770533243 minutes
2024-12-05 20:56:15,188:INFO:SubProcess create_model() called ==================================
2024-12-05 20:56:15,188:INFO:Initializing create_model()
2024-12-05 20:56:15,188:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C103D4D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:56:15,188:INFO:Checking exceptions
2024-12-05 20:56:15,188:INFO:Importing libraries
2024-12-05 20:56:15,188:INFO:Copying training dataset
2024-12-05 20:56:15,228:INFO:Defining folds
2024-12-05 20:56:15,229:INFO:Declaring metric variables
2024-12-05 20:56:15,233:INFO:Importing untrained model
2024-12-05 20:56:15,237:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-05 20:56:15,242:INFO:Starting cross validation
2024-12-05 20:56:15,244:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:56:18,103:INFO:Calculating mean and std
2024-12-05 20:56:18,107:INFO:Creating metrics dataframe
2024-12-05 20:56:18,119:INFO:Uploading results into container
2024-12-05 20:56:18,121:INFO:Uploading model into container now
2024-12-05 20:56:18,122:INFO:_master_model_container: 14
2024-12-05 20:56:18,122:INFO:_display_container: 2
2024-12-05 20:56:18,124:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-05 20:56:18,124:INFO:create_model() successfully completed......................................
2024-12-05 20:56:18,314:INFO:SubProcess create_model() end ==================================
2024-12-05 20:56:18,314:INFO:Creating metrics dataframe
2024-12-05 20:56:18,334:INFO:Initializing CatBoost Classifier
2024-12-05 20:56:18,335:INFO:Total runtime is 1.7444087982177734 minutes
2024-12-05 20:56:18,338:INFO:SubProcess create_model() called ==================================
2024-12-05 20:56:18,338:INFO:Initializing create_model()
2024-12-05 20:56:18,338:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C103D4D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:56:18,339:INFO:Checking exceptions
2024-12-05 20:56:18,339:INFO:Importing libraries
2024-12-05 20:56:18,339:INFO:Copying training dataset
2024-12-05 20:56:18,368:INFO:Defining folds
2024-12-05 20:56:18,368:INFO:Declaring metric variables
2024-12-05 20:56:18,372:INFO:Importing untrained model
2024-12-05 20:56:18,377:INFO:CatBoost Classifier Imported successfully
2024-12-05 20:56:18,384:INFO:Starting cross validation
2024-12-05 20:56:18,384:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:57:10,367:INFO:Calculating mean and std
2024-12-05 20:57:10,368:INFO:Creating metrics dataframe
2024-12-05 20:57:10,374:INFO:Uploading results into container
2024-12-05 20:57:10,375:INFO:Uploading model into container now
2024-12-05 20:57:10,376:INFO:_master_model_container: 15
2024-12-05 20:57:10,376:INFO:_display_container: 2
2024-12-05 20:57:10,376:INFO:<catboost.core.CatBoostClassifier object at 0x0000023C103EB160>
2024-12-05 20:57:10,376:INFO:create_model() successfully completed......................................
2024-12-05 20:57:10,500:INFO:SubProcess create_model() end ==================================
2024-12-05 20:57:10,500:INFO:Creating metrics dataframe
2024-12-05 20:57:10,514:INFO:Initializing Dummy Classifier
2024-12-05 20:57:10,515:INFO:Total runtime is 2.6140867869059243 minutes
2024-12-05 20:57:10,518:INFO:SubProcess create_model() called ==================================
2024-12-05 20:57:10,518:INFO:Initializing create_model()
2024-12-05 20:57:10,518:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023C103D4D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:57:10,518:INFO:Checking exceptions
2024-12-05 20:57:10,520:INFO:Importing libraries
2024-12-05 20:57:10,520:INFO:Copying training dataset
2024-12-05 20:57:10,552:INFO:Defining folds
2024-12-05 20:57:10,552:INFO:Declaring metric variables
2024-12-05 20:57:10,558:INFO:Importing untrained model
2024-12-05 20:57:10,562:INFO:Dummy Classifier Imported successfully
2024-12-05 20:57:10,571:INFO:Starting cross validation
2024-12-05 20:57:10,574:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 20:57:11,177:INFO:Calculating mean and std
2024-12-05 20:57:11,181:INFO:Creating metrics dataframe
2024-12-05 20:57:11,203:INFO:Uploading results into container
2024-12-05 20:57:11,207:INFO:Uploading model into container now
2024-12-05 20:57:11,212:INFO:_master_model_container: 16
2024-12-05 20:57:11,213:INFO:_display_container: 2
2024-12-05 20:57:11,221:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-12-05 20:57:11,222:INFO:create_model() successfully completed......................................
2024-12-05 20:57:11,438:INFO:SubProcess create_model() end ==================================
2024-12-05 20:57:11,438:INFO:Creating metrics dataframe
2024-12-05 20:57:11,475:INFO:Initializing create_model()
2024-12-05 20:57:11,475:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:57:11,476:INFO:Checking exceptions
2024-12-05 20:57:11,478:INFO:Importing libraries
2024-12-05 20:57:11,479:INFO:Copying training dataset
2024-12-05 20:57:11,519:INFO:Defining folds
2024-12-05 20:57:11,520:INFO:Declaring metric variables
2024-12-05 20:57:11,520:INFO:Importing untrained model
2024-12-05 20:57:11,520:INFO:Declaring custom model
2024-12-05 20:57:11,521:INFO:Extra Trees Classifier Imported successfully
2024-12-05 20:57:11,523:INFO:Cross validation set to False
2024-12-05 20:57:11,523:INFO:Fitting Model
2024-12-05 20:57:12,836:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 20:57:12,836:INFO:create_model() successfully completed......................................
2024-12-05 20:57:13,185:INFO:_master_model_container: 16
2024-12-05 20:57:13,185:INFO:_display_container: 2
2024-12-05 20:57:13,186:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 20:57:13,186:INFO:compare_models() successfully completed......................................
2024-12-05 20:57:13,317:INFO:Initializing predict_model()
2024-12-05 20:57:13,317:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C080D36D0>)
2024-12-05 20:57:13,317:INFO:Checking exceptions
2024-12-05 20:57:13,317:INFO:Preloading libraries
2024-12-05 20:57:13,319:INFO:Set up data.
2024-12-05 20:57:13,397:INFO:Set up index.
2024-12-05 20:57:14,026:INFO:Initializing finalize_model()
2024-12-05 20:57:14,026:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-05 20:57:14,026:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 20:57:14,055:INFO:Initializing create_model()
2024-12-05 20:57:14,055:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 20:57:14,055:INFO:Checking exceptions
2024-12-05 20:57:14,057:INFO:Importing libraries
2024-12-05 20:57:14,057:INFO:Copying training dataset
2024-12-05 20:57:14,061:INFO:Defining folds
2024-12-05 20:57:14,061:INFO:Declaring metric variables
2024-12-05 20:57:14,061:INFO:Importing untrained model
2024-12-05 20:57:14,062:INFO:Declaring custom model
2024-12-05 20:57:14,063:INFO:Extra Trees Classifier Imported successfully
2024-12-05 20:57:14,064:INFO:Cross validation set to False
2024-12-05 20:57:14,065:INFO:Fitting Model
2024-12-05 20:57:16,063:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 20:57:16,063:INFO:create_model() successfully completed......................................
2024-12-05 20:57:16,166:INFO:_master_model_container: 16
2024-12-05 20:57:16,166:INFO:_display_container: 3
2024-12-05 20:57:16,176:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 20:57:16,176:INFO:finalize_model() successfully completed......................................
2024-12-05 20:57:16,356:INFO:Initializing predict_model()
2024-12-05 20:57:16,356:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C10BCC670>)
2024-12-05 20:57:16,356:INFO:Checking exceptions
2024-12-05 20:57:16,356:INFO:Preloading libraries
2024-12-05 20:57:16,360:INFO:Set up data.
2024-12-05 20:57:16,435:INFO:Set up index.
2024-12-05 20:57:16,959:INFO:Initializing predict_model()
2024-12-05 20:57:16,959:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C04E080D0>)
2024-12-05 20:57:16,959:INFO:Checking exceptions
2024-12-05 20:57:16,960:INFO:Preloading libraries
2024-12-05 20:57:16,963:INFO:Set up data.
2024-12-05 20:57:17,061:INFO:Set up index.
2024-12-05 20:57:17,787:INFO:Initializing predict_model()
2024-12-05 20:57:17,787:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C11987250>)
2024-12-05 20:57:17,788:INFO:Checking exceptions
2024-12-05 20:57:17,788:INFO:Preloading libraries
2024-12-05 20:57:17,791:INFO:Set up data.
2024-12-05 20:57:17,850:INFO:Set up index.
2024-12-05 20:57:18,745:INFO:Initializing plot_model()
2024-12-05 20:57:18,745:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>, system=True)
2024-12-05 20:57:18,747:INFO:Checking exceptions
2024-12-05 20:57:18,792:INFO:Preloading libraries
2024-12-05 20:57:18,916:INFO:Copying training dataset
2024-12-05 20:57:18,916:INFO:Plot type: feature
2024-12-05 20:57:18,916:WARNING:No coef_ found. Trying feature_importances_
2024-12-05 20:57:19,160:INFO:Visual Rendered Successfully
2024-12-05 20:57:19,272:INFO:plot_model() successfully completed......................................
2024-12-05 21:00:56,970:INFO:Initializing interpret_model()
2024-12-05 21:00:56,970:INFO:interpret_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023C111DCA60>)
2024-12-05 21:00:56,970:INFO:Checking exceptions
2024-12-05 21:00:56,971:INFO:Soft dependency imported: shap: 0.44.0
2024-12-05 21:00:59,662:INFO:plot type: summary
2024-12-05 21:00:59,662:INFO:Creating TreeExplainer
2024-12-05 21:00:59,778:INFO:Compiling shap values
2024-12-05 21:07:14,612:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-05 21:07:14,613:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-05 21:07:14,613:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-05 21:07:14,613:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-05 21:07:28,132:INFO:PyCaret ClassificationExperiment
2024-12-05 21:07:28,132:INFO:Logging name: clf-default-name
2024-12-05 21:07:28,132:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-05 21:07:28,132:INFO:version 3.3.2
2024-12-05 21:07:28,132:INFO:Initializing setup()
2024-12-05 21:07:28,132:INFO:self.USI: 0bb2
2024-12-05 21:07:28,132:INFO:self._variable_keys: {'_available_plots', 'logging_param', 'is_multiclass', 'fold_generator', 'y', 'data', 'fold_groups_param', 'memory', 'X', 'target_param', 'pipeline', 'y_train', '_ml_usecase', 'seed', 'X_train', 'html_param', 'USI', 'X_test', 'exp_name_log', 'exp_id', 'fix_imbalance', 'fold_shuffle_param', 'gpu_param', 'gpu_n_jobs_param', 'y_test', 'log_plots_param', 'idx', 'n_jobs_param'}
2024-12-05 21:07:28,132:INFO:Checking environment
2024-12-05 21:07:28,132:INFO:python_version: 3.10.11
2024-12-05 21:07:28,132:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-12-05 21:07:28,132:INFO:machine: AMD64
2024-12-05 21:07:28,132:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-05 21:07:28,137:INFO:Memory: svmem(total=17041244160, available=6616449024, percent=61.2, used=10424795136, free=6616449024)
2024-12-05 21:07:28,137:INFO:Physical Core: 4
2024-12-05 21:07:28,137:INFO:Logical Core: 8
2024-12-05 21:07:28,137:INFO:Checking libraries
2024-12-05 21:07:28,137:INFO:System:
2024-12-05 21:07:28,137:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-12-05 21:07:28,137:INFO:executable: c:\Users\diego\AppData\Local\Programs\Python\Python310\python.exe
2024-12-05 21:07:28,137:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-05 21:07:28,137:INFO:PyCaret required dependencies:
2024-12-05 21:07:28,232:INFO:                 pip: 24.2
2024-12-05 21:07:28,232:INFO:          setuptools: 65.5.0
2024-12-05 21:07:28,232:INFO:             pycaret: 3.3.2
2024-12-05 21:07:28,232:INFO:             IPython: 8.26.0
2024-12-05 21:07:28,232:INFO:          ipywidgets: 8.1.5
2024-12-05 21:07:28,232:INFO:                tqdm: 4.66.5
2024-12-05 21:07:28,232:INFO:               numpy: 1.26.4
2024-12-05 21:07:28,232:INFO:              pandas: 1.5.3
2024-12-05 21:07:28,232:INFO:              jinja2: 3.1.4
2024-12-05 21:07:28,232:INFO:               scipy: 1.11.4
2024-12-05 21:07:28,232:INFO:              joblib: 1.3.2
2024-12-05 21:07:28,232:INFO:             sklearn: 1.4.2
2024-12-05 21:07:28,232:INFO:                pyod: 2.0.2
2024-12-05 21:07:28,232:INFO:            imblearn: 0.12.3
2024-12-05 21:07:28,232:INFO:   category_encoders: 2.6.4
2024-12-05 21:07:28,232:INFO:            lightgbm: 4.5.0
2024-12-05 21:07:28,232:INFO:               numba: 0.60.0
2024-12-05 21:07:28,232:INFO:            requests: 2.32.3
2024-12-05 21:07:28,232:INFO:          matplotlib: 3.7.5
2024-12-05 21:07:28,232:INFO:          scikitplot: 0.3.7
2024-12-05 21:07:28,232:INFO:         yellowbrick: 1.5
2024-12-05 21:07:28,232:INFO:              plotly: 5.24.1
2024-12-05 21:07:28,232:INFO:    plotly-resampler: Not installed
2024-12-05 21:07:28,232:INFO:             kaleido: 0.2.1
2024-12-05 21:07:28,232:INFO:           schemdraw: 0.15
2024-12-05 21:07:28,232:INFO:         statsmodels: 0.14.4
2024-12-05 21:07:28,232:INFO:              sktime: 0.26.0
2024-12-05 21:07:28,232:INFO:               tbats: 1.1.3
2024-12-05 21:07:28,232:INFO:            pmdarima: 2.0.4
2024-12-05 21:07:28,232:INFO:              psutil: 6.0.0
2024-12-05 21:07:28,232:INFO:          markupsafe: 2.1.5
2024-12-05 21:07:28,232:INFO:             pickle5: Not installed
2024-12-05 21:07:28,232:INFO:         cloudpickle: 3.1.0
2024-12-05 21:07:28,234:INFO:         deprecation: 2.1.0
2024-12-05 21:07:28,234:INFO:              xxhash: 3.5.0
2024-12-05 21:07:28,234:INFO:           wurlitzer: Not installed
2024-12-05 21:07:28,234:INFO:PyCaret optional dependencies:
2024-12-05 21:07:28,271:INFO:                shap: 0.44.0
2024-12-05 21:07:28,272:INFO:           interpret: 0.5.0
2024-12-05 21:07:28,272:INFO:                umap: 0.5.6
2024-12-05 21:07:28,272:INFO:     ydata_profiling: 4.11.0
2024-12-05 21:07:28,272:INFO:  explainerdashboard: 0.4.7
2024-12-05 21:07:28,272:INFO:             autoviz: Not installed
2024-12-05 21:07:28,272:INFO:           fairlearn: 0.7.0
2024-12-05 21:07:28,272:INFO:          deepchecks: Not installed
2024-12-05 21:07:28,272:INFO:             xgboost: 2.1.2
2024-12-05 21:07:28,272:INFO:            catboost: 1.2.7
2024-12-05 21:07:28,272:INFO:              kmodes: Not installed
2024-12-05 21:07:28,272:INFO:             mlxtend: Not installed
2024-12-05 21:07:28,272:INFO:       statsforecast: Not installed
2024-12-05 21:07:28,272:INFO:        tune_sklearn: Not installed
2024-12-05 21:07:28,272:INFO:                 ray: Not installed
2024-12-05 21:07:28,272:INFO:            hyperopt: Not installed
2024-12-05 21:07:28,272:INFO:              optuna: 4.0.0
2024-12-05 21:07:28,272:INFO:               skopt: Not installed
2024-12-05 21:07:28,272:INFO:              mlflow: 2.18.0
2024-12-05 21:07:28,272:INFO:              gradio: Not installed
2024-12-05 21:07:28,272:INFO:             fastapi: Not installed
2024-12-05 21:07:28,272:INFO:             uvicorn: Not installed
2024-12-05 21:07:28,272:INFO:              m2cgen: Not installed
2024-12-05 21:07:28,272:INFO:           evidently: Not installed
2024-12-05 21:07:28,272:INFO:               fugue: Not installed
2024-12-05 21:07:28,273:INFO:           streamlit: 1.39.0
2024-12-05 21:07:28,273:INFO:             prophet: Not installed
2024-12-05 21:07:28,273:INFO:None
2024-12-05 21:07:28,273:INFO:Set up data.
2024-12-05 21:07:28,333:INFO:Set up folding strategy.
2024-12-05 21:07:28,333:INFO:Set up train/test split.
2024-12-05 21:07:28,376:INFO:Set up index.
2024-12-05 21:07:28,378:INFO:Assigning column types.
2024-12-05 21:07:28,404:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-05 21:07:28,446:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 21:07:28,449:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:07:28,484:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:07:28,488:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:07:28,558:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 21:07:28,559:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:07:28,585:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:07:28,588:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:07:28,588:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-05 21:07:28,631:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:07:28,659:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:07:28,662:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:07:28,706:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:07:28,734:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:07:28,736:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:07:28,737:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-05 21:07:28,806:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:07:28,809:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:07:28,879:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:07:28,881:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:07:28,883:INFO:Preparing preprocessing pipeline...
2024-12-05 21:07:28,887:INFO:Set up simple imputation.
2024-12-05 21:07:28,900:INFO:Set up encoding of categorical features.
2024-12-05 21:07:28,900:INFO:Set up feature normalization.
2024-12-05 21:07:29,187:INFO:Finished creating preprocessing pipeline.
2024-12-05 21:07:29,194:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\diego\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_et...
                 TransformerWrapper(exclude=None, include=['wallet_address'],
                                    transformer=TargetEncoder(cols=['wallet_address'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-12-05 21:07:29,194:INFO:Creating final display dataframe.
2024-12-05 21:07:29,859:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            target
2                   Target type            Binary
3           Original data shape       (31007, 78)
4        Transformed data shape       (31007, 78)
5   Transformed train set shape       (21704, 78)
6    Transformed test set shape        (9303, 78)
7              Numeric features                76
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                    Normalize              True
16             Normalize method            zscore
17               Fold Generator   StratifiedKFold
18                  Fold Number                 5
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              0bb2
2024-12-05 21:07:29,941:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:07:29,943:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:07:30,012:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:07:30,014:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:07:30,015:INFO:setup() successfully completed in 1.94s...............
2024-12-05 21:07:30,016:INFO:Initializing compare_models()
2024-12-05 21:07:30,016:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-05 21:07:30,016:INFO:Checking exceptions
2024-12-05 21:07:30,033:INFO:Preparing display monitor
2024-12-05 21:07:30,057:INFO:Initializing Logistic Regression
2024-12-05 21:07:30,057:INFO:Total runtime is 0.0 minutes
2024-12-05 21:07:30,062:INFO:SubProcess create_model() called ==================================
2024-12-05 21:07:30,062:INFO:Initializing create_model()
2024-12-05 21:07:30,062:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E143A3760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:07:30,062:INFO:Checking exceptions
2024-12-05 21:07:30,062:INFO:Importing libraries
2024-12-05 21:07:30,063:INFO:Copying training dataset
2024-12-05 21:07:30,103:INFO:Defining folds
2024-12-05 21:07:30,103:INFO:Declaring metric variables
2024-12-05 21:07:30,147:INFO:Importing untrained model
2024-12-05 21:07:30,154:INFO:Logistic Regression Imported successfully
2024-12-05 21:07:30,175:INFO:Starting cross validation
2024-12-05 21:07:30,182:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:07:36,307:INFO:Calculating mean and std
2024-12-05 21:07:36,311:INFO:Creating metrics dataframe
2024-12-05 21:07:36,326:INFO:Uploading results into container
2024-12-05 21:07:36,329:INFO:Uploading model into container now
2024-12-05 21:07:36,331:INFO:_master_model_container: 1
2024-12-05 21:07:36,331:INFO:_display_container: 2
2024-12-05 21:07:36,332:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-05 21:07:36,332:INFO:create_model() successfully completed......................................
2024-12-05 21:07:36,538:INFO:SubProcess create_model() end ==================================
2024-12-05 21:07:36,539:INFO:Creating metrics dataframe
2024-12-05 21:07:36,580:INFO:Initializing K Neighbors Classifier
2024-12-05 21:07:36,580:INFO:Total runtime is 0.10871331691741944 minutes
2024-12-05 21:07:36,594:INFO:SubProcess create_model() called ==================================
2024-12-05 21:07:36,595:INFO:Initializing create_model()
2024-12-05 21:07:36,596:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E143A3760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:07:36,597:INFO:Checking exceptions
2024-12-05 21:07:36,597:INFO:Importing libraries
2024-12-05 21:07:36,598:INFO:Copying training dataset
2024-12-05 21:07:36,709:INFO:Defining folds
2024-12-05 21:07:36,709:INFO:Declaring metric variables
2024-12-05 21:07:36,720:INFO:Importing untrained model
2024-12-05 21:07:36,732:INFO:K Neighbors Classifier Imported successfully
2024-12-05 21:07:36,753:INFO:Starting cross validation
2024-12-05 21:07:36,758:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:07:42,716:INFO:Calculating mean and std
2024-12-05 21:07:42,717:INFO:Creating metrics dataframe
2024-12-05 21:07:42,722:INFO:Uploading results into container
2024-12-05 21:07:42,723:INFO:Uploading model into container now
2024-12-05 21:07:42,724:INFO:_master_model_container: 2
2024-12-05 21:07:42,724:INFO:_display_container: 2
2024-12-05 21:07:42,724:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-05 21:07:42,724:INFO:create_model() successfully completed......................................
2024-12-05 21:07:42,828:INFO:SubProcess create_model() end ==================================
2024-12-05 21:07:42,828:INFO:Creating metrics dataframe
2024-12-05 21:07:42,838:INFO:Initializing Naive Bayes
2024-12-05 21:07:42,838:INFO:Total runtime is 0.21301983594894408 minutes
2024-12-05 21:07:42,843:INFO:SubProcess create_model() called ==================================
2024-12-05 21:07:42,845:INFO:Initializing create_model()
2024-12-05 21:07:42,845:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E143A3760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:07:42,845:INFO:Checking exceptions
2024-12-05 21:07:42,845:INFO:Importing libraries
2024-12-05 21:07:42,845:INFO:Copying training dataset
2024-12-05 21:07:42,890:INFO:Defining folds
2024-12-05 21:07:42,890:INFO:Declaring metric variables
2024-12-05 21:07:42,893:INFO:Importing untrained model
2024-12-05 21:07:42,898:INFO:Naive Bayes Imported successfully
2024-12-05 21:07:42,907:INFO:Starting cross validation
2024-12-05 21:07:42,908:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:07:43,716:INFO:Calculating mean and std
2024-12-05 21:07:43,720:INFO:Creating metrics dataframe
2024-12-05 21:07:43,738:INFO:Uploading results into container
2024-12-05 21:07:43,740:INFO:Uploading model into container now
2024-12-05 21:07:43,742:INFO:_master_model_container: 3
2024-12-05 21:07:43,742:INFO:_display_container: 2
2024-12-05 21:07:43,743:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-05 21:07:43,743:INFO:create_model() successfully completed......................................
2024-12-05 21:07:43,948:INFO:SubProcess create_model() end ==================================
2024-12-05 21:07:43,948:INFO:Creating metrics dataframe
2024-12-05 21:07:44,001:INFO:Initializing Decision Tree Classifier
2024-12-05 21:07:44,001:INFO:Total runtime is 0.23240261872609455 minutes
2024-12-05 21:07:44,015:INFO:SubProcess create_model() called ==================================
2024-12-05 21:07:44,016:INFO:Initializing create_model()
2024-12-05 21:07:44,016:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E143A3760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:07:44,017:INFO:Checking exceptions
2024-12-05 21:07:44,017:INFO:Importing libraries
2024-12-05 21:07:44,017:INFO:Copying training dataset
2024-12-05 21:07:44,131:INFO:Defining folds
2024-12-05 21:07:44,132:INFO:Declaring metric variables
2024-12-05 21:07:44,137:INFO:Importing untrained model
2024-12-05 21:07:44,151:INFO:Decision Tree Classifier Imported successfully
2024-12-05 21:07:44,170:INFO:Starting cross validation
2024-12-05 21:07:44,173:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:07:46,701:INFO:Calculating mean and std
2024-12-05 21:07:46,705:INFO:Creating metrics dataframe
2024-12-05 21:07:46,723:INFO:Uploading results into container
2024-12-05 21:07:46,729:INFO:Uploading model into container now
2024-12-05 21:07:46,731:INFO:_master_model_container: 4
2024-12-05 21:07:46,732:INFO:_display_container: 2
2024-12-05 21:07:46,733:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-12-05 21:07:46,734:INFO:create_model() successfully completed......................................
2024-12-05 21:07:46,914:INFO:SubProcess create_model() end ==================================
2024-12-05 21:07:46,914:INFO:Creating metrics dataframe
2024-12-05 21:07:46,924:INFO:Initializing SVM - Linear Kernel
2024-12-05 21:07:46,925:INFO:Total runtime is 0.2811341643333435 minutes
2024-12-05 21:07:46,929:INFO:SubProcess create_model() called ==================================
2024-12-05 21:07:46,929:INFO:Initializing create_model()
2024-12-05 21:07:46,929:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E143A3760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:07:46,929:INFO:Checking exceptions
2024-12-05 21:07:46,930:INFO:Importing libraries
2024-12-05 21:07:46,930:INFO:Copying training dataset
2024-12-05 21:07:46,990:INFO:Defining folds
2024-12-05 21:07:46,991:INFO:Declaring metric variables
2024-12-05 21:07:46,994:INFO:Importing untrained model
2024-12-05 21:07:47,000:INFO:SVM - Linear Kernel Imported successfully
2024-12-05 21:07:47,007:INFO:Starting cross validation
2024-12-05 21:07:47,009:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:07:48,307:INFO:Calculating mean and std
2024-12-05 21:07:48,311:INFO:Creating metrics dataframe
2024-12-05 21:07:48,328:INFO:Uploading results into container
2024-12-05 21:07:48,330:INFO:Uploading model into container now
2024-12-05 21:07:48,332:INFO:_master_model_container: 5
2024-12-05 21:07:48,332:INFO:_display_container: 2
2024-12-05 21:07:48,334:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-05 21:07:48,335:INFO:create_model() successfully completed......................................
2024-12-05 21:07:48,539:INFO:SubProcess create_model() end ==================================
2024-12-05 21:07:48,540:INFO:Creating metrics dataframe
2024-12-05 21:07:48,588:INFO:Initializing Ridge Classifier
2024-12-05 21:07:48,588:INFO:Total runtime is 0.30884931087493894 minutes
2024-12-05 21:07:48,602:INFO:SubProcess create_model() called ==================================
2024-12-05 21:07:48,604:INFO:Initializing create_model()
2024-12-05 21:07:48,605:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E143A3760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:07:48,605:INFO:Checking exceptions
2024-12-05 21:07:48,606:INFO:Importing libraries
2024-12-05 21:07:48,606:INFO:Copying training dataset
2024-12-05 21:07:48,729:INFO:Defining folds
2024-12-05 21:07:48,729:INFO:Declaring metric variables
2024-12-05 21:07:48,737:INFO:Importing untrained model
2024-12-05 21:07:48,744:INFO:Ridge Classifier Imported successfully
2024-12-05 21:07:48,755:INFO:Starting cross validation
2024-12-05 21:07:48,757:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:07:49,517:INFO:Calculating mean and std
2024-12-05 21:07:49,522:INFO:Creating metrics dataframe
2024-12-05 21:07:49,538:INFO:Uploading results into container
2024-12-05 21:07:49,541:INFO:Uploading model into container now
2024-12-05 21:07:49,543:INFO:_master_model_container: 6
2024-12-05 21:07:49,543:INFO:_display_container: 2
2024-12-05 21:07:49,546:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-12-05 21:07:49,547:INFO:create_model() successfully completed......................................
2024-12-05 21:07:49,701:INFO:SubProcess create_model() end ==================================
2024-12-05 21:07:49,701:INFO:Creating metrics dataframe
2024-12-05 21:07:49,718:INFO:Initializing Random Forest Classifier
2024-12-05 21:07:49,718:INFO:Total runtime is 0.3276859720547994 minutes
2024-12-05 21:07:49,725:INFO:SubProcess create_model() called ==================================
2024-12-05 21:07:49,725:INFO:Initializing create_model()
2024-12-05 21:07:49,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E143A3760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:07:49,726:INFO:Checking exceptions
2024-12-05 21:07:49,726:INFO:Importing libraries
2024-12-05 21:07:49,726:INFO:Copying training dataset
2024-12-05 21:07:49,779:INFO:Defining folds
2024-12-05 21:07:49,780:INFO:Declaring metric variables
2024-12-05 21:07:49,786:INFO:Importing untrained model
2024-12-05 21:07:49,795:INFO:Random Forest Classifier Imported successfully
2024-12-05 21:07:49,808:INFO:Starting cross validation
2024-12-05 21:07:49,810:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:07:59,845:INFO:Calculating mean and std
2024-12-05 21:07:59,846:INFO:Creating metrics dataframe
2024-12-05 21:07:59,848:INFO:Uploading results into container
2024-12-05 21:07:59,848:INFO:Uploading model into container now
2024-12-05 21:07:59,848:INFO:_master_model_container: 7
2024-12-05 21:07:59,848:INFO:_display_container: 2
2024-12-05 21:07:59,848:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 21:07:59,848:INFO:create_model() successfully completed......................................
2024-12-05 21:07:59,974:INFO:SubProcess create_model() end ==================================
2024-12-05 21:07:59,974:INFO:Creating metrics dataframe
2024-12-05 21:07:59,995:INFO:Initializing Quadratic Discriminant Analysis
2024-12-05 21:07:59,995:INFO:Total runtime is 0.498955496152242 minutes
2024-12-05 21:07:59,999:INFO:SubProcess create_model() called ==================================
2024-12-05 21:07:59,999:INFO:Initializing create_model()
2024-12-05 21:07:59,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E143A3760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:07:59,999:INFO:Checking exceptions
2024-12-05 21:08:00,000:INFO:Importing libraries
2024-12-05 21:08:00,000:INFO:Copying training dataset
2024-12-05 21:08:00,047:INFO:Defining folds
2024-12-05 21:08:00,047:INFO:Declaring metric variables
2024-12-05 21:08:00,053:INFO:Importing untrained model
2024-12-05 21:08:00,057:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-05 21:08:00,066:INFO:Starting cross validation
2024-12-05 21:08:00,068:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:08:00,941:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 21:08:00,962:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 21:08:00,969:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 21:08:00,971:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 21:08:01,031:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 21:08:01,691:INFO:Calculating mean and std
2024-12-05 21:08:01,691:INFO:Creating metrics dataframe
2024-12-05 21:08:01,711:INFO:Uploading results into container
2024-12-05 21:08:01,715:INFO:Uploading model into container now
2024-12-05 21:08:01,717:INFO:_master_model_container: 8
2024-12-05 21:08:01,719:INFO:_display_container: 2
2024-12-05 21:08:01,721:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-05 21:08:01,723:INFO:create_model() successfully completed......................................
2024-12-05 21:08:01,908:INFO:SubProcess create_model() end ==================================
2024-12-05 21:08:01,908:INFO:Creating metrics dataframe
2024-12-05 21:08:01,922:INFO:Initializing Ada Boost Classifier
2024-12-05 21:08:01,922:INFO:Total runtime is 0.5310746471087138 minutes
2024-12-05 21:08:01,926:INFO:SubProcess create_model() called ==================================
2024-12-05 21:08:01,926:INFO:Initializing create_model()
2024-12-05 21:08:01,927:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E143A3760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:08:01,927:INFO:Checking exceptions
2024-12-05 21:08:01,927:INFO:Importing libraries
2024-12-05 21:08:01,927:INFO:Copying training dataset
2024-12-05 21:08:01,962:INFO:Defining folds
2024-12-05 21:08:01,963:INFO:Declaring metric variables
2024-12-05 21:08:01,969:INFO:Importing untrained model
2024-12-05 21:08:01,975:INFO:Ada Boost Classifier Imported successfully
2024-12-05 21:08:01,983:INFO:Starting cross validation
2024-12-05 21:08:01,987:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:08:02,462:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:08:02,464:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:08:02,476:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:08:02,479:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:08:02,496:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:08:09,909:INFO:Calculating mean and std
2024-12-05 21:08:09,912:INFO:Creating metrics dataframe
2024-12-05 21:08:09,926:INFO:Uploading results into container
2024-12-05 21:08:09,936:INFO:Uploading model into container now
2024-12-05 21:08:09,938:INFO:_master_model_container: 9
2024-12-05 21:08:09,939:INFO:_display_container: 2
2024-12-05 21:08:09,941:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-12-05 21:08:09,941:INFO:create_model() successfully completed......................................
2024-12-05 21:08:10,176:INFO:SubProcess create_model() end ==================================
2024-12-05 21:08:10,177:INFO:Creating metrics dataframe
2024-12-05 21:08:10,231:INFO:Initializing Gradient Boosting Classifier
2024-12-05 21:08:10,231:INFO:Total runtime is 0.6695663054784139 minutes
2024-12-05 21:08:10,246:INFO:SubProcess create_model() called ==================================
2024-12-05 21:08:10,247:INFO:Initializing create_model()
2024-12-05 21:08:10,247:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E143A3760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:08:10,248:INFO:Checking exceptions
2024-12-05 21:08:10,248:INFO:Importing libraries
2024-12-05 21:08:10,249:INFO:Copying training dataset
2024-12-05 21:08:10,390:INFO:Defining folds
2024-12-05 21:08:10,391:INFO:Declaring metric variables
2024-12-05 21:08:10,407:INFO:Importing untrained model
2024-12-05 21:08:10,425:INFO:Gradient Boosting Classifier Imported successfully
2024-12-05 21:08:10,458:INFO:Starting cross validation
2024-12-05 21:08:10,464:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:08:41,974:INFO:Calculating mean and std
2024-12-05 21:08:41,979:INFO:Creating metrics dataframe
2024-12-05 21:08:41,993:INFO:Uploading results into container
2024-12-05 21:08:41,996:INFO:Uploading model into container now
2024-12-05 21:08:41,997:INFO:_master_model_container: 10
2024-12-05 21:08:41,997:INFO:_display_container: 2
2024-12-05 21:08:41,999:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-05 21:08:41,999:INFO:create_model() successfully completed......................................
2024-12-05 21:08:42,207:INFO:SubProcess create_model() end ==================================
2024-12-05 21:08:42,208:INFO:Creating metrics dataframe
2024-12-05 21:08:42,269:INFO:Initializing Linear Discriminant Analysis
2024-12-05 21:08:42,271:INFO:Total runtime is 1.2035585045814514 minutes
2024-12-05 21:08:42,287:INFO:SubProcess create_model() called ==================================
2024-12-05 21:08:42,288:INFO:Initializing create_model()
2024-12-05 21:08:42,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E143A3760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:08:42,289:INFO:Checking exceptions
2024-12-05 21:08:42,289:INFO:Importing libraries
2024-12-05 21:08:42,291:INFO:Copying training dataset
2024-12-05 21:08:42,453:INFO:Defining folds
2024-12-05 21:08:42,454:INFO:Declaring metric variables
2024-12-05 21:08:42,466:INFO:Importing untrained model
2024-12-05 21:08:42,472:INFO:Linear Discriminant Analysis Imported successfully
2024-12-05 21:08:42,484:INFO:Starting cross validation
2024-12-05 21:08:42,486:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:08:43,929:INFO:Calculating mean and std
2024-12-05 21:08:43,933:INFO:Creating metrics dataframe
2024-12-05 21:08:43,947:INFO:Uploading results into container
2024-12-05 21:08:43,949:INFO:Uploading model into container now
2024-12-05 21:08:43,949:INFO:_master_model_container: 11
2024-12-05 21:08:43,951:INFO:_display_container: 2
2024-12-05 21:08:43,952:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-05 21:08:43,952:INFO:create_model() successfully completed......................................
2024-12-05 21:08:44,156:INFO:SubProcess create_model() end ==================================
2024-12-05 21:08:44,157:INFO:Creating metrics dataframe
2024-12-05 21:08:44,185:INFO:Initializing Extra Trees Classifier
2024-12-05 21:08:44,186:INFO:Total runtime is 1.2354763388633727 minutes
2024-12-05 21:08:44,195:INFO:SubProcess create_model() called ==================================
2024-12-05 21:08:44,196:INFO:Initializing create_model()
2024-12-05 21:08:44,196:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E143A3760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:08:44,196:INFO:Checking exceptions
2024-12-05 21:08:44,197:INFO:Importing libraries
2024-12-05 21:08:44,197:INFO:Copying training dataset
2024-12-05 21:08:44,306:INFO:Defining folds
2024-12-05 21:08:44,306:INFO:Declaring metric variables
2024-12-05 21:08:44,313:INFO:Importing untrained model
2024-12-05 21:08:44,319:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:08:44,329:INFO:Starting cross validation
2024-12-05 21:08:44,330:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:08:49,096:INFO:Calculating mean and std
2024-12-05 21:08:49,100:INFO:Creating metrics dataframe
2024-12-05 21:08:49,113:INFO:Uploading results into container
2024-12-05 21:08:49,116:INFO:Uploading model into container now
2024-12-05 21:08:49,117:INFO:_master_model_container: 12
2024-12-05 21:08:49,118:INFO:_display_container: 2
2024-12-05 21:08:49,121:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:08:49,122:INFO:create_model() successfully completed......................................
2024-12-05 21:08:49,345:INFO:SubProcess create_model() end ==================================
2024-12-05 21:08:49,349:INFO:Creating metrics dataframe
2024-12-05 21:08:49,402:INFO:Initializing Extreme Gradient Boosting
2024-12-05 21:08:49,403:INFO:Total runtime is 1.3224237918853758 minutes
2024-12-05 21:08:49,422:INFO:SubProcess create_model() called ==================================
2024-12-05 21:08:49,424:INFO:Initializing create_model()
2024-12-05 21:08:49,424:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E143A3760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:08:49,425:INFO:Checking exceptions
2024-12-05 21:08:49,425:INFO:Importing libraries
2024-12-05 21:08:49,427:INFO:Copying training dataset
2024-12-05 21:08:49,516:INFO:Defining folds
2024-12-05 21:08:49,516:INFO:Declaring metric variables
2024-12-05 21:08:49,521:INFO:Importing untrained model
2024-12-05 21:08:49,529:INFO:Extreme Gradient Boosting Imported successfully
2024-12-05 21:08:49,538:INFO:Starting cross validation
2024-12-05 21:08:49,540:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:08:53,623:INFO:Calculating mean and std
2024-12-05 21:08:53,628:INFO:Creating metrics dataframe
2024-12-05 21:08:53,641:INFO:Uploading results into container
2024-12-05 21:08:53,644:INFO:Uploading model into container now
2024-12-05 21:08:53,646:INFO:_master_model_container: 13
2024-12-05 21:08:53,646:INFO:_display_container: 2
2024-12-05 21:08:53,651:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-12-05 21:08:53,652:INFO:create_model() successfully completed......................................
2024-12-05 21:08:53,842:INFO:SubProcess create_model() end ==================================
2024-12-05 21:08:53,842:INFO:Creating metrics dataframe
2024-12-05 21:08:53,864:INFO:Initializing Light Gradient Boosting Machine
2024-12-05 21:08:53,865:INFO:Total runtime is 1.3967835863431293 minutes
2024-12-05 21:08:53,871:INFO:SubProcess create_model() called ==================================
2024-12-05 21:08:53,871:INFO:Initializing create_model()
2024-12-05 21:08:53,872:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E143A3760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:08:53,872:INFO:Checking exceptions
2024-12-05 21:08:53,872:INFO:Importing libraries
2024-12-05 21:08:53,872:INFO:Copying training dataset
2024-12-05 21:08:53,944:INFO:Defining folds
2024-12-05 21:08:53,945:INFO:Declaring metric variables
2024-12-05 21:08:53,952:INFO:Importing untrained model
2024-12-05 21:08:53,959:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-05 21:08:53,970:INFO:Starting cross validation
2024-12-05 21:08:53,972:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:08:57,720:INFO:Calculating mean and std
2024-12-05 21:08:57,724:INFO:Creating metrics dataframe
2024-12-05 21:08:57,738:INFO:Uploading results into container
2024-12-05 21:08:57,740:INFO:Uploading model into container now
2024-12-05 21:08:57,741:INFO:_master_model_container: 14
2024-12-05 21:08:57,741:INFO:_display_container: 2
2024-12-05 21:08:57,742:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-05 21:08:57,742:INFO:create_model() successfully completed......................................
2024-12-05 21:08:57,914:INFO:SubProcess create_model() end ==================================
2024-12-05 21:08:57,914:INFO:Creating metrics dataframe
2024-12-05 21:08:57,960:INFO:Initializing CatBoost Classifier
2024-12-05 21:08:57,961:INFO:Total runtime is 1.4650601069132485 minutes
2024-12-05 21:08:57,975:INFO:SubProcess create_model() called ==================================
2024-12-05 21:08:57,976:INFO:Initializing create_model()
2024-12-05 21:08:57,976:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E143A3760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:08:57,976:INFO:Checking exceptions
2024-12-05 21:08:57,977:INFO:Importing libraries
2024-12-05 21:08:57,977:INFO:Copying training dataset
2024-12-05 21:08:58,086:INFO:Defining folds
2024-12-05 21:08:58,087:INFO:Declaring metric variables
2024-12-05 21:08:58,101:INFO:Importing untrained model
2024-12-05 21:08:58,114:INFO:CatBoost Classifier Imported successfully
2024-12-05 21:08:58,140:INFO:Starting cross validation
2024-12-05 21:08:58,145:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:09:57,645:INFO:Calculating mean and std
2024-12-05 21:09:57,646:INFO:Creating metrics dataframe
2024-12-05 21:09:57,650:INFO:Uploading results into container
2024-12-05 21:09:57,651:INFO:Uploading model into container now
2024-12-05 21:09:57,651:INFO:_master_model_container: 15
2024-12-05 21:09:57,651:INFO:_display_container: 2
2024-12-05 21:09:57,651:INFO:<catboost.core.CatBoostClassifier object at 0x0000023E141D52D0>
2024-12-05 21:09:57,652:INFO:create_model() successfully completed......................................
2024-12-05 21:09:57,744:INFO:SubProcess create_model() end ==================================
2024-12-05 21:09:57,744:INFO:Creating metrics dataframe
2024-12-05 21:09:57,760:INFO:Initializing Dummy Classifier
2024-12-05 21:09:57,760:INFO:Total runtime is 2.4617052197456357 minutes
2024-12-05 21:09:57,764:INFO:SubProcess create_model() called ==================================
2024-12-05 21:09:57,764:INFO:Initializing create_model()
2024-12-05 21:09:57,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E143A3760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:09:57,764:INFO:Checking exceptions
2024-12-05 21:09:57,764:INFO:Importing libraries
2024-12-05 21:09:57,764:INFO:Copying training dataset
2024-12-05 21:09:57,799:INFO:Defining folds
2024-12-05 21:09:57,799:INFO:Declaring metric variables
2024-12-05 21:09:57,803:INFO:Importing untrained model
2024-12-05 21:09:57,808:INFO:Dummy Classifier Imported successfully
2024-12-05 21:09:57,821:INFO:Starting cross validation
2024-12-05 21:09:57,823:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:09:58,608:INFO:Calculating mean and std
2024-12-05 21:09:58,609:INFO:Creating metrics dataframe
2024-12-05 21:09:58,616:INFO:Uploading results into container
2024-12-05 21:09:58,618:INFO:Uploading model into container now
2024-12-05 21:09:58,619:INFO:_master_model_container: 16
2024-12-05 21:09:58,619:INFO:_display_container: 2
2024-12-05 21:09:58,619:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-12-05 21:09:58,619:INFO:create_model() successfully completed......................................
2024-12-05 21:09:58,734:INFO:SubProcess create_model() end ==================================
2024-12-05 21:09:58,734:INFO:Creating metrics dataframe
2024-12-05 21:09:58,765:INFO:Initializing create_model()
2024-12-05 21:09:58,766:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:09:58,766:INFO:Checking exceptions
2024-12-05 21:09:58,768:INFO:Importing libraries
2024-12-05 21:09:58,768:INFO:Copying training dataset
2024-12-05 21:09:58,804:INFO:Defining folds
2024-12-05 21:09:58,804:INFO:Declaring metric variables
2024-12-05 21:09:58,804:INFO:Importing untrained model
2024-12-05 21:09:58,804:INFO:Declaring custom model
2024-12-05 21:09:58,806:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:09:58,808:INFO:Cross validation set to False
2024-12-05 21:09:58,808:INFO:Fitting Model
2024-12-05 21:10:00,238:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:10:00,239:INFO:create_model() successfully completed......................................
2024-12-05 21:10:00,383:INFO:_master_model_container: 16
2024-12-05 21:10:00,383:INFO:_display_container: 2
2024-12-05 21:10:00,384:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:10:00,384:INFO:compare_models() successfully completed......................................
2024-12-05 21:11:35,983:INFO:Initializing predict_model()
2024-12-05 21:11:35,983:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E147F80D0>)
2024-12-05 21:11:35,983:INFO:Checking exceptions
2024-12-05 21:11:35,983:INFO:Preloading libraries
2024-12-05 21:11:35,986:INFO:Set up data.
2024-12-05 21:11:36,048:INFO:Set up index.
2024-12-05 21:11:36,630:INFO:Initializing finalize_model()
2024-12-05 21:11:36,631:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-05 21:11:36,631:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:11:36,657:INFO:Initializing create_model()
2024-12-05 21:11:36,657:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:11:36,657:INFO:Checking exceptions
2024-12-05 21:11:36,660:INFO:Importing libraries
2024-12-05 21:11:36,660:INFO:Copying training dataset
2024-12-05 21:11:36,663:INFO:Defining folds
2024-12-05 21:11:36,663:INFO:Declaring metric variables
2024-12-05 21:11:36,664:INFO:Importing untrained model
2024-12-05 21:11:36,664:INFO:Declaring custom model
2024-12-05 21:11:36,665:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:11:36,666:INFO:Cross validation set to False
2024-12-05 21:11:36,667:INFO:Fitting Model
2024-12-05 21:11:39,274:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 21:11:39,274:INFO:create_model() successfully completed......................................
2024-12-05 21:11:39,385:INFO:_master_model_container: 16
2024-12-05 21:11:39,386:INFO:_display_container: 3
2024-12-05 21:11:39,395:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 21:11:39,396:INFO:finalize_model() successfully completed......................................
2024-12-05 21:11:39,507:INFO:Initializing predict_model()
2024-12-05 21:11:39,507:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E12E20CA0>)
2024-12-05 21:11:39,507:INFO:Checking exceptions
2024-12-05 21:11:39,507:INFO:Preloading libraries
2024-12-05 21:11:39,509:INFO:Set up data.
2024-12-05 21:11:39,555:INFO:Set up index.
2024-12-05 21:11:53,499:INFO:Initializing predict_model()
2024-12-05 21:11:53,499:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E1456B2E0>)
2024-12-05 21:11:53,500:INFO:Checking exceptions
2024-12-05 21:11:53,501:INFO:Preloading libraries
2024-12-05 21:11:53,510:INFO:Set up data.
2024-12-05 21:11:53,655:INFO:Set up index.
2024-12-05 21:12:06,194:INFO:Initializing predict_model()
2024-12-05 21:12:06,194:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E149B5630>)
2024-12-05 21:12:06,194:INFO:Checking exceptions
2024-12-05 21:12:06,194:INFO:Preloading libraries
2024-12-05 21:12:06,199:INFO:Set up data.
2024-12-05 21:12:06,266:INFO:Set up index.
2024-12-05 21:12:26,261:INFO:Initializing plot_model()
2024-12-05 21:12:26,261:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E129BAB90>, system=True)
2024-12-05 21:12:26,261:INFO:Checking exceptions
2024-12-05 21:12:26,354:INFO:Preloading libraries
2024-12-05 21:12:26,508:INFO:Copying training dataset
2024-12-05 21:12:26,508:INFO:Plot type: feature
2024-12-05 21:12:26,508:WARNING:No coef_ found. Trying feature_importances_
2024-12-05 21:12:26,872:INFO:Visual Rendered Successfully
2024-12-05 21:12:26,958:INFO:plot_model() successfully completed......................................
2024-12-05 21:13:15,074:INFO:PyCaret ClassificationExperiment
2024-12-05 21:13:15,074:INFO:Logging name: clf-default-name
2024-12-05 21:13:15,074:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-05 21:13:15,074:INFO:version 3.3.2
2024-12-05 21:13:15,074:INFO:Initializing setup()
2024-12-05 21:13:15,074:INFO:self.USI: 7a90
2024-12-05 21:13:15,074:INFO:self._variable_keys: {'_available_plots', 'logging_param', 'is_multiclass', 'fold_generator', 'y', 'data', 'fold_groups_param', 'memory', 'X', 'target_param', 'pipeline', 'y_train', '_ml_usecase', 'seed', 'X_train', 'html_param', 'USI', 'X_test', 'exp_name_log', 'exp_id', 'fix_imbalance', 'fold_shuffle_param', 'gpu_param', 'gpu_n_jobs_param', 'y_test', 'log_plots_param', 'idx', 'n_jobs_param'}
2024-12-05 21:13:15,075:INFO:Checking environment
2024-12-05 21:13:15,075:INFO:python_version: 3.10.11
2024-12-05 21:13:15,075:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-12-05 21:13:15,075:INFO:machine: AMD64
2024-12-05 21:13:15,075:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-05 21:13:15,078:INFO:Memory: svmem(total=17041244160, available=4647710720, percent=72.7, used=12393533440, free=4647710720)
2024-12-05 21:13:15,078:INFO:Physical Core: 4
2024-12-05 21:13:15,078:INFO:Logical Core: 8
2024-12-05 21:13:15,078:INFO:Checking libraries
2024-12-05 21:13:15,078:INFO:System:
2024-12-05 21:13:15,078:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-12-05 21:13:15,078:INFO:executable: c:\Users\diego\AppData\Local\Programs\Python\Python310\python.exe
2024-12-05 21:13:15,078:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-05 21:13:15,078:INFO:PyCaret required dependencies:
2024-12-05 21:13:15,078:INFO:                 pip: 24.2
2024-12-05 21:13:15,078:INFO:          setuptools: 65.5.0
2024-12-05 21:13:15,078:INFO:             pycaret: 3.3.2
2024-12-05 21:13:15,078:INFO:             IPython: 8.26.0
2024-12-05 21:13:15,079:INFO:          ipywidgets: 8.1.5
2024-12-05 21:13:15,079:INFO:                tqdm: 4.66.5
2024-12-05 21:13:15,079:INFO:               numpy: 1.26.4
2024-12-05 21:13:15,079:INFO:              pandas: 1.5.3
2024-12-05 21:13:15,079:INFO:              jinja2: 3.1.4
2024-12-05 21:13:15,079:INFO:               scipy: 1.11.4
2024-12-05 21:13:15,079:INFO:              joblib: 1.3.2
2024-12-05 21:13:15,079:INFO:             sklearn: 1.4.2
2024-12-05 21:13:15,079:INFO:                pyod: 2.0.2
2024-12-05 21:13:15,079:INFO:            imblearn: 0.12.3
2024-12-05 21:13:15,079:INFO:   category_encoders: 2.6.4
2024-12-05 21:13:15,079:INFO:            lightgbm: 4.5.0
2024-12-05 21:13:15,079:INFO:               numba: 0.60.0
2024-12-05 21:13:15,079:INFO:            requests: 2.32.3
2024-12-05 21:13:15,079:INFO:          matplotlib: 3.7.5
2024-12-05 21:13:15,079:INFO:          scikitplot: 0.3.7
2024-12-05 21:13:15,079:INFO:         yellowbrick: 1.5
2024-12-05 21:13:15,079:INFO:              plotly: 5.24.1
2024-12-05 21:13:15,079:INFO:    plotly-resampler: Not installed
2024-12-05 21:13:15,079:INFO:             kaleido: 0.2.1
2024-12-05 21:13:15,079:INFO:           schemdraw: 0.15
2024-12-05 21:13:15,079:INFO:         statsmodels: 0.14.4
2024-12-05 21:13:15,079:INFO:              sktime: 0.26.0
2024-12-05 21:13:15,079:INFO:               tbats: 1.1.3
2024-12-05 21:13:15,079:INFO:            pmdarima: 2.0.4
2024-12-05 21:13:15,079:INFO:              psutil: 6.0.0
2024-12-05 21:13:15,079:INFO:          markupsafe: 2.1.5
2024-12-05 21:13:15,079:INFO:             pickle5: Not installed
2024-12-05 21:13:15,079:INFO:         cloudpickle: 3.1.0
2024-12-05 21:13:15,080:INFO:         deprecation: 2.1.0
2024-12-05 21:13:15,080:INFO:              xxhash: 3.5.0
2024-12-05 21:13:15,080:INFO:           wurlitzer: Not installed
2024-12-05 21:13:15,080:INFO:PyCaret optional dependencies:
2024-12-05 21:13:15,080:INFO:                shap: 0.44.0
2024-12-05 21:13:15,080:INFO:           interpret: 0.5.0
2024-12-05 21:13:15,080:INFO:                umap: 0.5.6
2024-12-05 21:13:15,080:INFO:     ydata_profiling: 4.11.0
2024-12-05 21:13:15,080:INFO:  explainerdashboard: 0.4.7
2024-12-05 21:13:15,080:INFO:             autoviz: Not installed
2024-12-05 21:13:15,080:INFO:           fairlearn: 0.7.0
2024-12-05 21:13:15,083:INFO:          deepchecks: Not installed
2024-12-05 21:13:15,083:INFO:             xgboost: 2.1.2
2024-12-05 21:13:15,083:INFO:            catboost: 1.2.7
2024-12-05 21:13:15,083:INFO:              kmodes: Not installed
2024-12-05 21:13:15,083:INFO:             mlxtend: Not installed
2024-12-05 21:13:15,083:INFO:       statsforecast: Not installed
2024-12-05 21:13:15,083:INFO:        tune_sklearn: Not installed
2024-12-05 21:13:15,083:INFO:                 ray: Not installed
2024-12-05 21:13:15,083:INFO:            hyperopt: Not installed
2024-12-05 21:13:15,083:INFO:              optuna: 4.0.0
2024-12-05 21:13:15,083:INFO:               skopt: Not installed
2024-12-05 21:13:15,083:INFO:              mlflow: 2.18.0
2024-12-05 21:13:15,083:INFO:              gradio: Not installed
2024-12-05 21:13:15,083:INFO:             fastapi: Not installed
2024-12-05 21:13:15,083:INFO:             uvicorn: Not installed
2024-12-05 21:13:15,083:INFO:              m2cgen: Not installed
2024-12-05 21:13:15,083:INFO:           evidently: Not installed
2024-12-05 21:13:15,083:INFO:               fugue: Not installed
2024-12-05 21:13:15,083:INFO:           streamlit: 1.39.0
2024-12-05 21:13:15,083:INFO:             prophet: Not installed
2024-12-05 21:13:15,083:INFO:None
2024-12-05 21:13:15,083:INFO:Set up data.
2024-12-05 21:13:15,150:INFO:Set up folding strategy.
2024-12-05 21:13:15,150:INFO:Set up train/test split.
2024-12-05 21:13:15,196:INFO:Set up index.
2024-12-05 21:13:15,197:INFO:Assigning column types.
2024-12-05 21:13:15,230:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-05 21:13:15,273:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 21:13:15,273:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:13:15,300:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:13:15,303:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:13:15,371:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 21:13:15,373:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:13:15,401:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:13:15,404:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:13:15,405:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-05 21:13:15,450:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:13:15,477:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:13:15,479:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:13:15,524:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:13:15,550:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:13:15,552:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:13:15,553:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-05 21:13:15,639:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:13:15,642:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:13:15,712:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:13:15,714:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:13:15,716:INFO:Preparing preprocessing pipeline...
2024-12-05 21:13:15,720:INFO:Set up simple imputation.
2024-12-05 21:13:15,731:INFO:Set up encoding of categorical features.
2024-12-05 21:13:15,732:INFO:Set up imbalanced handling.
2024-12-05 21:13:15,732:INFO:Set up feature normalization.
2024-12-05 21:13:16,889:INFO:Finished creating preprocessing pipeline.
2024-12-05 21:13:16,896:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\diego\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_et...
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-12-05 21:13:16,896:INFO:Creating final display dataframe.
2024-12-05 21:13:18,215:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            target
2                   Target type            Binary
3           Original data shape       (31007, 78)
4        Transformed data shape       (31505, 78)
5   Transformed train set shape       (22202, 78)
6    Transformed test set shape        (9303, 78)
7              Numeric features                76
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                 5
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              7a90
2024-12-05 21:13:18,308:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:13:18,310:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:13:18,406:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:13:18,409:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:13:18,411:INFO:setup() successfully completed in 3.46s...............
2024-12-05 21:13:18,457:INFO:Initializing compare_models()
2024-12-05 21:13:18,457:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-05 21:13:18,457:INFO:Checking exceptions
2024-12-05 21:13:18,479:INFO:Preparing display monitor
2024-12-05 21:13:18,506:INFO:Initializing Logistic Regression
2024-12-05 21:13:18,506:INFO:Total runtime is 0.0 minutes
2024-12-05 21:13:18,511:INFO:SubProcess create_model() called ==================================
2024-12-05 21:13:18,513:INFO:Initializing create_model()
2024-12-05 21:13:18,513:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E126EFEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:13:18,513:INFO:Checking exceptions
2024-12-05 21:13:18,513:INFO:Importing libraries
2024-12-05 21:13:18,513:INFO:Copying training dataset
2024-12-05 21:13:18,555:INFO:Defining folds
2024-12-05 21:13:18,555:INFO:Declaring metric variables
2024-12-05 21:13:18,560:INFO:Importing untrained model
2024-12-05 21:13:18,565:INFO:Logistic Regression Imported successfully
2024-12-05 21:13:18,575:INFO:Starting cross validation
2024-12-05 21:13:18,579:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:13:21,891:INFO:Calculating mean and std
2024-12-05 21:13:21,893:INFO:Creating metrics dataframe
2024-12-05 21:13:21,897:INFO:Uploading results into container
2024-12-05 21:13:21,897:INFO:Uploading model into container now
2024-12-05 21:13:21,898:INFO:_master_model_container: 1
2024-12-05 21:13:21,898:INFO:_display_container: 2
2024-12-05 21:13:21,899:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-05 21:13:21,899:INFO:create_model() successfully completed......................................
2024-12-05 21:13:21,994:INFO:SubProcess create_model() end ==================================
2024-12-05 21:13:21,994:INFO:Creating metrics dataframe
2024-12-05 21:13:22,006:INFO:Initializing K Neighbors Classifier
2024-12-05 21:13:22,006:INFO:Total runtime is 0.058323876063028975 minutes
2024-12-05 21:13:22,010:INFO:SubProcess create_model() called ==================================
2024-12-05 21:13:22,011:INFO:Initializing create_model()
2024-12-05 21:13:22,011:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E126EFEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:13:22,011:INFO:Checking exceptions
2024-12-05 21:13:22,011:INFO:Importing libraries
2024-12-05 21:13:22,011:INFO:Copying training dataset
2024-12-05 21:13:22,083:INFO:Defining folds
2024-12-05 21:13:22,084:INFO:Declaring metric variables
2024-12-05 21:13:22,090:INFO:Importing untrained model
2024-12-05 21:13:22,094:INFO:K Neighbors Classifier Imported successfully
2024-12-05 21:13:22,103:INFO:Starting cross validation
2024-12-05 21:13:22,108:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:13:25,941:INFO:Calculating mean and std
2024-12-05 21:13:25,953:INFO:Creating metrics dataframe
2024-12-05 21:13:25,994:INFO:Uploading results into container
2024-12-05 21:13:25,996:INFO:Uploading model into container now
2024-12-05 21:13:25,998:INFO:_master_model_container: 2
2024-12-05 21:13:25,998:INFO:_display_container: 2
2024-12-05 21:13:25,999:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-05 21:13:26,000:INFO:create_model() successfully completed......................................
2024-12-05 21:13:26,166:INFO:SubProcess create_model() end ==================================
2024-12-05 21:13:26,166:INFO:Creating metrics dataframe
2024-12-05 21:13:26,175:INFO:Initializing Naive Bayes
2024-12-05 21:13:26,175:INFO:Total runtime is 0.12781951427459717 minutes
2024-12-05 21:13:26,179:INFO:SubProcess create_model() called ==================================
2024-12-05 21:13:26,179:INFO:Initializing create_model()
2024-12-05 21:13:26,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E126EFEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:13:26,180:INFO:Checking exceptions
2024-12-05 21:13:26,180:INFO:Importing libraries
2024-12-05 21:13:26,180:INFO:Copying training dataset
2024-12-05 21:13:26,213:INFO:Defining folds
2024-12-05 21:13:26,213:INFO:Declaring metric variables
2024-12-05 21:13:26,218:INFO:Importing untrained model
2024-12-05 21:13:26,224:INFO:Naive Bayes Imported successfully
2024-12-05 21:13:26,233:INFO:Starting cross validation
2024-12-05 21:13:26,236:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:13:28,070:INFO:Calculating mean and std
2024-12-05 21:13:28,073:INFO:Creating metrics dataframe
2024-12-05 21:13:28,090:INFO:Uploading results into container
2024-12-05 21:13:28,094:INFO:Uploading model into container now
2024-12-05 21:13:28,096:INFO:_master_model_container: 3
2024-12-05 21:13:28,096:INFO:_display_container: 2
2024-12-05 21:13:28,097:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-05 21:13:28,097:INFO:create_model() successfully completed......................................
2024-12-05 21:13:28,344:INFO:SubProcess create_model() end ==================================
2024-12-05 21:13:28,345:INFO:Creating metrics dataframe
2024-12-05 21:13:28,383:INFO:Initializing Decision Tree Classifier
2024-12-05 21:13:28,383:INFO:Total runtime is 0.1646090348561605 minutes
2024-12-05 21:13:28,393:INFO:SubProcess create_model() called ==================================
2024-12-05 21:13:28,393:INFO:Initializing create_model()
2024-12-05 21:13:28,394:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E126EFEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:13:28,394:INFO:Checking exceptions
2024-12-05 21:13:28,395:INFO:Importing libraries
2024-12-05 21:13:28,395:INFO:Copying training dataset
2024-12-05 21:13:28,505:INFO:Defining folds
2024-12-05 21:13:28,505:INFO:Declaring metric variables
2024-12-05 21:13:28,514:INFO:Importing untrained model
2024-12-05 21:13:28,521:INFO:Decision Tree Classifier Imported successfully
2024-12-05 21:13:28,534:INFO:Starting cross validation
2024-12-05 21:13:28,539:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:13:32,065:INFO:Calculating mean and std
2024-12-05 21:13:32,068:INFO:Creating metrics dataframe
2024-12-05 21:13:32,086:INFO:Uploading results into container
2024-12-05 21:13:32,088:INFO:Uploading model into container now
2024-12-05 21:13:32,090:INFO:_master_model_container: 4
2024-12-05 21:13:32,091:INFO:_display_container: 2
2024-12-05 21:13:32,093:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-12-05 21:13:32,094:INFO:create_model() successfully completed......................................
2024-12-05 21:13:32,345:INFO:SubProcess create_model() end ==================================
2024-12-05 21:13:32,345:INFO:Creating metrics dataframe
2024-12-05 21:13:32,404:INFO:Initializing SVM - Linear Kernel
2024-12-05 21:13:32,404:INFO:Total runtime is 0.23163075844446818 minutes
2024-12-05 21:13:32,414:INFO:SubProcess create_model() called ==================================
2024-12-05 21:13:32,416:INFO:Initializing create_model()
2024-12-05 21:13:32,416:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E126EFEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:13:32,417:INFO:Checking exceptions
2024-12-05 21:13:32,417:INFO:Importing libraries
2024-12-05 21:13:32,417:INFO:Copying training dataset
2024-12-05 21:13:32,482:INFO:Defining folds
2024-12-05 21:13:32,482:INFO:Declaring metric variables
2024-12-05 21:13:32,486:INFO:Importing untrained model
2024-12-05 21:13:32,490:INFO:SVM - Linear Kernel Imported successfully
2024-12-05 21:13:32,497:INFO:Starting cross validation
2024-12-05 21:13:32,501:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:13:34,591:INFO:Calculating mean and std
2024-12-05 21:13:34,596:INFO:Creating metrics dataframe
2024-12-05 21:13:34,610:INFO:Uploading results into container
2024-12-05 21:13:34,614:INFO:Uploading model into container now
2024-12-05 21:13:34,616:INFO:_master_model_container: 5
2024-12-05 21:13:34,616:INFO:_display_container: 2
2024-12-05 21:13:34,618:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-05 21:13:34,619:INFO:create_model() successfully completed......................................
2024-12-05 21:13:34,849:INFO:SubProcess create_model() end ==================================
2024-12-05 21:13:34,849:INFO:Creating metrics dataframe
2024-12-05 21:13:34,900:INFO:Initializing Ridge Classifier
2024-12-05 21:13:34,901:INFO:Total runtime is 0.27324071725209553 minutes
2024-12-05 21:13:34,916:INFO:SubProcess create_model() called ==================================
2024-12-05 21:13:34,917:INFO:Initializing create_model()
2024-12-05 21:13:34,917:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E126EFEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:13:34,918:INFO:Checking exceptions
2024-12-05 21:13:34,918:INFO:Importing libraries
2024-12-05 21:13:34,918:INFO:Copying training dataset
2024-12-05 21:13:35,055:INFO:Defining folds
2024-12-05 21:13:35,055:INFO:Declaring metric variables
2024-12-05 21:13:35,063:INFO:Importing untrained model
2024-12-05 21:13:35,070:INFO:Ridge Classifier Imported successfully
2024-12-05 21:13:35,087:INFO:Starting cross validation
2024-12-05 21:13:35,095:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:13:37,002:INFO:Calculating mean and std
2024-12-05 21:13:37,021:INFO:Creating metrics dataframe
2024-12-05 21:13:37,047:INFO:Uploading results into container
2024-12-05 21:13:37,050:INFO:Uploading model into container now
2024-12-05 21:13:37,051:INFO:_master_model_container: 6
2024-12-05 21:13:37,053:INFO:_display_container: 2
2024-12-05 21:13:37,054:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-12-05 21:13:37,054:INFO:create_model() successfully completed......................................
2024-12-05 21:13:37,168:INFO:SubProcess create_model() end ==================================
2024-12-05 21:13:37,168:INFO:Creating metrics dataframe
2024-12-05 21:13:37,179:INFO:Initializing Random Forest Classifier
2024-12-05 21:13:37,180:INFO:Total runtime is 0.31122502088546755 minutes
2024-12-05 21:13:37,183:INFO:SubProcess create_model() called ==================================
2024-12-05 21:13:37,183:INFO:Initializing create_model()
2024-12-05 21:13:37,183:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E126EFEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:13:37,183:INFO:Checking exceptions
2024-12-05 21:13:37,183:INFO:Importing libraries
2024-12-05 21:13:37,183:INFO:Copying training dataset
2024-12-05 21:13:37,213:INFO:Defining folds
2024-12-05 21:13:37,214:INFO:Declaring metric variables
2024-12-05 21:13:37,229:INFO:Importing untrained model
2024-12-05 21:13:37,234:INFO:Random Forest Classifier Imported successfully
2024-12-05 21:13:37,241:INFO:Starting cross validation
2024-12-05 21:13:37,245:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:13:48,551:INFO:Calculating mean and std
2024-12-05 21:13:48,557:INFO:Creating metrics dataframe
2024-12-05 21:13:48,575:INFO:Uploading results into container
2024-12-05 21:13:48,579:INFO:Uploading model into container now
2024-12-05 21:13:48,581:INFO:_master_model_container: 7
2024-12-05 21:13:48,581:INFO:_display_container: 2
2024-12-05 21:13:48,584:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 21:13:48,584:INFO:create_model() successfully completed......................................
2024-12-05 21:13:48,823:INFO:SubProcess create_model() end ==================================
2024-12-05 21:13:48,824:INFO:Creating metrics dataframe
2024-12-05 21:13:48,873:INFO:Initializing Quadratic Discriminant Analysis
2024-12-05 21:13:48,873:INFO:Total runtime is 0.5061086257298788 minutes
2024-12-05 21:13:48,887:INFO:SubProcess create_model() called ==================================
2024-12-05 21:13:48,889:INFO:Initializing create_model()
2024-12-05 21:13:48,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E126EFEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:13:48,890:INFO:Checking exceptions
2024-12-05 21:13:48,891:INFO:Importing libraries
2024-12-05 21:13:48,891:INFO:Copying training dataset
2024-12-05 21:13:49,015:INFO:Defining folds
2024-12-05 21:13:49,016:INFO:Declaring metric variables
2024-12-05 21:13:49,024:INFO:Importing untrained model
2024-12-05 21:13:49,055:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-05 21:13:49,064:INFO:Starting cross validation
2024-12-05 21:13:49,068:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:13:50,689:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 21:13:50,771:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 21:13:50,775:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 21:13:50,780:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 21:13:50,851:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 21:13:51,322:INFO:Calculating mean and std
2024-12-05 21:13:51,329:INFO:Creating metrics dataframe
2024-12-05 21:13:51,345:INFO:Uploading results into container
2024-12-05 21:13:51,348:INFO:Uploading model into container now
2024-12-05 21:13:51,350:INFO:_master_model_container: 8
2024-12-05 21:13:51,351:INFO:_display_container: 2
2024-12-05 21:13:51,355:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-05 21:13:51,356:INFO:create_model() successfully completed......................................
2024-12-05 21:13:51,499:INFO:SubProcess create_model() end ==================================
2024-12-05 21:13:51,499:INFO:Creating metrics dataframe
2024-12-05 21:13:51,510:INFO:Initializing Ada Boost Classifier
2024-12-05 21:13:51,510:INFO:Total runtime is 0.5500617901484172 minutes
2024-12-05 21:13:51,513:INFO:SubProcess create_model() called ==================================
2024-12-05 21:13:51,513:INFO:Initializing create_model()
2024-12-05 21:13:51,513:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E126EFEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:13:51,513:INFO:Checking exceptions
2024-12-05 21:13:51,513:INFO:Importing libraries
2024-12-05 21:13:51,513:INFO:Copying training dataset
2024-12-05 21:13:51,552:INFO:Defining folds
2024-12-05 21:13:51,552:INFO:Declaring metric variables
2024-12-05 21:13:51,556:INFO:Importing untrained model
2024-12-05 21:13:51,560:INFO:Ada Boost Classifier Imported successfully
2024-12-05 21:13:51,568:INFO:Starting cross validation
2024-12-05 21:13:51,573:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:13:53,048:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:13:53,069:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:13:53,079:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:13:53,081:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:13:53,088:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:14:00,456:INFO:Calculating mean and std
2024-12-05 21:14:00,460:INFO:Creating metrics dataframe
2024-12-05 21:14:00,475:INFO:Uploading results into container
2024-12-05 21:14:00,478:INFO:Uploading model into container now
2024-12-05 21:14:00,480:INFO:_master_model_container: 9
2024-12-05 21:14:00,480:INFO:_display_container: 2
2024-12-05 21:14:00,482:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-12-05 21:14:00,483:INFO:create_model() successfully completed......................................
2024-12-05 21:14:00,720:INFO:SubProcess create_model() end ==================================
2024-12-05 21:14:00,720:INFO:Creating metrics dataframe
2024-12-05 21:14:00,774:INFO:Initializing Gradient Boosting Classifier
2024-12-05 21:14:00,776:INFO:Total runtime is 0.7044901649157207 minutes
2024-12-05 21:14:00,799:INFO:SubProcess create_model() called ==================================
2024-12-05 21:14:00,800:INFO:Initializing create_model()
2024-12-05 21:14:00,800:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E126EFEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:14:00,800:INFO:Checking exceptions
2024-12-05 21:14:00,800:INFO:Importing libraries
2024-12-05 21:14:00,801:INFO:Copying training dataset
2024-12-05 21:14:00,952:INFO:Defining folds
2024-12-05 21:14:00,953:INFO:Declaring metric variables
2024-12-05 21:14:00,958:INFO:Importing untrained model
2024-12-05 21:14:00,964:INFO:Gradient Boosting Classifier Imported successfully
2024-12-05 21:14:00,974:INFO:Starting cross validation
2024-12-05 21:14:00,980:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:14:36,204:INFO:Calculating mean and std
2024-12-05 21:14:36,209:INFO:Creating metrics dataframe
2024-12-05 21:14:36,224:INFO:Uploading results into container
2024-12-05 21:14:36,227:INFO:Uploading model into container now
2024-12-05 21:14:36,229:INFO:_master_model_container: 10
2024-12-05 21:14:36,229:INFO:_display_container: 2
2024-12-05 21:14:36,230:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-05 21:14:36,231:INFO:create_model() successfully completed......................................
2024-12-05 21:14:36,481:INFO:SubProcess create_model() end ==================================
2024-12-05 21:14:36,482:INFO:Creating metrics dataframe
2024-12-05 21:14:36,522:INFO:Initializing Linear Discriminant Analysis
2024-12-05 21:14:36,522:INFO:Total runtime is 1.300272051493327 minutes
2024-12-05 21:14:36,533:INFO:SubProcess create_model() called ==================================
2024-12-05 21:14:36,534:INFO:Initializing create_model()
2024-12-05 21:14:36,535:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E126EFEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:14:36,536:INFO:Checking exceptions
2024-12-05 21:14:36,536:INFO:Importing libraries
2024-12-05 21:14:36,536:INFO:Copying training dataset
2024-12-05 21:14:36,675:INFO:Defining folds
2024-12-05 21:14:36,676:INFO:Declaring metric variables
2024-12-05 21:14:36,683:INFO:Importing untrained model
2024-12-05 21:14:36,689:INFO:Linear Discriminant Analysis Imported successfully
2024-12-05 21:14:36,695:INFO:Starting cross validation
2024-12-05 21:14:36,699:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:14:39,188:INFO:Calculating mean and std
2024-12-05 21:14:39,192:INFO:Creating metrics dataframe
2024-12-05 21:14:39,211:INFO:Uploading results into container
2024-12-05 21:14:39,215:INFO:Uploading model into container now
2024-12-05 21:14:39,218:INFO:_master_model_container: 11
2024-12-05 21:14:39,507:INFO:_display_container: 2
2024-12-05 21:14:39,509:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-05 21:14:39,509:INFO:create_model() successfully completed......................................
2024-12-05 21:14:39,782:INFO:SubProcess create_model() end ==================================
2024-12-05 21:14:39,782:INFO:Creating metrics dataframe
2024-12-05 21:14:39,860:INFO:Initializing Extra Trees Classifier
2024-12-05 21:14:39,860:INFO:Total runtime is 1.355905632177989 minutes
2024-12-05 21:14:39,876:INFO:SubProcess create_model() called ==================================
2024-12-05 21:14:39,878:INFO:Initializing create_model()
2024-12-05 21:14:39,879:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E126EFEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:14:39,880:INFO:Checking exceptions
2024-12-05 21:14:39,880:INFO:Importing libraries
2024-12-05 21:14:39,881:INFO:Copying training dataset
2024-12-05 21:14:39,961:INFO:Defining folds
2024-12-05 21:14:39,962:INFO:Declaring metric variables
2024-12-05 21:14:39,966:INFO:Importing untrained model
2024-12-05 21:14:39,972:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:14:39,981:INFO:Starting cross validation
2024-12-05 21:14:39,986:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:14:46,225:INFO:Calculating mean and std
2024-12-05 21:14:46,229:INFO:Creating metrics dataframe
2024-12-05 21:14:46,244:INFO:Uploading results into container
2024-12-05 21:14:46,248:INFO:Uploading model into container now
2024-12-05 21:14:46,250:INFO:_master_model_container: 12
2024-12-05 21:14:46,250:INFO:_display_container: 2
2024-12-05 21:14:46,252:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:14:46,252:INFO:create_model() successfully completed......................................
2024-12-05 21:14:46,467:INFO:SubProcess create_model() end ==================================
2024-12-05 21:14:46,467:INFO:Creating metrics dataframe
2024-12-05 21:14:46,480:INFO:Initializing Extreme Gradient Boosting
2024-12-05 21:14:46,480:INFO:Total runtime is 1.4662364204724632 minutes
2024-12-05 21:14:46,484:INFO:SubProcess create_model() called ==================================
2024-12-05 21:14:46,485:INFO:Initializing create_model()
2024-12-05 21:14:46,485:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E126EFEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:14:46,485:INFO:Checking exceptions
2024-12-05 21:14:46,485:INFO:Importing libraries
2024-12-05 21:14:46,485:INFO:Copying training dataset
2024-12-05 21:14:46,533:INFO:Defining folds
2024-12-05 21:14:46,534:INFO:Declaring metric variables
2024-12-05 21:14:46,540:INFO:Importing untrained model
2024-12-05 21:14:46,546:INFO:Extreme Gradient Boosting Imported successfully
2024-12-05 21:14:46,556:INFO:Starting cross validation
2024-12-05 21:14:46,560:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:14:51,456:INFO:Calculating mean and std
2024-12-05 21:14:51,460:INFO:Creating metrics dataframe
2024-12-05 21:14:51,475:INFO:Uploading results into container
2024-12-05 21:14:51,478:INFO:Uploading model into container now
2024-12-05 21:14:51,480:INFO:_master_model_container: 13
2024-12-05 21:14:51,480:INFO:_display_container: 2
2024-12-05 21:14:51,483:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-12-05 21:14:51,486:INFO:create_model() successfully completed......................................
2024-12-05 21:14:51,718:INFO:SubProcess create_model() end ==================================
2024-12-05 21:14:51,718:INFO:Creating metrics dataframe
2024-12-05 21:14:51,739:INFO:Initializing Light Gradient Boosting Machine
2024-12-05 21:14:51,739:INFO:Total runtime is 1.5538745363553368 minutes
2024-12-05 21:14:51,743:INFO:SubProcess create_model() called ==================================
2024-12-05 21:14:51,744:INFO:Initializing create_model()
2024-12-05 21:14:51,744:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E126EFEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:14:51,744:INFO:Checking exceptions
2024-12-05 21:14:51,745:INFO:Importing libraries
2024-12-05 21:14:51,745:INFO:Copying training dataset
2024-12-05 21:14:51,780:INFO:Defining folds
2024-12-05 21:14:51,781:INFO:Declaring metric variables
2024-12-05 21:14:51,787:INFO:Importing untrained model
2024-12-05 21:14:51,791:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-05 21:14:51,804:INFO:Starting cross validation
2024-12-05 21:14:51,808:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:14:56,715:INFO:Calculating mean and std
2024-12-05 21:14:56,717:INFO:Creating metrics dataframe
2024-12-05 21:14:56,722:INFO:Uploading results into container
2024-12-05 21:14:56,724:INFO:Uploading model into container now
2024-12-05 21:14:56,724:INFO:_master_model_container: 14
2024-12-05 21:14:56,724:INFO:_display_container: 2
2024-12-05 21:14:56,726:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-05 21:14:56,727:INFO:create_model() successfully completed......................................
2024-12-05 21:14:56,838:INFO:SubProcess create_model() end ==================================
2024-12-05 21:14:56,838:INFO:Creating metrics dataframe
2024-12-05 21:14:56,851:INFO:Initializing CatBoost Classifier
2024-12-05 21:14:56,851:INFO:Total runtime is 1.6390772263209028 minutes
2024-12-05 21:14:56,855:INFO:SubProcess create_model() called ==================================
2024-12-05 21:14:56,855:INFO:Initializing create_model()
2024-12-05 21:14:56,855:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E126EFEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:14:56,856:INFO:Checking exceptions
2024-12-05 21:14:56,856:INFO:Importing libraries
2024-12-05 21:14:56,856:INFO:Copying training dataset
2024-12-05 21:14:56,901:INFO:Defining folds
2024-12-05 21:14:56,901:INFO:Declaring metric variables
2024-12-05 21:14:56,906:INFO:Importing untrained model
2024-12-05 21:14:56,911:INFO:CatBoost Classifier Imported successfully
2024-12-05 21:14:56,921:INFO:Starting cross validation
2024-12-05 21:14:56,923:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:16:00,994:INFO:Calculating mean and std
2024-12-05 21:16:00,995:INFO:Creating metrics dataframe
2024-12-05 21:16:01,003:INFO:Uploading results into container
2024-12-05 21:16:01,004:INFO:Uploading model into container now
2024-12-05 21:16:01,004:INFO:_master_model_container: 15
2024-12-05 21:16:01,005:INFO:_display_container: 2
2024-12-05 21:16:01,005:INFO:<catboost.core.CatBoostClassifier object at 0x0000023E12282050>
2024-12-05 21:16:01,005:INFO:create_model() successfully completed......................................
2024-12-05 21:16:01,106:INFO:SubProcess create_model() end ==================================
2024-12-05 21:16:01,106:INFO:Creating metrics dataframe
2024-12-05 21:16:01,120:INFO:Initializing Dummy Classifier
2024-12-05 21:16:01,121:INFO:Total runtime is 2.710250210762024 minutes
2024-12-05 21:16:01,125:INFO:SubProcess create_model() called ==================================
2024-12-05 21:16:01,126:INFO:Initializing create_model()
2024-12-05 21:16:01,126:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E126EFEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:16:01,126:INFO:Checking exceptions
2024-12-05 21:16:01,126:INFO:Importing libraries
2024-12-05 21:16:01,127:INFO:Copying training dataset
2024-12-05 21:16:01,169:INFO:Defining folds
2024-12-05 21:16:01,169:INFO:Declaring metric variables
2024-12-05 21:16:01,175:INFO:Importing untrained model
2024-12-05 21:16:01,183:INFO:Dummy Classifier Imported successfully
2024-12-05 21:16:01,196:INFO:Starting cross validation
2024-12-05 21:16:01,203:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:16:03,124:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 21:16:03,150:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 21:16:03,160:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 21:16:03,177:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 21:16:03,184:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 21:16:03,320:INFO:Calculating mean and std
2024-12-05 21:16:03,321:INFO:Creating metrics dataframe
2024-12-05 21:16:03,325:INFO:Uploading results into container
2024-12-05 21:16:03,326:INFO:Uploading model into container now
2024-12-05 21:16:03,327:INFO:_master_model_container: 16
2024-12-05 21:16:03,327:INFO:_display_container: 2
2024-12-05 21:16:03,327:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-12-05 21:16:03,327:INFO:create_model() successfully completed......................................
2024-12-05 21:16:03,417:INFO:SubProcess create_model() end ==================================
2024-12-05 21:16:03,417:INFO:Creating metrics dataframe
2024-12-05 21:16:03,444:INFO:Initializing create_model()
2024-12-05 21:16:03,444:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:16:03,444:INFO:Checking exceptions
2024-12-05 21:16:03,446:INFO:Importing libraries
2024-12-05 21:16:03,446:INFO:Copying training dataset
2024-12-05 21:16:03,491:INFO:Defining folds
2024-12-05 21:16:03,491:INFO:Declaring metric variables
2024-12-05 21:16:03,491:INFO:Importing untrained model
2024-12-05 21:16:03,491:INFO:Declaring custom model
2024-12-05 21:16:03,492:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:16:03,495:INFO:Cross validation set to False
2024-12-05 21:16:03,495:INFO:Fitting Model
2024-12-05 21:16:05,289:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:16:05,290:INFO:create_model() successfully completed......................................
2024-12-05 21:16:05,447:INFO:_master_model_container: 16
2024-12-05 21:16:05,448:INFO:_display_container: 2
2024-12-05 21:16:05,448:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:16:05,448:INFO:compare_models() successfully completed......................................
2024-12-05 21:16:58,344:INFO:Initializing predict_model()
2024-12-05 21:16:58,346:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E1456B2E0>)
2024-12-05 21:16:58,346:INFO:Checking exceptions
2024-12-05 21:16:58,346:INFO:Preloading libraries
2024-12-05 21:16:58,348:INFO:Set up data.
2024-12-05 21:16:58,401:INFO:Set up index.
2024-12-05 21:16:58,943:INFO:Initializing finalize_model()
2024-12-05 21:16:58,943:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-05 21:16:58,944:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:16:58,968:INFO:Initializing create_model()
2024-12-05 21:16:58,968:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:16:58,968:INFO:Checking exceptions
2024-12-05 21:16:58,970:INFO:Importing libraries
2024-12-05 21:16:58,970:INFO:Copying training dataset
2024-12-05 21:16:58,972:INFO:Defining folds
2024-12-05 21:16:58,972:INFO:Declaring metric variables
2024-12-05 21:16:58,973:INFO:Importing untrained model
2024-12-05 21:16:58,973:INFO:Declaring custom model
2024-12-05 21:16:58,973:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:16:58,977:INFO:Cross validation set to False
2024-12-05 21:16:58,977:INFO:Fitting Model
2024-12-05 21:17:02,341:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 21:17:02,341:INFO:create_model() successfully completed......................................
2024-12-05 21:17:02,432:INFO:_master_model_container: 16
2024-12-05 21:17:02,432:INFO:_display_container: 3
2024-12-05 21:17:02,440:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 21:17:02,440:INFO:finalize_model() successfully completed......................................
2024-12-05 21:17:02,539:INFO:Initializing predict_model()
2024-12-05 21:17:02,539:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E12C237F0>)
2024-12-05 21:17:02,539:INFO:Checking exceptions
2024-12-05 21:17:02,539:INFO:Preloading libraries
2024-12-05 21:17:02,542:INFO:Set up data.
2024-12-05 21:17:02,586:INFO:Set up index.
2024-12-05 21:17:09,187:INFO:Initializing predict_model()
2024-12-05 21:17:09,187:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E18457280>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E1E2EC820>)
2024-12-05 21:17:09,187:INFO:Checking exceptions
2024-12-05 21:17:09,187:INFO:Preloading libraries
2024-12-05 21:17:09,193:INFO:Set up data.
2024-12-05 21:17:09,306:INFO:Set up index.
2024-12-05 21:17:52,480:INFO:PyCaret ClassificationExperiment
2024-12-05 21:17:52,480:INFO:Logging name: clf-default-name
2024-12-05 21:17:52,480:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-05 21:17:52,480:INFO:version 3.3.2
2024-12-05 21:17:52,480:INFO:Initializing setup()
2024-12-05 21:17:52,480:INFO:self.USI: 5033
2024-12-05 21:17:52,480:INFO:self._variable_keys: {'_available_plots', 'logging_param', 'is_multiclass', 'fold_generator', 'y', 'data', 'fold_groups_param', 'memory', 'X', 'target_param', 'pipeline', 'y_train', '_ml_usecase', 'seed', 'X_train', 'html_param', 'USI', 'X_test', 'exp_name_log', 'exp_id', 'fix_imbalance', 'fold_shuffle_param', 'gpu_param', 'gpu_n_jobs_param', 'y_test', 'log_plots_param', 'idx', 'n_jobs_param'}
2024-12-05 21:17:52,480:INFO:Checking environment
2024-12-05 21:17:52,480:INFO:python_version: 3.10.11
2024-12-05 21:17:52,480:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-12-05 21:17:52,480:INFO:machine: AMD64
2024-12-05 21:17:52,480:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-05 21:17:52,483:INFO:Memory: svmem(total=17041244160, available=4318437376, percent=74.7, used=12722806784, free=4318437376)
2024-12-05 21:17:52,483:INFO:Physical Core: 4
2024-12-05 21:17:52,483:INFO:Logical Core: 8
2024-12-05 21:17:52,483:INFO:Checking libraries
2024-12-05 21:17:52,483:INFO:System:
2024-12-05 21:17:52,483:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-12-05 21:17:52,483:INFO:executable: c:\Users\diego\AppData\Local\Programs\Python\Python310\python.exe
2024-12-05 21:17:52,483:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-05 21:17:52,483:INFO:PyCaret required dependencies:
2024-12-05 21:17:52,483:INFO:                 pip: 24.2
2024-12-05 21:17:52,483:INFO:          setuptools: 65.5.0
2024-12-05 21:17:52,483:INFO:             pycaret: 3.3.2
2024-12-05 21:17:52,483:INFO:             IPython: 8.26.0
2024-12-05 21:17:52,483:INFO:          ipywidgets: 8.1.5
2024-12-05 21:17:52,483:INFO:                tqdm: 4.66.5
2024-12-05 21:17:52,483:INFO:               numpy: 1.26.4
2024-12-05 21:17:52,483:INFO:              pandas: 1.5.3
2024-12-05 21:17:52,483:INFO:              jinja2: 3.1.4
2024-12-05 21:17:52,483:INFO:               scipy: 1.11.4
2024-12-05 21:17:52,483:INFO:              joblib: 1.3.2
2024-12-05 21:17:52,483:INFO:             sklearn: 1.4.2
2024-12-05 21:17:52,483:INFO:                pyod: 2.0.2
2024-12-05 21:17:52,483:INFO:            imblearn: 0.12.3
2024-12-05 21:17:52,484:INFO:   category_encoders: 2.6.4
2024-12-05 21:17:52,484:INFO:            lightgbm: 4.5.0
2024-12-05 21:17:52,484:INFO:               numba: 0.60.0
2024-12-05 21:17:52,484:INFO:            requests: 2.32.3
2024-12-05 21:17:52,484:INFO:          matplotlib: 3.7.5
2024-12-05 21:17:52,484:INFO:          scikitplot: 0.3.7
2024-12-05 21:17:52,484:INFO:         yellowbrick: 1.5
2024-12-05 21:17:52,484:INFO:              plotly: 5.24.1
2024-12-05 21:17:52,484:INFO:    plotly-resampler: Not installed
2024-12-05 21:17:52,484:INFO:             kaleido: 0.2.1
2024-12-05 21:17:52,484:INFO:           schemdraw: 0.15
2024-12-05 21:17:52,484:INFO:         statsmodels: 0.14.4
2024-12-05 21:17:52,484:INFO:              sktime: 0.26.0
2024-12-05 21:17:52,484:INFO:               tbats: 1.1.3
2024-12-05 21:17:52,484:INFO:            pmdarima: 2.0.4
2024-12-05 21:17:52,484:INFO:              psutil: 6.0.0
2024-12-05 21:17:52,484:INFO:          markupsafe: 2.1.5
2024-12-05 21:17:52,484:INFO:             pickle5: Not installed
2024-12-05 21:17:52,484:INFO:         cloudpickle: 3.1.0
2024-12-05 21:17:52,484:INFO:         deprecation: 2.1.0
2024-12-05 21:17:52,484:INFO:              xxhash: 3.5.0
2024-12-05 21:17:52,484:INFO:           wurlitzer: Not installed
2024-12-05 21:17:52,484:INFO:PyCaret optional dependencies:
2024-12-05 21:17:52,484:INFO:                shap: 0.44.0
2024-12-05 21:17:52,484:INFO:           interpret: 0.5.0
2024-12-05 21:17:52,484:INFO:                umap: 0.5.6
2024-12-05 21:17:52,484:INFO:     ydata_profiling: 4.11.0
2024-12-05 21:17:52,485:INFO:  explainerdashboard: 0.4.7
2024-12-05 21:17:52,485:INFO:             autoviz: Not installed
2024-12-05 21:17:52,485:INFO:           fairlearn: 0.7.0
2024-12-05 21:17:52,485:INFO:          deepchecks: Not installed
2024-12-05 21:17:52,485:INFO:             xgboost: 2.1.2
2024-12-05 21:17:52,485:INFO:            catboost: 1.2.7
2024-12-05 21:17:52,485:INFO:              kmodes: Not installed
2024-12-05 21:17:52,485:INFO:             mlxtend: Not installed
2024-12-05 21:17:52,485:INFO:       statsforecast: Not installed
2024-12-05 21:17:52,485:INFO:        tune_sklearn: Not installed
2024-12-05 21:17:52,485:INFO:                 ray: Not installed
2024-12-05 21:17:52,485:INFO:            hyperopt: Not installed
2024-12-05 21:17:52,485:INFO:              optuna: 4.0.0
2024-12-05 21:17:52,485:INFO:               skopt: Not installed
2024-12-05 21:17:52,485:INFO:              mlflow: 2.18.0
2024-12-05 21:17:52,485:INFO:              gradio: Not installed
2024-12-05 21:17:52,485:INFO:             fastapi: Not installed
2024-12-05 21:17:52,485:INFO:             uvicorn: Not installed
2024-12-05 21:17:52,485:INFO:              m2cgen: Not installed
2024-12-05 21:17:52,485:INFO:           evidently: Not installed
2024-12-05 21:17:52,485:INFO:               fugue: Not installed
2024-12-05 21:17:52,485:INFO:           streamlit: 1.39.0
2024-12-05 21:17:52,485:INFO:             prophet: Not installed
2024-12-05 21:17:52,485:INFO:None
2024-12-05 21:17:52,485:INFO:Set up data.
2024-12-05 21:17:52,551:INFO:Set up folding strategy.
2024-12-05 21:17:52,552:INFO:Set up train/test split.
2024-12-05 21:17:52,597:INFO:Set up index.
2024-12-05 21:17:52,598:INFO:Assigning column types.
2024-12-05 21:17:52,630:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-05 21:17:52,672:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 21:17:52,673:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:17:52,699:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:17:52,702:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:17:52,742:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 21:17:52,743:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:17:52,770:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:17:52,774:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:17:52,774:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-05 21:17:52,817:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:17:52,845:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:17:52,847:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:17:52,891:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:17:52,917:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:17:52,919:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:17:52,921:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-05 21:17:52,990:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:17:52,993:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:17:53,062:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:17:53,064:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:17:53,065:INFO:Preparing preprocessing pipeline...
2024-12-05 21:17:53,069:INFO:Set up simple imputation.
2024-12-05 21:17:53,080:INFO:Set up encoding of categorical features.
2024-12-05 21:17:53,080:INFO:Set up imbalanced handling.
2024-12-05 21:17:53,081:INFO:Set up feature normalization.
2024-12-05 21:17:53,081:INFO:Set up feature selection.
2024-12-05 21:17:53,151:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:17:53,153:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:17:54,467:INFO:Finished creating preprocessing pipeline.
2024-12-05 21:17:54,494:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\diego\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_et...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=15,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2024-12-05 21:17:54,494:INFO:Creating final display dataframe.
2024-12-05 21:17:55,466:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            target
2                   Target type            Binary
3           Original data shape       (31007, 78)
4        Transformed data shape       (31505, 16)
5   Transformed train set shape       (22202, 16)
6    Transformed test set shape        (9303, 16)
7              Numeric features                76
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17                    Normalize              True
18             Normalize method            zscore
19            Feature selection              True
20     Feature selection method           classic
21  Feature selection estimator          lightgbm
22  Number of features selected               0.2
23               Fold Generator   StratifiedKFold
24                  Fold Number                 5
25                     CPU Jobs                -1
26                      Use GPU             False
27               Log Experiment             False
28              Experiment Name  clf-default-name
29                          USI              5033
2024-12-05 21:17:55,569:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:17:55,573:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:17:55,687:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:17:55,690:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:17:55,692:INFO:setup() successfully completed in 3.26s...............
2024-12-05 21:17:55,735:INFO:Initializing compare_models()
2024-12-05 21:17:55,735:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-05 21:17:55,735:INFO:Checking exceptions
2024-12-05 21:17:55,752:INFO:Preparing display monitor
2024-12-05 21:17:55,776:INFO:Initializing Logistic Regression
2024-12-05 21:17:55,776:INFO:Total runtime is 0.0 minutes
2024-12-05 21:17:55,782:INFO:SubProcess create_model() called ==================================
2024-12-05 21:17:55,782:INFO:Initializing create_model()
2024-12-05 21:17:55,782:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144A6140>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:17:55,782:INFO:Checking exceptions
2024-12-05 21:17:55,783:INFO:Importing libraries
2024-12-05 21:17:55,783:INFO:Copying training dataset
2024-12-05 21:17:55,823:INFO:Defining folds
2024-12-05 21:17:55,823:INFO:Declaring metric variables
2024-12-05 21:17:55,826:INFO:Importing untrained model
2024-12-05 21:17:55,832:INFO:Logistic Regression Imported successfully
2024-12-05 21:17:55,843:INFO:Starting cross validation
2024-12-05 21:17:55,852:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:18:00,664:INFO:Calculating mean and std
2024-12-05 21:18:00,668:INFO:Creating metrics dataframe
2024-12-05 21:18:00,684:INFO:Uploading results into container
2024-12-05 21:18:00,687:INFO:Uploading model into container now
2024-12-05 21:18:00,689:INFO:_master_model_container: 1
2024-12-05 21:18:00,690:INFO:_display_container: 2
2024-12-05 21:18:00,694:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-05 21:18:00,694:INFO:create_model() successfully completed......................................
2024-12-05 21:18:00,929:INFO:SubProcess create_model() end ==================================
2024-12-05 21:18:00,929:INFO:Creating metrics dataframe
2024-12-05 21:18:00,967:INFO:Initializing K Neighbors Classifier
2024-12-05 21:18:00,967:INFO:Total runtime is 0.08651691277821859 minutes
2024-12-05 21:18:00,982:INFO:SubProcess create_model() called ==================================
2024-12-05 21:18:00,983:INFO:Initializing create_model()
2024-12-05 21:18:00,984:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144A6140>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:18:00,985:INFO:Checking exceptions
2024-12-05 21:18:00,985:INFO:Importing libraries
2024-12-05 21:18:00,986:INFO:Copying training dataset
2024-12-05 21:18:01,126:INFO:Defining folds
2024-12-05 21:18:01,126:INFO:Declaring metric variables
2024-12-05 21:18:01,142:INFO:Importing untrained model
2024-12-05 21:18:01,164:INFO:K Neighbors Classifier Imported successfully
2024-12-05 21:18:01,204:INFO:Starting cross validation
2024-12-05 21:18:01,240:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:18:08,192:INFO:Calculating mean and std
2024-12-05 21:18:08,197:INFO:Creating metrics dataframe
2024-12-05 21:18:08,214:INFO:Uploading results into container
2024-12-05 21:18:08,219:INFO:Uploading model into container now
2024-12-05 21:18:08,222:INFO:_master_model_container: 2
2024-12-05 21:18:08,223:INFO:_display_container: 2
2024-12-05 21:18:08,225:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-05 21:18:08,226:INFO:create_model() successfully completed......................................
2024-12-05 21:18:08,383:INFO:SubProcess create_model() end ==================================
2024-12-05 21:18:08,384:INFO:Creating metrics dataframe
2024-12-05 21:18:08,392:INFO:Initializing Naive Bayes
2024-12-05 21:18:08,393:INFO:Total runtime is 0.21028536558151245 minutes
2024-12-05 21:18:08,396:INFO:SubProcess create_model() called ==================================
2024-12-05 21:18:08,396:INFO:Initializing create_model()
2024-12-05 21:18:08,396:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144A6140>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:18:08,396:INFO:Checking exceptions
2024-12-05 21:18:08,396:INFO:Importing libraries
2024-12-05 21:18:08,396:INFO:Copying training dataset
2024-12-05 21:18:08,429:INFO:Defining folds
2024-12-05 21:18:08,430:INFO:Declaring metric variables
2024-12-05 21:18:08,434:INFO:Importing untrained model
2024-12-05 21:18:08,437:INFO:Naive Bayes Imported successfully
2024-12-05 21:18:08,444:INFO:Starting cross validation
2024-12-05 21:18:08,455:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:18:12,212:INFO:Calculating mean and std
2024-12-05 21:18:12,216:INFO:Creating metrics dataframe
2024-12-05 21:18:12,230:INFO:Uploading results into container
2024-12-05 21:18:12,234:INFO:Uploading model into container now
2024-12-05 21:18:12,237:INFO:_master_model_container: 3
2024-12-05 21:18:12,237:INFO:_display_container: 2
2024-12-05 21:18:12,238:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-05 21:18:12,240:INFO:create_model() successfully completed......................................
2024-12-05 21:18:12,458:INFO:SubProcess create_model() end ==================================
2024-12-05 21:18:12,458:INFO:Creating metrics dataframe
2024-12-05 21:18:12,499:INFO:Initializing Decision Tree Classifier
2024-12-05 21:18:12,499:INFO:Total runtime is 0.2787164568901062 minutes
2024-12-05 21:18:12,514:INFO:SubProcess create_model() called ==================================
2024-12-05 21:18:12,516:INFO:Initializing create_model()
2024-12-05 21:18:12,517:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144A6140>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:18:12,517:INFO:Checking exceptions
2024-12-05 21:18:12,518:INFO:Importing libraries
2024-12-05 21:18:12,518:INFO:Copying training dataset
2024-12-05 21:18:12,615:INFO:Defining folds
2024-12-05 21:18:12,615:INFO:Declaring metric variables
2024-12-05 21:18:12,620:INFO:Importing untrained model
2024-12-05 21:18:12,626:INFO:Decision Tree Classifier Imported successfully
2024-12-05 21:18:12,634:INFO:Starting cross validation
2024-12-05 21:18:12,644:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:18:16,888:INFO:Calculating mean and std
2024-12-05 21:18:16,893:INFO:Creating metrics dataframe
2024-12-05 21:18:16,910:INFO:Uploading results into container
2024-12-05 21:18:16,912:INFO:Uploading model into container now
2024-12-05 21:18:16,914:INFO:_master_model_container: 4
2024-12-05 21:18:16,914:INFO:_display_container: 2
2024-12-05 21:18:16,915:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-12-05 21:18:16,917:INFO:create_model() successfully completed......................................
2024-12-05 21:18:17,073:INFO:SubProcess create_model() end ==================================
2024-12-05 21:18:17,073:INFO:Creating metrics dataframe
2024-12-05 21:18:17,083:INFO:Initializing SVM - Linear Kernel
2024-12-05 21:18:17,083:INFO:Total runtime is 0.3551089882850647 minutes
2024-12-05 21:18:17,086:INFO:SubProcess create_model() called ==================================
2024-12-05 21:18:17,086:INFO:Initializing create_model()
2024-12-05 21:18:17,086:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144A6140>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:18:17,086:INFO:Checking exceptions
2024-12-05 21:18:17,086:INFO:Importing libraries
2024-12-05 21:18:17,086:INFO:Copying training dataset
2024-12-05 21:18:17,116:INFO:Defining folds
2024-12-05 21:18:17,116:INFO:Declaring metric variables
2024-12-05 21:18:17,121:INFO:Importing untrained model
2024-12-05 21:18:17,125:INFO:SVM - Linear Kernel Imported successfully
2024-12-05 21:18:17,132:INFO:Starting cross validation
2024-12-05 21:18:17,142:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:18:21,392:INFO:Calculating mean and std
2024-12-05 21:18:21,397:INFO:Creating metrics dataframe
2024-12-05 21:18:21,414:INFO:Uploading results into container
2024-12-05 21:18:21,417:INFO:Uploading model into container now
2024-12-05 21:18:21,419:INFO:_master_model_container: 5
2024-12-05 21:18:21,419:INFO:_display_container: 2
2024-12-05 21:18:21,422:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-05 21:18:21,423:INFO:create_model() successfully completed......................................
2024-12-05 21:18:21,613:INFO:SubProcess create_model() end ==================================
2024-12-05 21:18:21,613:INFO:Creating metrics dataframe
2024-12-05 21:18:21,644:INFO:Initializing Ridge Classifier
2024-12-05 21:18:21,644:INFO:Total runtime is 0.43113112449645996 minutes
2024-12-05 21:18:21,657:INFO:SubProcess create_model() called ==================================
2024-12-05 21:18:21,658:INFO:Initializing create_model()
2024-12-05 21:18:21,658:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144A6140>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:18:21,658:INFO:Checking exceptions
2024-12-05 21:18:21,659:INFO:Importing libraries
2024-12-05 21:18:21,659:INFO:Copying training dataset
2024-12-05 21:18:21,753:INFO:Defining folds
2024-12-05 21:18:21,754:INFO:Declaring metric variables
2024-12-05 21:18:21,763:INFO:Importing untrained model
2024-12-05 21:18:21,778:INFO:Ridge Classifier Imported successfully
2024-12-05 21:18:21,802:INFO:Starting cross validation
2024-12-05 21:18:21,847:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:18:25,796:INFO:Calculating mean and std
2024-12-05 21:18:25,800:INFO:Creating metrics dataframe
2024-12-05 21:18:25,814:INFO:Uploading results into container
2024-12-05 21:18:25,816:INFO:Uploading model into container now
2024-12-05 21:18:25,817:INFO:_master_model_container: 6
2024-12-05 21:18:25,817:INFO:_display_container: 2
2024-12-05 21:18:25,818:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-12-05 21:18:25,819:INFO:create_model() successfully completed......................................
2024-12-05 21:18:26,028:INFO:SubProcess create_model() end ==================================
2024-12-05 21:18:26,028:INFO:Creating metrics dataframe
2024-12-05 21:18:26,066:INFO:Initializing Random Forest Classifier
2024-12-05 21:18:26,066:INFO:Total runtime is 0.5048343420028687 minutes
2024-12-05 21:18:26,077:INFO:SubProcess create_model() called ==================================
2024-12-05 21:18:26,078:INFO:Initializing create_model()
2024-12-05 21:18:26,079:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144A6140>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:18:26,079:INFO:Checking exceptions
2024-12-05 21:18:26,079:INFO:Importing libraries
2024-12-05 21:18:26,079:INFO:Copying training dataset
2024-12-05 21:18:26,169:INFO:Defining folds
2024-12-05 21:18:26,169:INFO:Declaring metric variables
2024-12-05 21:18:26,180:INFO:Importing untrained model
2024-12-05 21:18:26,190:INFO:Random Forest Classifier Imported successfully
2024-12-05 21:18:26,217:INFO:Starting cross validation
2024-12-05 21:18:26,250:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:18:34,432:INFO:Calculating mean and std
2024-12-05 21:18:34,436:INFO:Creating metrics dataframe
2024-12-05 21:18:34,449:INFO:Uploading results into container
2024-12-05 21:18:34,452:INFO:Uploading model into container now
2024-12-05 21:18:34,454:INFO:_master_model_container: 7
2024-12-05 21:18:34,454:INFO:_display_container: 2
2024-12-05 21:18:34,456:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 21:18:34,456:INFO:create_model() successfully completed......................................
2024-12-05 21:18:34,668:INFO:SubProcess create_model() end ==================================
2024-12-05 21:18:34,670:INFO:Creating metrics dataframe
2024-12-05 21:18:34,718:INFO:Initializing Quadratic Discriminant Analysis
2024-12-05 21:18:34,719:INFO:Total runtime is 0.6490561564763387 minutes
2024-12-05 21:18:34,734:INFO:SubProcess create_model() called ==================================
2024-12-05 21:18:34,735:INFO:Initializing create_model()
2024-12-05 21:18:34,736:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144A6140>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:18:34,736:INFO:Checking exceptions
2024-12-05 21:18:34,736:INFO:Importing libraries
2024-12-05 21:18:34,736:INFO:Copying training dataset
2024-12-05 21:18:34,864:INFO:Defining folds
2024-12-05 21:18:34,865:INFO:Declaring metric variables
2024-12-05 21:18:34,882:INFO:Importing untrained model
2024-12-05 21:18:34,900:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-05 21:18:34,935:INFO:Starting cross validation
2024-12-05 21:18:35,039:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:18:39,112:INFO:Calculating mean and std
2024-12-05 21:18:39,116:INFO:Creating metrics dataframe
2024-12-05 21:18:39,132:INFO:Uploading results into container
2024-12-05 21:18:39,135:INFO:Uploading model into container now
2024-12-05 21:18:39,136:INFO:_master_model_container: 8
2024-12-05 21:18:39,137:INFO:_display_container: 2
2024-12-05 21:18:39,137:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-05 21:18:39,138:INFO:create_model() successfully completed......................................
2024-12-05 21:18:39,323:INFO:SubProcess create_model() end ==================================
2024-12-05 21:18:39,324:INFO:Creating metrics dataframe
2024-12-05 21:18:39,344:INFO:Initializing Ada Boost Classifier
2024-12-05 21:18:39,344:INFO:Total runtime is 0.7261256655057272 minutes
2024-12-05 21:18:39,350:INFO:SubProcess create_model() called ==================================
2024-12-05 21:18:39,350:INFO:Initializing create_model()
2024-12-05 21:18:39,351:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144A6140>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:18:39,351:INFO:Checking exceptions
2024-12-05 21:18:39,351:INFO:Importing libraries
2024-12-05 21:18:39,351:INFO:Copying training dataset
2024-12-05 21:18:39,432:INFO:Defining folds
2024-12-05 21:18:39,433:INFO:Declaring metric variables
2024-12-05 21:18:39,438:INFO:Importing untrained model
2024-12-05 21:18:39,443:INFO:Ada Boost Classifier Imported successfully
2024-12-05 21:18:39,455:INFO:Starting cross validation
2024-12-05 21:18:39,467:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:18:43,040:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:18:43,197:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:18:43,266:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:18:43,300:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:18:43,319:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:18:45,542:INFO:Calculating mean and std
2024-12-05 21:18:45,546:INFO:Creating metrics dataframe
2024-12-05 21:18:45,558:INFO:Uploading results into container
2024-12-05 21:18:45,562:INFO:Uploading model into container now
2024-12-05 21:18:45,565:INFO:_master_model_container: 9
2024-12-05 21:18:45,566:INFO:_display_container: 2
2024-12-05 21:18:45,568:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-12-05 21:18:45,569:INFO:create_model() successfully completed......................................
2024-12-05 21:18:45,735:INFO:SubProcess create_model() end ==================================
2024-12-05 21:18:45,736:INFO:Creating metrics dataframe
2024-12-05 21:18:45,749:INFO:Initializing Gradient Boosting Classifier
2024-12-05 21:18:45,749:INFO:Total runtime is 0.8328828215599061 minutes
2024-12-05 21:18:45,752:INFO:SubProcess create_model() called ==================================
2024-12-05 21:18:45,753:INFO:Initializing create_model()
2024-12-05 21:18:45,753:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144A6140>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:18:45,753:INFO:Checking exceptions
2024-12-05 21:18:45,753:INFO:Importing libraries
2024-12-05 21:18:45,753:INFO:Copying training dataset
2024-12-05 21:18:45,788:INFO:Defining folds
2024-12-05 21:18:45,789:INFO:Declaring metric variables
2024-12-05 21:18:45,797:INFO:Importing untrained model
2024-12-05 21:18:45,802:INFO:Gradient Boosting Classifier Imported successfully
2024-12-05 21:18:45,810:INFO:Starting cross validation
2024-12-05 21:18:45,820:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:18:58,760:INFO:Calculating mean and std
2024-12-05 21:18:58,762:INFO:Creating metrics dataframe
2024-12-05 21:18:58,767:INFO:Uploading results into container
2024-12-05 21:18:58,768:INFO:Uploading model into container now
2024-12-05 21:18:58,769:INFO:_master_model_container: 10
2024-12-05 21:18:58,769:INFO:_display_container: 2
2024-12-05 21:18:58,769:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-05 21:18:58,769:INFO:create_model() successfully completed......................................
2024-12-05 21:18:58,857:INFO:SubProcess create_model() end ==================================
2024-12-05 21:18:58,857:INFO:Creating metrics dataframe
2024-12-05 21:18:58,868:INFO:Initializing Linear Discriminant Analysis
2024-12-05 21:18:58,868:INFO:Total runtime is 1.0515266140302024 minutes
2024-12-05 21:18:58,870:INFO:SubProcess create_model() called ==================================
2024-12-05 21:18:58,871:INFO:Initializing create_model()
2024-12-05 21:18:58,871:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144A6140>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:18:58,871:INFO:Checking exceptions
2024-12-05 21:18:58,871:INFO:Importing libraries
2024-12-05 21:18:58,871:INFO:Copying training dataset
2024-12-05 21:18:58,900:INFO:Defining folds
2024-12-05 21:18:58,900:INFO:Declaring metric variables
2024-12-05 21:18:58,904:INFO:Importing untrained model
2024-12-05 21:18:58,908:INFO:Linear Discriminant Analysis Imported successfully
2024-12-05 21:18:58,918:INFO:Starting cross validation
2024-12-05 21:18:58,929:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:19:03,185:INFO:Calculating mean and std
2024-12-05 21:19:03,189:INFO:Creating metrics dataframe
2024-12-05 21:19:03,204:INFO:Uploading results into container
2024-12-05 21:19:03,207:INFO:Uploading model into container now
2024-12-05 21:19:03,209:INFO:_master_model_container: 11
2024-12-05 21:19:03,209:INFO:_display_container: 2
2024-12-05 21:19:03,210:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-05 21:19:03,210:INFO:create_model() successfully completed......................................
2024-12-05 21:19:03,417:INFO:SubProcess create_model() end ==================================
2024-12-05 21:19:03,417:INFO:Creating metrics dataframe
2024-12-05 21:19:03,474:INFO:Initializing Extra Trees Classifier
2024-12-05 21:19:03,474:INFO:Total runtime is 1.1282964150110883 minutes
2024-12-05 21:19:03,487:INFO:SubProcess create_model() called ==================================
2024-12-05 21:19:03,490:INFO:Initializing create_model()
2024-12-05 21:19:03,490:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144A6140>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:19:03,491:INFO:Checking exceptions
2024-12-05 21:19:03,491:INFO:Importing libraries
2024-12-05 21:19:03,492:INFO:Copying training dataset
2024-12-05 21:19:03,619:INFO:Defining folds
2024-12-05 21:19:03,619:INFO:Declaring metric variables
2024-12-05 21:19:03,638:INFO:Importing untrained model
2024-12-05 21:19:03,655:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:19:03,685:INFO:Starting cross validation
2024-12-05 21:19:03,727:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:19:09,522:INFO:Calculating mean and std
2024-12-05 21:19:09,526:INFO:Creating metrics dataframe
2024-12-05 21:19:09,540:INFO:Uploading results into container
2024-12-05 21:19:09,543:INFO:Uploading model into container now
2024-12-05 21:19:09,545:INFO:_master_model_container: 12
2024-12-05 21:19:09,545:INFO:_display_container: 2
2024-12-05 21:19:09,549:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:19:09,549:INFO:create_model() successfully completed......................................
2024-12-05 21:19:09,755:INFO:SubProcess create_model() end ==================================
2024-12-05 21:19:09,756:INFO:Creating metrics dataframe
2024-12-05 21:19:09,807:INFO:Initializing Extreme Gradient Boosting
2024-12-05 21:19:09,807:INFO:Total runtime is 1.2338470737139386 minutes
2024-12-05 21:19:09,822:INFO:SubProcess create_model() called ==================================
2024-12-05 21:19:09,824:INFO:Initializing create_model()
2024-12-05 21:19:09,825:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144A6140>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:19:09,825:INFO:Checking exceptions
2024-12-05 21:19:09,826:INFO:Importing libraries
2024-12-05 21:19:09,826:INFO:Copying training dataset
2024-12-05 21:19:09,958:INFO:Defining folds
2024-12-05 21:19:09,959:INFO:Declaring metric variables
2024-12-05 21:19:09,977:INFO:Importing untrained model
2024-12-05 21:19:09,997:INFO:Extreme Gradient Boosting Imported successfully
2024-12-05 21:19:10,029:INFO:Starting cross validation
2024-12-05 21:19:10,062:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:19:15,149:INFO:Calculating mean and std
2024-12-05 21:19:15,154:INFO:Creating metrics dataframe
2024-12-05 21:19:15,170:INFO:Uploading results into container
2024-12-05 21:19:15,173:INFO:Uploading model into container now
2024-12-05 21:19:15,175:INFO:_master_model_container: 13
2024-12-05 21:19:15,175:INFO:_display_container: 2
2024-12-05 21:19:15,178:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-12-05 21:19:15,178:INFO:create_model() successfully completed......................................
2024-12-05 21:19:15,382:INFO:SubProcess create_model() end ==================================
2024-12-05 21:19:15,383:INFO:Creating metrics dataframe
2024-12-05 21:19:15,419:INFO:Initializing Light Gradient Boosting Machine
2024-12-05 21:19:15,420:INFO:Total runtime is 1.3274077177047732 minutes
2024-12-05 21:19:15,427:INFO:SubProcess create_model() called ==================================
2024-12-05 21:19:15,428:INFO:Initializing create_model()
2024-12-05 21:19:15,428:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144A6140>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:19:15,428:INFO:Checking exceptions
2024-12-05 21:19:15,428:INFO:Importing libraries
2024-12-05 21:19:15,428:INFO:Copying training dataset
2024-12-05 21:19:15,473:INFO:Defining folds
2024-12-05 21:19:15,474:INFO:Declaring metric variables
2024-12-05 21:19:15,477:INFO:Importing untrained model
2024-12-05 21:19:15,485:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-05 21:19:15,492:INFO:Starting cross validation
2024-12-05 21:19:15,505:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:19:20,663:INFO:Calculating mean and std
2024-12-05 21:19:20,663:INFO:Creating metrics dataframe
2024-12-05 21:19:20,663:INFO:Uploading results into container
2024-12-05 21:19:20,672:INFO:Uploading model into container now
2024-12-05 21:19:20,672:INFO:_master_model_container: 14
2024-12-05 21:19:20,672:INFO:_display_container: 2
2024-12-05 21:19:20,673:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-05 21:19:20,673:INFO:create_model() successfully completed......................................
2024-12-05 21:19:20,762:INFO:SubProcess create_model() end ==================================
2024-12-05 21:19:20,762:INFO:Creating metrics dataframe
2024-12-05 21:19:20,776:INFO:Initializing CatBoost Classifier
2024-12-05 21:19:20,777:INFO:Total runtime is 1.4166608770688378 minutes
2024-12-05 21:19:20,780:INFO:SubProcess create_model() called ==================================
2024-12-05 21:19:20,780:INFO:Initializing create_model()
2024-12-05 21:19:20,781:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144A6140>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:19:20,781:INFO:Checking exceptions
2024-12-05 21:19:20,781:INFO:Importing libraries
2024-12-05 21:19:20,781:INFO:Copying training dataset
2024-12-05 21:19:20,812:INFO:Defining folds
2024-12-05 21:19:20,812:INFO:Declaring metric variables
2024-12-05 21:19:20,816:INFO:Importing untrained model
2024-12-05 21:19:20,820:INFO:CatBoost Classifier Imported successfully
2024-12-05 21:19:20,860:INFO:Starting cross validation
2024-12-05 21:19:20,879:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:19:51,713:INFO:Calculating mean and std
2024-12-05 21:19:51,715:INFO:Creating metrics dataframe
2024-12-05 21:19:51,721:INFO:Uploading results into container
2024-12-05 21:19:51,721:INFO:Uploading model into container now
2024-12-05 21:19:51,721:INFO:_master_model_container: 15
2024-12-05 21:19:51,721:INFO:_display_container: 2
2024-12-05 21:19:51,721:INFO:<catboost.core.CatBoostClassifier object at 0x0000023E13CC2E90>
2024-12-05 21:19:51,727:INFO:create_model() successfully completed......................................
2024-12-05 21:19:51,939:INFO:SubProcess create_model() end ==================================
2024-12-05 21:19:51,939:INFO:Creating metrics dataframe
2024-12-05 21:19:51,953:INFO:Initializing Dummy Classifier
2024-12-05 21:19:51,953:INFO:Total runtime is 1.9362883408864342 minutes
2024-12-05 21:19:51,953:INFO:SubProcess create_model() called ==================================
2024-12-05 21:19:51,953:INFO:Initializing create_model()
2024-12-05 21:19:51,953:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144A6140>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:19:51,953:INFO:Checking exceptions
2024-12-05 21:19:51,953:INFO:Importing libraries
2024-12-05 21:19:51,962:INFO:Copying training dataset
2024-12-05 21:19:51,998:INFO:Defining folds
2024-12-05 21:19:51,998:INFO:Declaring metric variables
2024-12-05 21:19:52,008:INFO:Importing untrained model
2024-12-05 21:19:52,032:INFO:Dummy Classifier Imported successfully
2024-12-05 21:19:52,060:INFO:Starting cross validation
2024-12-05 21:19:52,078:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:19:57,599:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 21:19:57,613:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 21:19:57,687:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 21:19:57,881:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 21:19:57,888:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 21:19:58,041:INFO:Calculating mean and std
2024-12-05 21:19:58,042:INFO:Creating metrics dataframe
2024-12-05 21:19:58,050:INFO:Uploading results into container
2024-12-05 21:19:58,051:INFO:Uploading model into container now
2024-12-05 21:19:58,052:INFO:_master_model_container: 16
2024-12-05 21:19:58,052:INFO:_display_container: 2
2024-12-05 21:19:58,052:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-12-05 21:19:58,052:INFO:create_model() successfully completed......................................
2024-12-05 21:19:58,165:INFO:SubProcess create_model() end ==================================
2024-12-05 21:19:58,165:INFO:Creating metrics dataframe
2024-12-05 21:19:58,216:INFO:Initializing create_model()
2024-12-05 21:19:58,216:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:19:58,216:INFO:Checking exceptions
2024-12-05 21:19:58,219:INFO:Importing libraries
2024-12-05 21:19:58,220:INFO:Copying training dataset
2024-12-05 21:19:58,267:INFO:Defining folds
2024-12-05 21:19:58,267:INFO:Declaring metric variables
2024-12-05 21:19:58,267:INFO:Importing untrained model
2024-12-05 21:19:58,268:INFO:Declaring custom model
2024-12-05 21:19:58,268:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:19:58,282:INFO:Cross validation set to False
2024-12-05 21:19:58,282:INFO:Fitting Model
2024-12-05 21:19:59,558:INFO:[LightGBM] [Info] Number of positive: 11101, number of negative: 11101
2024-12-05 21:19:59,569:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.009132 seconds.
2024-12-05 21:19:59,570:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-12-05 21:19:59,570:INFO:[LightGBM] [Info] Total Bins 17701
2024-12-05 21:19:59,572:INFO:[LightGBM] [Info] Number of data points in the train set: 22202, number of used features: 77
2024-12-05 21:19:59,573:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2024-12-05 21:20:01,035:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:20:01,035:INFO:create_model() successfully completed......................................
2024-12-05 21:20:01,245:INFO:_master_model_container: 16
2024-12-05 21:20:01,245:INFO:_display_container: 2
2024-12-05 21:20:01,248:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:20:01,249:INFO:compare_models() successfully completed......................................
2024-12-05 21:32:55,001:INFO:Initializing predict_model()
2024-12-05 21:32:55,002:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E14B01AB0>)
2024-12-05 21:32:55,002:INFO:Checking exceptions
2024-12-05 21:32:55,002:INFO:Preloading libraries
2024-12-05 21:32:55,005:INFO:Set up data.
2024-12-05 21:32:55,079:INFO:Set up index.
2024-12-05 21:32:55,729:INFO:Initializing finalize_model()
2024-12-05 21:32:55,730:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-05 21:32:55,730:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:32:55,753:INFO:Initializing create_model()
2024-12-05 21:32:55,753:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:32:55,753:INFO:Checking exceptions
2024-12-05 21:32:55,757:INFO:Importing libraries
2024-12-05 21:32:55,757:INFO:Copying training dataset
2024-12-05 21:32:55,758:INFO:Defining folds
2024-12-05 21:32:55,758:INFO:Declaring metric variables
2024-12-05 21:32:55,759:INFO:Importing untrained model
2024-12-05 21:32:55,759:INFO:Declaring custom model
2024-12-05 21:32:55,759:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:32:55,770:INFO:Cross validation set to False
2024-12-05 21:32:55,770:INFO:Fitting Model
2024-12-05 21:32:57,292:INFO:[LightGBM] [Info] Number of positive: 15859, number of negative: 15859
2024-12-05 21:32:57,305:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.011709 seconds.
2024-12-05 21:32:57,305:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-12-05 21:32:57,305:INFO:[LightGBM] [Info] Total Bins 17762
2024-12-05 21:32:57,306:INFO:[LightGBM] [Info] Number of data points in the train set: 31718, number of used features: 77
2024-12-05 21:32:57,309:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2024-12-05 21:32:58,818:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 21:32:58,818:INFO:create_model() successfully completed......................................
2024-12-05 21:32:58,898:INFO:_master_model_container: 16
2024-12-05 21:32:58,898:INFO:_display_container: 3
2024-12-05 21:32:58,912:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 21:32:58,912:INFO:finalize_model() successfully completed......................................
2024-12-05 21:32:59,020:INFO:Initializing predict_model()
2024-12-05 21:32:59,020:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E6A865000>)
2024-12-05 21:32:59,020:INFO:Checking exceptions
2024-12-05 21:32:59,020:INFO:Preloading libraries
2024-12-05 21:32:59,022:INFO:Set up data.
2024-12-05 21:32:59,068:INFO:Set up index.
2024-12-05 21:33:04,907:INFO:Initializing predict_model()
2024-12-05 21:33:04,907:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E143E6C80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E14B003A0>)
2024-12-05 21:33:04,907:INFO:Checking exceptions
2024-12-05 21:33:04,908:INFO:Preloading libraries
2024-12-05 21:33:04,911:INFO:Set up data.
2024-12-05 21:33:04,984:INFO:Set up index.
2024-12-05 21:45:15,237:INFO:PyCaret ClassificationExperiment
2024-12-05 21:45:15,237:INFO:Logging name: clf-default-name
2024-12-05 21:45:15,237:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-05 21:45:15,237:INFO:version 3.3.2
2024-12-05 21:45:15,237:INFO:Initializing setup()
2024-12-05 21:45:15,238:INFO:self.USI: f0d7
2024-12-05 21:45:15,238:INFO:self._variable_keys: {'_available_plots', 'logging_param', 'is_multiclass', 'fold_generator', 'y', 'data', 'fold_groups_param', 'memory', 'X', 'target_param', 'pipeline', 'y_train', '_ml_usecase', 'seed', 'X_train', 'html_param', 'USI', 'X_test', 'exp_name_log', 'exp_id', 'fix_imbalance', 'fold_shuffle_param', 'gpu_param', 'gpu_n_jobs_param', 'y_test', 'log_plots_param', 'idx', 'n_jobs_param'}
2024-12-05 21:45:15,238:INFO:Checking environment
2024-12-05 21:45:15,238:INFO:python_version: 3.10.11
2024-12-05 21:45:15,238:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-12-05 21:45:15,238:INFO:machine: AMD64
2024-12-05 21:45:15,238:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-05 21:45:15,242:INFO:Memory: svmem(total=17041244160, available=6950031360, percent=59.2, used=10091212800, free=6950031360)
2024-12-05 21:45:15,242:INFO:Physical Core: 4
2024-12-05 21:45:15,242:INFO:Logical Core: 8
2024-12-05 21:45:15,242:INFO:Checking libraries
2024-12-05 21:45:15,242:INFO:System:
2024-12-05 21:45:15,242:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-12-05 21:45:15,242:INFO:executable: c:\Users\diego\AppData\Local\Programs\Python\Python310\python.exe
2024-12-05 21:45:15,242:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-05 21:45:15,243:INFO:PyCaret required dependencies:
2024-12-05 21:45:15,243:INFO:                 pip: 24.2
2024-12-05 21:45:15,243:INFO:          setuptools: 65.5.0
2024-12-05 21:45:15,243:INFO:             pycaret: 3.3.2
2024-12-05 21:45:15,243:INFO:             IPython: 8.26.0
2024-12-05 21:45:15,243:INFO:          ipywidgets: 8.1.5
2024-12-05 21:45:15,243:INFO:                tqdm: 4.66.5
2024-12-05 21:45:15,243:INFO:               numpy: 1.26.4
2024-12-05 21:45:15,243:INFO:              pandas: 1.5.3
2024-12-05 21:45:15,243:INFO:              jinja2: 3.1.4
2024-12-05 21:45:15,243:INFO:               scipy: 1.11.4
2024-12-05 21:45:15,243:INFO:              joblib: 1.3.2
2024-12-05 21:45:15,243:INFO:             sklearn: 1.4.2
2024-12-05 21:45:15,243:INFO:                pyod: 2.0.2
2024-12-05 21:45:15,243:INFO:            imblearn: 0.12.3
2024-12-05 21:45:15,244:INFO:   category_encoders: 2.6.4
2024-12-05 21:45:15,244:INFO:            lightgbm: 4.5.0
2024-12-05 21:45:15,244:INFO:               numba: 0.60.0
2024-12-05 21:45:15,268:INFO:            requests: 2.32.3
2024-12-05 21:45:15,268:INFO:          matplotlib: 3.7.5
2024-12-05 21:45:15,269:INFO:          scikitplot: 0.3.7
2024-12-05 21:45:15,269:INFO:         yellowbrick: 1.5
2024-12-05 21:45:15,269:INFO:              plotly: 5.24.1
2024-12-05 21:45:15,269:INFO:    plotly-resampler: Not installed
2024-12-05 21:45:15,269:INFO:             kaleido: 0.2.1
2024-12-05 21:45:15,269:INFO:           schemdraw: 0.15
2024-12-05 21:45:15,269:INFO:         statsmodels: 0.14.4
2024-12-05 21:45:15,269:INFO:              sktime: 0.26.0
2024-12-05 21:45:15,269:INFO:               tbats: 1.1.3
2024-12-05 21:45:15,269:INFO:            pmdarima: 2.0.4
2024-12-05 21:45:15,269:INFO:              psutil: 6.0.0
2024-12-05 21:45:15,269:INFO:          markupsafe: 2.1.5
2024-12-05 21:45:15,269:INFO:             pickle5: Not installed
2024-12-05 21:45:15,271:INFO:         cloudpickle: 3.1.0
2024-12-05 21:45:15,272:INFO:         deprecation: 2.1.0
2024-12-05 21:45:15,272:INFO:              xxhash: 3.5.0
2024-12-05 21:45:15,272:INFO:           wurlitzer: Not installed
2024-12-05 21:45:15,272:INFO:PyCaret optional dependencies:
2024-12-05 21:45:15,273:INFO:                shap: 0.44.0
2024-12-05 21:45:15,273:INFO:           interpret: 0.5.0
2024-12-05 21:45:15,273:INFO:                umap: 0.5.6
2024-12-05 21:45:15,273:INFO:     ydata_profiling: 4.11.0
2024-12-05 21:45:15,273:INFO:  explainerdashboard: 0.4.7
2024-12-05 21:45:15,273:INFO:             autoviz: Not installed
2024-12-05 21:45:15,273:INFO:           fairlearn: 0.7.0
2024-12-05 21:45:15,273:INFO:          deepchecks: Not installed
2024-12-05 21:45:15,273:INFO:             xgboost: 2.1.2
2024-12-05 21:45:15,273:INFO:            catboost: 1.2.7
2024-12-05 21:45:15,273:INFO:              kmodes: Not installed
2024-12-05 21:45:15,273:INFO:             mlxtend: Not installed
2024-12-05 21:45:15,273:INFO:       statsforecast: Not installed
2024-12-05 21:45:15,273:INFO:        tune_sklearn: Not installed
2024-12-05 21:45:15,273:INFO:                 ray: Not installed
2024-12-05 21:45:15,273:INFO:            hyperopt: Not installed
2024-12-05 21:45:15,273:INFO:              optuna: 4.0.0
2024-12-05 21:45:15,274:INFO:               skopt: Not installed
2024-12-05 21:45:15,274:INFO:              mlflow: 2.18.0
2024-12-05 21:45:15,274:INFO:              gradio: Not installed
2024-12-05 21:45:15,274:INFO:             fastapi: Not installed
2024-12-05 21:45:15,274:INFO:             uvicorn: Not installed
2024-12-05 21:45:15,274:INFO:              m2cgen: Not installed
2024-12-05 21:45:15,274:INFO:           evidently: Not installed
2024-12-05 21:45:15,274:INFO:               fugue: Not installed
2024-12-05 21:45:15,274:INFO:           streamlit: 1.39.0
2024-12-05 21:45:15,274:INFO:             prophet: Not installed
2024-12-05 21:45:15,274:INFO:None
2024-12-05 21:45:15,275:INFO:Set up data.
2024-12-05 21:45:15,342:INFO:Set up folding strategy.
2024-12-05 21:45:15,342:INFO:Set up train/test split.
2024-12-05 21:45:15,377:INFO:Set up index.
2024-12-05 21:45:15,378:INFO:Assigning column types.
2024-12-05 21:45:15,400:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-05 21:45:15,451:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 21:45:15,451:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:45:15,478:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:45:15,481:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:45:15,525:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 21:45:15,526:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:45:15,552:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:45:15,555:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:45:15,555:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-05 21:45:15,598:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:45:15,627:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:45:15,629:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:45:15,679:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:45:15,710:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:45:15,712:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:45:15,713:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-05 21:45:15,781:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:45:15,784:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:45:15,869:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:45:15,872:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:45:15,874:INFO:Preparing preprocessing pipeline...
2024-12-05 21:45:15,877:INFO:Set up simple imputation.
2024-12-05 21:45:15,887:INFO:Set up encoding of categorical features.
2024-12-05 21:45:16,060:INFO:Finished creating preprocessing pipeline.
2024-12-05 21:45:16,065:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\diego\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_ti...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['wallet_address'],
                                    transformer=TargetEncoder(cols=['wallet_address'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-12-05 21:45:16,065:INFO:Creating final display dataframe.
2024-12-05 21:45:16,592:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            target
2                   Target type            Binary
3           Original data shape       (31007, 47)
4        Transformed data shape       (31007, 47)
5   Transformed train set shape       (21704, 47)
6    Transformed test set shape        (9303, 47)
7              Numeric features                45
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   StratifiedKFold
16                  Fold Number                 5
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  clf-default-name
21                          USI              f0d7
2024-12-05 21:45:16,665:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:45:16,668:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:45:16,735:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:45:16,738:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:45:16,738:INFO:setup() successfully completed in 1.56s...............
2024-12-05 21:45:16,781:INFO:Initializing compare_models()
2024-12-05 21:45:16,781:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-05 21:45:16,781:INFO:Checking exceptions
2024-12-05 21:45:16,792:INFO:Preparing display monitor
2024-12-05 21:45:16,811:INFO:Initializing Logistic Regression
2024-12-05 21:45:16,812:INFO:Total runtime is 1.6677379608154298e-05 minutes
2024-12-05 21:45:16,815:INFO:SubProcess create_model() called ==================================
2024-12-05 21:45:16,815:INFO:Initializing create_model()
2024-12-05 21:45:16,816:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E149A9D80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:45:16,816:INFO:Checking exceptions
2024-12-05 21:45:16,816:INFO:Importing libraries
2024-12-05 21:45:16,816:INFO:Copying training dataset
2024-12-05 21:45:16,834:INFO:Defining folds
2024-12-05 21:45:16,835:INFO:Declaring metric variables
2024-12-05 21:45:16,838:INFO:Importing untrained model
2024-12-05 21:45:16,841:INFO:Logistic Regression Imported successfully
2024-12-05 21:45:16,847:INFO:Starting cross validation
2024-12-05 21:45:16,848:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:45:26,224:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-12-05 21:45:26,297:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-12-05 21:45:26,299:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-12-05 21:45:26,380:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-12-05 21:45:26,483:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-12-05 21:45:26,680:INFO:Calculating mean and std
2024-12-05 21:45:26,681:INFO:Creating metrics dataframe
2024-12-05 21:45:26,685:INFO:Uploading results into container
2024-12-05 21:45:26,686:INFO:Uploading model into container now
2024-12-05 21:45:26,687:INFO:_master_model_container: 1
2024-12-05 21:45:26,687:INFO:_display_container: 2
2024-12-05 21:45:26,687:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-05 21:45:26,687:INFO:create_model() successfully completed......................................
2024-12-05 21:45:26,801:INFO:SubProcess create_model() end ==================================
2024-12-05 21:45:26,801:INFO:Creating metrics dataframe
2024-12-05 21:45:26,810:INFO:Initializing K Neighbors Classifier
2024-12-05 21:45:26,810:INFO:Total runtime is 0.16664776802062986 minutes
2024-12-05 21:45:26,815:INFO:SubProcess create_model() called ==================================
2024-12-05 21:45:26,815:INFO:Initializing create_model()
2024-12-05 21:45:26,815:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E149A9D80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:45:26,815:INFO:Checking exceptions
2024-12-05 21:45:26,815:INFO:Importing libraries
2024-12-05 21:45:26,815:INFO:Copying training dataset
2024-12-05 21:45:26,837:INFO:Defining folds
2024-12-05 21:45:26,837:INFO:Declaring metric variables
2024-12-05 21:45:26,840:INFO:Importing untrained model
2024-12-05 21:45:26,845:INFO:K Neighbors Classifier Imported successfully
2024-12-05 21:45:26,852:INFO:Starting cross validation
2024-12-05 21:45:26,853:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:45:32,158:INFO:Calculating mean and std
2024-12-05 21:45:32,160:INFO:Creating metrics dataframe
2024-12-05 21:45:32,165:INFO:Uploading results into container
2024-12-05 21:45:32,166:INFO:Uploading model into container now
2024-12-05 21:45:32,166:INFO:_master_model_container: 2
2024-12-05 21:45:32,167:INFO:_display_container: 2
2024-12-05 21:45:32,167:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-05 21:45:32,167:INFO:create_model() successfully completed......................................
2024-12-05 21:45:32,370:INFO:SubProcess create_model() end ==================================
2024-12-05 21:45:32,370:INFO:Creating metrics dataframe
2024-12-05 21:45:32,416:INFO:Initializing Naive Bayes
2024-12-05 21:45:32,417:INFO:Total runtime is 0.2600921869277954 minutes
2024-12-05 21:45:32,434:INFO:SubProcess create_model() called ==================================
2024-12-05 21:45:32,435:INFO:Initializing create_model()
2024-12-05 21:45:32,435:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E149A9D80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:45:32,436:INFO:Checking exceptions
2024-12-05 21:45:32,436:INFO:Importing libraries
2024-12-05 21:45:32,436:INFO:Copying training dataset
2024-12-05 21:45:32,517:INFO:Defining folds
2024-12-05 21:45:32,518:INFO:Declaring metric variables
2024-12-05 21:45:32,534:INFO:Importing untrained model
2024-12-05 21:45:32,553:INFO:Naive Bayes Imported successfully
2024-12-05 21:45:32,583:INFO:Starting cross validation
2024-12-05 21:45:32,591:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:45:33,221:INFO:Calculating mean and std
2024-12-05 21:45:33,223:INFO:Creating metrics dataframe
2024-12-05 21:45:33,226:INFO:Uploading results into container
2024-12-05 21:45:33,227:INFO:Uploading model into container now
2024-12-05 21:45:33,227:INFO:_master_model_container: 3
2024-12-05 21:45:33,227:INFO:_display_container: 2
2024-12-05 21:45:33,227:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-05 21:45:33,228:INFO:create_model() successfully completed......................................
2024-12-05 21:45:33,318:INFO:SubProcess create_model() end ==================================
2024-12-05 21:45:33,318:INFO:Creating metrics dataframe
2024-12-05 21:45:33,331:INFO:Initializing Decision Tree Classifier
2024-12-05 21:45:33,331:INFO:Total runtime is 0.27533105611801145 minutes
2024-12-05 21:45:33,335:INFO:SubProcess create_model() called ==================================
2024-12-05 21:45:33,335:INFO:Initializing create_model()
2024-12-05 21:45:33,336:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E149A9D80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:45:33,336:INFO:Checking exceptions
2024-12-05 21:45:33,336:INFO:Importing libraries
2024-12-05 21:45:33,336:INFO:Copying training dataset
2024-12-05 21:45:33,362:INFO:Defining folds
2024-12-05 21:45:33,363:INFO:Declaring metric variables
2024-12-05 21:45:33,367:INFO:Importing untrained model
2024-12-05 21:45:33,372:INFO:Decision Tree Classifier Imported successfully
2024-12-05 21:45:33,381:INFO:Starting cross validation
2024-12-05 21:45:33,383:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:45:35,106:INFO:Calculating mean and std
2024-12-05 21:45:35,112:INFO:Creating metrics dataframe
2024-12-05 21:45:35,136:INFO:Uploading results into container
2024-12-05 21:45:35,139:INFO:Uploading model into container now
2024-12-05 21:45:35,141:INFO:_master_model_container: 4
2024-12-05 21:45:35,142:INFO:_display_container: 2
2024-12-05 21:45:35,143:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-12-05 21:45:35,143:INFO:create_model() successfully completed......................................
2024-12-05 21:45:35,364:INFO:SubProcess create_model() end ==================================
2024-12-05 21:45:35,364:INFO:Creating metrics dataframe
2024-12-05 21:45:35,416:INFO:Initializing SVM - Linear Kernel
2024-12-05 21:45:35,416:INFO:Total runtime is 0.31006879011789956 minutes
2024-12-05 21:45:35,433:INFO:SubProcess create_model() called ==================================
2024-12-05 21:45:35,434:INFO:Initializing create_model()
2024-12-05 21:45:35,435:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E149A9D80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:45:35,436:INFO:Checking exceptions
2024-12-05 21:45:35,437:INFO:Importing libraries
2024-12-05 21:45:35,437:INFO:Copying training dataset
2024-12-05 21:45:35,515:INFO:Defining folds
2024-12-05 21:45:35,516:INFO:Declaring metric variables
2024-12-05 21:45:35,523:INFO:Importing untrained model
2024-12-05 21:45:35,530:INFO:SVM - Linear Kernel Imported successfully
2024-12-05 21:45:35,540:INFO:Starting cross validation
2024-12-05 21:45:35,542:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:45:38,750:INFO:Calculating mean and std
2024-12-05 21:45:38,752:INFO:Creating metrics dataframe
2024-12-05 21:45:38,758:INFO:Uploading results into container
2024-12-05 21:45:38,759:INFO:Uploading model into container now
2024-12-05 21:45:38,760:INFO:_master_model_container: 5
2024-12-05 21:45:38,760:INFO:_display_container: 2
2024-12-05 21:45:38,761:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-05 21:45:38,761:INFO:create_model() successfully completed......................................
2024-12-05 21:45:38,879:INFO:SubProcess create_model() end ==================================
2024-12-05 21:45:38,879:INFO:Creating metrics dataframe
2024-12-05 21:45:38,897:INFO:Initializing Ridge Classifier
2024-12-05 21:45:38,897:INFO:Total runtime is 0.3680980682373047 minutes
2024-12-05 21:45:38,902:INFO:SubProcess create_model() called ==================================
2024-12-05 21:45:38,902:INFO:Initializing create_model()
2024-12-05 21:45:38,902:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E149A9D80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:45:38,902:INFO:Checking exceptions
2024-12-05 21:45:38,902:INFO:Importing libraries
2024-12-05 21:45:38,903:INFO:Copying training dataset
2024-12-05 21:45:38,931:INFO:Defining folds
2024-12-05 21:45:38,932:INFO:Declaring metric variables
2024-12-05 21:45:38,935:INFO:Importing untrained model
2024-12-05 21:45:38,941:INFO:Ridge Classifier Imported successfully
2024-12-05 21:45:38,950:INFO:Starting cross validation
2024-12-05 21:45:38,952:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:45:39,286:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.50003e-22): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-12-05 21:45:39,287:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.12956e-22): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-12-05 21:45:39,287:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.39476e-22): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-12-05 21:45:39,305:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.66086e-22): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-12-05 21:45:39,312:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.27596e-22): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-12-05 21:45:39,553:INFO:Calculating mean and std
2024-12-05 21:45:39,558:INFO:Creating metrics dataframe
2024-12-05 21:45:39,580:INFO:Uploading results into container
2024-12-05 21:45:39,582:INFO:Uploading model into container now
2024-12-05 21:45:39,584:INFO:_master_model_container: 6
2024-12-05 21:45:39,584:INFO:_display_container: 2
2024-12-05 21:45:39,586:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-12-05 21:45:39,587:INFO:create_model() successfully completed......................................
2024-12-05 21:45:39,808:INFO:SubProcess create_model() end ==================================
2024-12-05 21:45:39,808:INFO:Creating metrics dataframe
2024-12-05 21:45:39,824:INFO:Initializing Random Forest Classifier
2024-12-05 21:45:39,824:INFO:Total runtime is 0.38354949156443274 minutes
2024-12-05 21:45:39,830:INFO:SubProcess create_model() called ==================================
2024-12-05 21:45:39,830:INFO:Initializing create_model()
2024-12-05 21:45:39,830:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E149A9D80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:45:39,830:INFO:Checking exceptions
2024-12-05 21:45:39,831:INFO:Importing libraries
2024-12-05 21:45:39,831:INFO:Copying training dataset
2024-12-05 21:45:39,926:INFO:Defining folds
2024-12-05 21:45:39,927:INFO:Declaring metric variables
2024-12-05 21:45:39,953:INFO:Importing untrained model
2024-12-05 21:45:39,959:INFO:Random Forest Classifier Imported successfully
2024-12-05 21:45:39,972:INFO:Starting cross validation
2024-12-05 21:45:39,974:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:45:48,857:INFO:Calculating mean and std
2024-12-05 21:45:48,863:INFO:Creating metrics dataframe
2024-12-05 21:45:48,881:INFO:Uploading results into container
2024-12-05 21:45:48,884:INFO:Uploading model into container now
2024-12-05 21:45:48,887:INFO:_master_model_container: 7
2024-12-05 21:45:48,887:INFO:_display_container: 2
2024-12-05 21:45:48,890:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 21:45:48,892:INFO:create_model() successfully completed......................................
2024-12-05 21:45:49,122:INFO:SubProcess create_model() end ==================================
2024-12-05 21:45:49,122:INFO:Creating metrics dataframe
2024-12-05 21:45:49,165:INFO:Initializing Quadratic Discriminant Analysis
2024-12-05 21:45:49,165:INFO:Total runtime is 0.5392308990160624 minutes
2024-12-05 21:45:49,176:INFO:SubProcess create_model() called ==================================
2024-12-05 21:45:49,177:INFO:Initializing create_model()
2024-12-05 21:45:49,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E149A9D80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:45:49,177:INFO:Checking exceptions
2024-12-05 21:45:49,178:INFO:Importing libraries
2024-12-05 21:45:49,178:INFO:Copying training dataset
2024-12-05 21:45:49,236:INFO:Defining folds
2024-12-05 21:45:49,236:INFO:Declaring metric variables
2024-12-05 21:45:49,247:INFO:Importing untrained model
2024-12-05 21:45:49,260:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-05 21:45:49,286:INFO:Starting cross validation
2024-12-05 21:45:49,290:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:45:50,045:INFO:Calculating mean and std
2024-12-05 21:45:50,050:INFO:Creating metrics dataframe
2024-12-05 21:45:50,067:INFO:Uploading results into container
2024-12-05 21:45:50,069:INFO:Uploading model into container now
2024-12-05 21:45:50,072:INFO:_master_model_container: 8
2024-12-05 21:45:50,073:INFO:_display_container: 2
2024-12-05 21:45:50,074:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-05 21:45:50,075:INFO:create_model() successfully completed......................................
2024-12-05 21:45:50,304:INFO:SubProcess create_model() end ==================================
2024-12-05 21:45:50,306:INFO:Creating metrics dataframe
2024-12-05 21:45:50,364:INFO:Initializing Ada Boost Classifier
2024-12-05 21:45:50,365:INFO:Total runtime is 0.559215501944224 minutes
2024-12-05 21:45:50,380:INFO:SubProcess create_model() called ==================================
2024-12-05 21:45:50,381:INFO:Initializing create_model()
2024-12-05 21:45:50,382:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E149A9D80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:45:50,382:INFO:Checking exceptions
2024-12-05 21:45:50,382:INFO:Importing libraries
2024-12-05 21:45:50,383:INFO:Copying training dataset
2024-12-05 21:45:50,466:INFO:Defining folds
2024-12-05 21:45:50,467:INFO:Declaring metric variables
2024-12-05 21:45:50,491:INFO:Importing untrained model
2024-12-05 21:45:50,513:INFO:Ada Boost Classifier Imported successfully
2024-12-05 21:45:50,580:INFO:Starting cross validation
2024-12-05 21:45:50,583:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:45:50,853:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:45:50,858:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:45:50,861:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:45:50,861:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:45:50,893:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:45:55,443:INFO:Calculating mean and std
2024-12-05 21:45:55,450:INFO:Creating metrics dataframe
2024-12-05 21:45:55,472:INFO:Uploading results into container
2024-12-05 21:45:55,474:INFO:Uploading model into container now
2024-12-05 21:45:55,476:INFO:_master_model_container: 9
2024-12-05 21:45:55,476:INFO:_display_container: 2
2024-12-05 21:45:55,477:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-12-05 21:45:55,477:INFO:create_model() successfully completed......................................
2024-12-05 21:45:55,611:INFO:SubProcess create_model() end ==================================
2024-12-05 21:45:55,611:INFO:Creating metrics dataframe
2024-12-05 21:45:55,624:INFO:Initializing Gradient Boosting Classifier
2024-12-05 21:45:55,624:INFO:Total runtime is 0.6468732357025146 minutes
2024-12-05 21:45:55,628:INFO:SubProcess create_model() called ==================================
2024-12-05 21:45:55,629:INFO:Initializing create_model()
2024-12-05 21:45:55,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E149A9D80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:45:55,629:INFO:Checking exceptions
2024-12-05 21:45:55,629:INFO:Importing libraries
2024-12-05 21:45:55,629:INFO:Copying training dataset
2024-12-05 21:45:55,652:INFO:Defining folds
2024-12-05 21:45:55,653:INFO:Declaring metric variables
2024-12-05 21:45:55,657:INFO:Importing untrained model
2024-12-05 21:45:55,664:INFO:Gradient Boosting Classifier Imported successfully
2024-12-05 21:45:55,674:INFO:Starting cross validation
2024-12-05 21:45:55,676:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:46:17,303:INFO:Calculating mean and std
2024-12-05 21:46:17,306:INFO:Creating metrics dataframe
2024-12-05 21:46:17,321:INFO:Uploading results into container
2024-12-05 21:46:17,322:INFO:Uploading model into container now
2024-12-05 21:46:17,324:INFO:_master_model_container: 10
2024-12-05 21:46:17,325:INFO:_display_container: 2
2024-12-05 21:46:17,326:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-05 21:46:17,326:INFO:create_model() successfully completed......................................
2024-12-05 21:46:17,515:INFO:SubProcess create_model() end ==================================
2024-12-05 21:46:17,516:INFO:Creating metrics dataframe
2024-12-05 21:46:17,558:INFO:Initializing Linear Discriminant Analysis
2024-12-05 21:46:17,558:INFO:Total runtime is 1.0124493638674419 minutes
2024-12-05 21:46:17,573:INFO:SubProcess create_model() called ==================================
2024-12-05 21:46:17,574:INFO:Initializing create_model()
2024-12-05 21:46:17,574:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E149A9D80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:46:17,575:INFO:Checking exceptions
2024-12-05 21:46:17,575:INFO:Importing libraries
2024-12-05 21:46:17,575:INFO:Copying training dataset
2024-12-05 21:46:17,651:INFO:Defining folds
2024-12-05 21:46:17,652:INFO:Declaring metric variables
2024-12-05 21:46:17,668:INFO:Importing untrained model
2024-12-05 21:46:17,680:INFO:Linear Discriminant Analysis Imported successfully
2024-12-05 21:46:17,711:INFO:Starting cross validation
2024-12-05 21:46:17,717:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:46:18,590:INFO:Calculating mean and std
2024-12-05 21:46:18,594:INFO:Creating metrics dataframe
2024-12-05 21:46:18,608:INFO:Uploading results into container
2024-12-05 21:46:18,611:INFO:Uploading model into container now
2024-12-05 21:46:18,612:INFO:_master_model_container: 11
2024-12-05 21:46:18,612:INFO:_display_container: 2
2024-12-05 21:46:18,613:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-05 21:46:18,614:INFO:create_model() successfully completed......................................
2024-12-05 21:46:18,829:INFO:SubProcess create_model() end ==================================
2024-12-05 21:46:18,829:INFO:Creating metrics dataframe
2024-12-05 21:46:18,861:INFO:Initializing Extra Trees Classifier
2024-12-05 21:46:18,863:INFO:Total runtime is 1.034186081091563 minutes
2024-12-05 21:46:18,873:INFO:SubProcess create_model() called ==================================
2024-12-05 21:46:18,874:INFO:Initializing create_model()
2024-12-05 21:46:18,875:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E149A9D80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:46:18,876:INFO:Checking exceptions
2024-12-05 21:46:18,876:INFO:Importing libraries
2024-12-05 21:46:18,877:INFO:Copying training dataset
2024-12-05 21:46:18,961:INFO:Defining folds
2024-12-05 21:46:18,962:INFO:Declaring metric variables
2024-12-05 21:46:18,966:INFO:Importing untrained model
2024-12-05 21:46:18,972:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:46:18,987:INFO:Starting cross validation
2024-12-05 21:46:18,991:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:46:22,401:INFO:Calculating mean and std
2024-12-05 21:46:22,402:INFO:Creating metrics dataframe
2024-12-05 21:46:22,411:INFO:Uploading results into container
2024-12-05 21:46:22,413:INFO:Uploading model into container now
2024-12-05 21:46:22,414:INFO:_master_model_container: 12
2024-12-05 21:46:22,415:INFO:_display_container: 2
2024-12-05 21:46:22,416:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:46:22,416:INFO:create_model() successfully completed......................................
2024-12-05 21:46:22,580:INFO:SubProcess create_model() end ==================================
2024-12-05 21:46:22,580:INFO:Creating metrics dataframe
2024-12-05 21:46:22,598:INFO:Initializing Extreme Gradient Boosting
2024-12-05 21:46:22,598:INFO:Total runtime is 1.096441125869751 minutes
2024-12-05 21:46:22,603:INFO:SubProcess create_model() called ==================================
2024-12-05 21:46:22,603:INFO:Initializing create_model()
2024-12-05 21:46:22,603:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E149A9D80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:46:22,604:INFO:Checking exceptions
2024-12-05 21:46:22,604:INFO:Importing libraries
2024-12-05 21:46:22,604:INFO:Copying training dataset
2024-12-05 21:46:22,633:INFO:Defining folds
2024-12-05 21:46:22,633:INFO:Declaring metric variables
2024-12-05 21:46:22,644:INFO:Importing untrained model
2024-12-05 21:46:22,655:INFO:Extreme Gradient Boosting Imported successfully
2024-12-05 21:46:22,680:INFO:Starting cross validation
2024-12-05 21:46:22,684:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:46:25,853:INFO:Calculating mean and std
2024-12-05 21:46:25,854:INFO:Creating metrics dataframe
2024-12-05 21:46:25,857:INFO:Uploading results into container
2024-12-05 21:46:25,859:INFO:Uploading model into container now
2024-12-05 21:46:25,859:INFO:_master_model_container: 13
2024-12-05 21:46:25,859:INFO:_display_container: 2
2024-12-05 21:46:25,860:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-12-05 21:46:25,860:INFO:create_model() successfully completed......................................
2024-12-05 21:46:25,963:INFO:SubProcess create_model() end ==================================
2024-12-05 21:46:25,963:INFO:Creating metrics dataframe
2024-12-05 21:46:25,979:INFO:Initializing Light Gradient Boosting Machine
2024-12-05 21:46:25,979:INFO:Total runtime is 1.1527956525484722 minutes
2024-12-05 21:46:25,984:INFO:SubProcess create_model() called ==================================
2024-12-05 21:46:25,985:INFO:Initializing create_model()
2024-12-05 21:46:25,985:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E149A9D80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:46:25,985:INFO:Checking exceptions
2024-12-05 21:46:25,985:INFO:Importing libraries
2024-12-05 21:46:25,985:INFO:Copying training dataset
2024-12-05 21:46:26,014:INFO:Defining folds
2024-12-05 21:46:26,015:INFO:Declaring metric variables
2024-12-05 21:46:26,020:INFO:Importing untrained model
2024-12-05 21:46:26,028:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-05 21:46:26,040:INFO:Starting cross validation
2024-12-05 21:46:26,042:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:46:28,317:INFO:Calculating mean and std
2024-12-05 21:46:28,318:INFO:Creating metrics dataframe
2024-12-05 21:46:28,324:INFO:Uploading results into container
2024-12-05 21:46:28,325:INFO:Uploading model into container now
2024-12-05 21:46:28,326:INFO:_master_model_container: 14
2024-12-05 21:46:28,326:INFO:_display_container: 2
2024-12-05 21:46:28,327:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-05 21:46:28,327:INFO:create_model() successfully completed......................................
2024-12-05 21:46:28,429:INFO:SubProcess create_model() end ==================================
2024-12-05 21:46:28,429:INFO:Creating metrics dataframe
2024-12-05 21:46:28,442:INFO:Initializing CatBoost Classifier
2024-12-05 21:46:28,442:INFO:Total runtime is 1.193848462899526 minutes
2024-12-05 21:46:28,445:INFO:SubProcess create_model() called ==================================
2024-12-05 21:46:28,446:INFO:Initializing create_model()
2024-12-05 21:46:28,446:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E149A9D80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:46:28,446:INFO:Checking exceptions
2024-12-05 21:46:28,446:INFO:Importing libraries
2024-12-05 21:46:28,446:INFO:Copying training dataset
2024-12-05 21:46:28,467:INFO:Defining folds
2024-12-05 21:46:28,467:INFO:Declaring metric variables
2024-12-05 21:46:28,472:INFO:Importing untrained model
2024-12-05 21:46:28,477:INFO:CatBoost Classifier Imported successfully
2024-12-05 21:46:28,484:INFO:Starting cross validation
2024-12-05 21:46:28,487:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:47:09,303:INFO:Calculating mean and std
2024-12-05 21:47:09,305:INFO:Creating metrics dataframe
2024-12-05 21:47:09,311:INFO:Uploading results into container
2024-12-05 21:47:09,312:INFO:Uploading model into container now
2024-12-05 21:47:09,313:INFO:_master_model_container: 15
2024-12-05 21:47:09,313:INFO:_display_container: 2
2024-12-05 21:47:09,313:INFO:<catboost.core.CatBoostClassifier object at 0x0000023E18456440>
2024-12-05 21:47:09,314:INFO:create_model() successfully completed......................................
2024-12-05 21:47:09,457:INFO:SubProcess create_model() end ==================================
2024-12-05 21:47:09,457:INFO:Creating metrics dataframe
2024-12-05 21:47:09,477:INFO:Initializing Dummy Classifier
2024-12-05 21:47:09,477:INFO:Total runtime is 1.8777593255043032 minutes
2024-12-05 21:47:09,481:INFO:SubProcess create_model() called ==================================
2024-12-05 21:47:09,481:INFO:Initializing create_model()
2024-12-05 21:47:09,481:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E149A9D80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:47:09,481:INFO:Checking exceptions
2024-12-05 21:47:09,481:INFO:Importing libraries
2024-12-05 21:47:09,482:INFO:Copying training dataset
2024-12-05 21:47:09,516:INFO:Defining folds
2024-12-05 21:47:09,517:INFO:Declaring metric variables
2024-12-05 21:47:09,523:INFO:Importing untrained model
2024-12-05 21:47:09,528:INFO:Dummy Classifier Imported successfully
2024-12-05 21:47:09,540:INFO:Starting cross validation
2024-12-05 21:47:09,541:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:47:10,227:INFO:Calculating mean and std
2024-12-05 21:47:10,235:INFO:Creating metrics dataframe
2024-12-05 21:47:10,262:INFO:Uploading results into container
2024-12-05 21:47:10,264:INFO:Uploading model into container now
2024-12-05 21:47:10,265:INFO:_master_model_container: 16
2024-12-05 21:47:10,266:INFO:_display_container: 2
2024-12-05 21:47:10,266:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-12-05 21:47:10,267:INFO:create_model() successfully completed......................................
2024-12-05 21:47:10,420:INFO:SubProcess create_model() end ==================================
2024-12-05 21:47:10,420:INFO:Creating metrics dataframe
2024-12-05 21:47:10,459:INFO:Initializing create_model()
2024-12-05 21:47:10,459:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:47:10,459:INFO:Checking exceptions
2024-12-05 21:47:10,462:INFO:Importing libraries
2024-12-05 21:47:10,462:INFO:Copying training dataset
2024-12-05 21:47:10,491:INFO:Defining folds
2024-12-05 21:47:10,491:INFO:Declaring metric variables
2024-12-05 21:47:10,492:INFO:Importing untrained model
2024-12-05 21:47:10,492:INFO:Declaring custom model
2024-12-05 21:47:10,494:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:47:10,495:INFO:Cross validation set to False
2024-12-05 21:47:10,496:INFO:Fitting Model
2024-12-05 21:47:11,600:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:47:11,600:INFO:create_model() successfully completed......................................
2024-12-05 21:47:11,888:INFO:_master_model_container: 16
2024-12-05 21:47:11,888:INFO:_display_container: 2
2024-12-05 21:47:11,889:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:47:11,889:INFO:compare_models() successfully completed......................................
2024-12-05 21:47:11,982:INFO:Initializing predict_model()
2024-12-05 21:47:11,982:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E1456B2E0>)
2024-12-05 21:47:11,982:INFO:Checking exceptions
2024-12-05 21:47:11,982:INFO:Preloading libraries
2024-12-05 21:47:11,985:INFO:Set up data.
2024-12-05 21:47:12,039:INFO:Set up index.
2024-12-05 21:47:12,672:INFO:Initializing finalize_model()
2024-12-05 21:47:12,673:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-05 21:47:12,673:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:47:12,691:INFO:Initializing create_model()
2024-12-05 21:47:12,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:47:12,692:INFO:Checking exceptions
2024-12-05 21:47:12,696:INFO:Importing libraries
2024-12-05 21:47:12,696:INFO:Copying training dataset
2024-12-05 21:47:12,697:INFO:Defining folds
2024-12-05 21:47:12,698:INFO:Declaring metric variables
2024-12-05 21:47:12,698:INFO:Importing untrained model
2024-12-05 21:47:12,698:INFO:Declaring custom model
2024-12-05 21:47:12,699:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:47:12,699:INFO:Cross validation set to False
2024-12-05 21:47:12,699:INFO:Fitting Model
2024-12-05 21:47:14,532:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 21:47:14,532:INFO:create_model() successfully completed......................................
2024-12-05 21:47:14,619:INFO:_master_model_container: 16
2024-12-05 21:47:14,619:INFO:_display_container: 3
2024-12-05 21:47:14,626:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 21:47:14,627:INFO:finalize_model() successfully completed......................................
2024-12-05 21:47:14,730:INFO:Initializing predict_model()
2024-12-05 21:47:14,730:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E1456B2E0>)
2024-12-05 21:47:14,730:INFO:Checking exceptions
2024-12-05 21:47:14,730:INFO:Preloading libraries
2024-12-05 21:47:14,732:INFO:Set up data.
2024-12-05 21:47:14,778:INFO:Set up index.
2024-12-05 21:47:15,673:INFO:Initializing predict_model()
2024-12-05 21:47:15,673:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E1E2ECAF0>)
2024-12-05 21:47:15,674:INFO:Checking exceptions
2024-12-05 21:47:15,675:INFO:Preloading libraries
2024-12-05 21:47:15,680:INFO:Set up data.
2024-12-05 21:47:15,744:INFO:Set up index.
2024-12-05 21:47:16,610:INFO:Initializing predict_model()
2024-12-05 21:47:16,610:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E6A865000>)
2024-12-05 21:47:16,610:INFO:Checking exceptions
2024-12-05 21:47:16,610:INFO:Preloading libraries
2024-12-05 21:47:16,613:INFO:Set up data.
2024-12-05 21:47:16,665:INFO:Set up index.
2024-12-05 21:47:17,605:INFO:Initializing plot_model()
2024-12-05 21:47:17,606:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1461A020>, system=True)
2024-12-05 21:47:17,606:INFO:Checking exceptions
2024-12-05 21:47:17,673:INFO:Preloading libraries
2024-12-05 21:47:17,843:INFO:Copying training dataset
2024-12-05 21:47:17,843:INFO:Plot type: feature
2024-12-05 21:47:17,844:WARNING:No coef_ found. Trying feature_importances_
2024-12-05 21:47:18,149:INFO:Visual Rendered Successfully
2024-12-05 21:47:18,239:INFO:plot_model() successfully completed......................................
2024-12-05 21:47:18,471:INFO:PyCaret ClassificationExperiment
2024-12-05 21:47:18,471:INFO:Logging name: clf-default-name
2024-12-05 21:47:18,471:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-05 21:47:18,471:INFO:version 3.3.2
2024-12-05 21:47:18,471:INFO:Initializing setup()
2024-12-05 21:47:18,471:INFO:self.USI: 60c7
2024-12-05 21:47:18,472:INFO:self._variable_keys: {'_available_plots', 'logging_param', 'is_multiclass', 'fold_generator', 'y', 'data', 'fold_groups_param', 'memory', 'X', 'target_param', 'pipeline', 'y_train', '_ml_usecase', 'seed', 'X_train', 'html_param', 'USI', 'X_test', 'exp_name_log', 'exp_id', 'fix_imbalance', 'fold_shuffle_param', 'gpu_param', 'gpu_n_jobs_param', 'y_test', 'log_plots_param', 'idx', 'n_jobs_param'}
2024-12-05 21:47:18,472:INFO:Checking environment
2024-12-05 21:47:18,472:INFO:python_version: 3.10.11
2024-12-05 21:47:18,472:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-12-05 21:47:18,472:INFO:machine: AMD64
2024-12-05 21:47:18,472:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-05 21:47:18,476:INFO:Memory: svmem(total=17041244160, available=5292314624, percent=68.9, used=11748929536, free=5292314624)
2024-12-05 21:47:18,476:INFO:Physical Core: 4
2024-12-05 21:47:18,476:INFO:Logical Core: 8
2024-12-05 21:47:18,476:INFO:Checking libraries
2024-12-05 21:47:18,476:INFO:System:
2024-12-05 21:47:18,476:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-12-05 21:47:18,477:INFO:executable: c:\Users\diego\AppData\Local\Programs\Python\Python310\python.exe
2024-12-05 21:47:18,477:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-05 21:47:18,477:INFO:PyCaret required dependencies:
2024-12-05 21:47:18,477:INFO:                 pip: 24.2
2024-12-05 21:47:18,477:INFO:          setuptools: 65.5.0
2024-12-05 21:47:18,477:INFO:             pycaret: 3.3.2
2024-12-05 21:47:18,478:INFO:             IPython: 8.26.0
2024-12-05 21:47:18,478:INFO:          ipywidgets: 8.1.5
2024-12-05 21:47:18,478:INFO:                tqdm: 4.66.5
2024-12-05 21:47:18,478:INFO:               numpy: 1.26.4
2024-12-05 21:47:18,478:INFO:              pandas: 1.5.3
2024-12-05 21:47:18,478:INFO:              jinja2: 3.1.4
2024-12-05 21:47:18,478:INFO:               scipy: 1.11.4
2024-12-05 21:47:18,478:INFO:              joblib: 1.3.2
2024-12-05 21:47:18,478:INFO:             sklearn: 1.4.2
2024-12-05 21:47:18,478:INFO:                pyod: 2.0.2
2024-12-05 21:47:18,478:INFO:            imblearn: 0.12.3
2024-12-05 21:47:18,478:INFO:   category_encoders: 2.6.4
2024-12-05 21:47:18,478:INFO:            lightgbm: 4.5.0
2024-12-05 21:47:18,478:INFO:               numba: 0.60.0
2024-12-05 21:47:18,478:INFO:            requests: 2.32.3
2024-12-05 21:47:18,478:INFO:          matplotlib: 3.7.5
2024-12-05 21:47:18,478:INFO:          scikitplot: 0.3.7
2024-12-05 21:47:18,478:INFO:         yellowbrick: 1.5
2024-12-05 21:47:18,479:INFO:              plotly: 5.24.1
2024-12-05 21:47:18,479:INFO:    plotly-resampler: Not installed
2024-12-05 21:47:18,479:INFO:             kaleido: 0.2.1
2024-12-05 21:47:18,479:INFO:           schemdraw: 0.15
2024-12-05 21:47:18,479:INFO:         statsmodels: 0.14.4
2024-12-05 21:47:18,479:INFO:              sktime: 0.26.0
2024-12-05 21:47:18,479:INFO:               tbats: 1.1.3
2024-12-05 21:47:18,479:INFO:            pmdarima: 2.0.4
2024-12-05 21:47:18,479:INFO:              psutil: 6.0.0
2024-12-05 21:47:18,479:INFO:          markupsafe: 2.1.5
2024-12-05 21:47:18,479:INFO:             pickle5: Not installed
2024-12-05 21:47:18,479:INFO:         cloudpickle: 3.1.0
2024-12-05 21:47:18,479:INFO:         deprecation: 2.1.0
2024-12-05 21:47:18,479:INFO:              xxhash: 3.5.0
2024-12-05 21:47:18,479:INFO:           wurlitzer: Not installed
2024-12-05 21:47:18,479:INFO:PyCaret optional dependencies:
2024-12-05 21:47:18,479:INFO:                shap: 0.44.0
2024-12-05 21:47:18,479:INFO:           interpret: 0.5.0
2024-12-05 21:47:18,479:INFO:                umap: 0.5.6
2024-12-05 21:47:18,479:INFO:     ydata_profiling: 4.11.0
2024-12-05 21:47:18,479:INFO:  explainerdashboard: 0.4.7
2024-12-05 21:47:18,479:INFO:             autoviz: Not installed
2024-12-05 21:47:18,479:INFO:           fairlearn: 0.7.0
2024-12-05 21:47:18,479:INFO:          deepchecks: Not installed
2024-12-05 21:47:18,479:INFO:             xgboost: 2.1.2
2024-12-05 21:47:18,479:INFO:            catboost: 1.2.7
2024-12-05 21:47:18,479:INFO:              kmodes: Not installed
2024-12-05 21:47:18,479:INFO:             mlxtend: Not installed
2024-12-05 21:47:18,479:INFO:       statsforecast: Not installed
2024-12-05 21:47:18,479:INFO:        tune_sklearn: Not installed
2024-12-05 21:47:18,479:INFO:                 ray: Not installed
2024-12-05 21:47:18,479:INFO:            hyperopt: Not installed
2024-12-05 21:47:18,479:INFO:              optuna: 4.0.0
2024-12-05 21:47:18,479:INFO:               skopt: Not installed
2024-12-05 21:47:18,479:INFO:              mlflow: 2.18.0
2024-12-05 21:47:18,479:INFO:              gradio: Not installed
2024-12-05 21:47:18,480:INFO:             fastapi: Not installed
2024-12-05 21:47:18,480:INFO:             uvicorn: Not installed
2024-12-05 21:47:18,480:INFO:              m2cgen: Not installed
2024-12-05 21:47:18,480:INFO:           evidently: Not installed
2024-12-05 21:47:18,480:INFO:               fugue: Not installed
2024-12-05 21:47:18,480:INFO:           streamlit: 1.39.0
2024-12-05 21:47:18,480:INFO:             prophet: Not installed
2024-12-05 21:47:18,480:INFO:None
2024-12-05 21:47:18,480:INFO:Set up data.
2024-12-05 21:47:18,533:INFO:Set up folding strategy.
2024-12-05 21:47:18,534:INFO:Set up train/test split.
2024-12-05 21:47:18,567:INFO:Set up index.
2024-12-05 21:47:18,569:INFO:Assigning column types.
2024-12-05 21:47:18,587:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-05 21:47:18,635:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 21:47:18,636:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:47:18,665:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:47:18,667:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:47:18,721:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 21:47:18,721:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:47:18,761:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:47:18,765:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:47:18,766:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-05 21:47:18,839:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:47:18,881:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:47:18,887:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:47:18,961:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:47:19,006:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:47:19,009:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:47:19,010:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-05 21:47:19,111:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:47:19,114:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:47:19,207:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:47:19,211:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:47:19,213:INFO:Preparing preprocessing pipeline...
2024-12-05 21:47:19,216:INFO:Set up simple imputation.
2024-12-05 21:47:19,288:INFO:Finished creating preprocessing pipeline.
2024-12-05 21:47:19,292:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\diego\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_ti...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-12-05 21:47:19,292:INFO:Creating final display dataframe.
2024-12-05 21:47:19,672:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            target
2                   Target type            Binary
3           Original data shape       (31007, 47)
4        Transformed data shape       (31007, 46)
5   Transformed train set shape       (21704, 46)
6    Transformed test set shape        (9303, 46)
7               Ignore features                 1
8              Numeric features                45
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                 5
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              60c7
2024-12-05 21:47:19,783:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:47:19,787:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:47:19,899:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:47:19,903:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:47:19,905:INFO:setup() successfully completed in 1.5s...............
2024-12-05 21:47:19,968:INFO:Initializing compare_models()
2024-12-05 21:47:19,968:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-05 21:47:19,968:INFO:Checking exceptions
2024-12-05 21:47:19,985:INFO:Preparing display monitor
2024-12-05 21:47:20,019:INFO:Initializing Logistic Regression
2024-12-05 21:47:20,019:INFO:Total runtime is 8.47180684407552e-06 minutes
2024-12-05 21:47:20,024:INFO:SubProcess create_model() called ==================================
2024-12-05 21:47:20,025:INFO:Initializing create_model()
2024-12-05 21:47:20,025:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1276C3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:47:20,025:INFO:Checking exceptions
2024-12-05 21:47:20,026:INFO:Importing libraries
2024-12-05 21:47:20,026:INFO:Copying training dataset
2024-12-05 21:47:20,055:INFO:Defining folds
2024-12-05 21:47:20,055:INFO:Declaring metric variables
2024-12-05 21:47:20,061:INFO:Importing untrained model
2024-12-05 21:47:20,066:INFO:Logistic Regression Imported successfully
2024-12-05 21:47:20,077:INFO:Starting cross validation
2024-12-05 21:47:20,080:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:47:26,283:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-12-05 21:47:26,318:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-12-05 21:47:26,329:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-12-05 21:47:26,332:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-12-05 21:47:26,367:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-12-05 21:47:26,522:INFO:Calculating mean and std
2024-12-05 21:47:26,527:INFO:Creating metrics dataframe
2024-12-05 21:47:26,549:INFO:Uploading results into container
2024-12-05 21:47:26,553:INFO:Uploading model into container now
2024-12-05 21:47:26,554:INFO:_master_model_container: 1
2024-12-05 21:47:26,555:INFO:_display_container: 2
2024-12-05 21:47:26,558:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-05 21:47:26,558:INFO:create_model() successfully completed......................................
2024-12-05 21:47:26,811:INFO:SubProcess create_model() end ==================================
2024-12-05 21:47:26,812:INFO:Creating metrics dataframe
2024-12-05 21:47:26,854:INFO:Initializing K Neighbors Classifier
2024-12-05 21:47:26,854:INFO:Total runtime is 0.11392389535903931 minutes
2024-12-05 21:47:26,871:INFO:SubProcess create_model() called ==================================
2024-12-05 21:47:26,872:INFO:Initializing create_model()
2024-12-05 21:47:26,872:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1276C3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:47:26,872:INFO:Checking exceptions
2024-12-05 21:47:26,873:INFO:Importing libraries
2024-12-05 21:47:26,875:INFO:Copying training dataset
2024-12-05 21:47:26,966:INFO:Defining folds
2024-12-05 21:47:26,967:INFO:Declaring metric variables
2024-12-05 21:47:26,989:INFO:Importing untrained model
2024-12-05 21:47:27,010:INFO:K Neighbors Classifier Imported successfully
2024-12-05 21:47:27,047:INFO:Starting cross validation
2024-12-05 21:47:27,055:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:47:29,288:INFO:Calculating mean and std
2024-12-05 21:47:29,293:INFO:Creating metrics dataframe
2024-12-05 21:47:29,313:INFO:Uploading results into container
2024-12-05 21:47:29,317:INFO:Uploading model into container now
2024-12-05 21:47:29,321:INFO:_master_model_container: 2
2024-12-05 21:47:29,322:INFO:_display_container: 2
2024-12-05 21:47:29,323:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-05 21:47:29,324:INFO:create_model() successfully completed......................................
2024-12-05 21:47:29,543:INFO:SubProcess create_model() end ==================================
2024-12-05 21:47:29,543:INFO:Creating metrics dataframe
2024-12-05 21:47:29,556:INFO:Initializing Naive Bayes
2024-12-05 21:47:29,556:INFO:Total runtime is 0.15895080169041953 minutes
2024-12-05 21:47:29,561:INFO:SubProcess create_model() called ==================================
2024-12-05 21:47:29,562:INFO:Initializing create_model()
2024-12-05 21:47:29,562:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1276C3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:47:29,562:INFO:Checking exceptions
2024-12-05 21:47:29,562:INFO:Importing libraries
2024-12-05 21:47:29,562:INFO:Copying training dataset
2024-12-05 21:47:29,597:INFO:Defining folds
2024-12-05 21:47:29,597:INFO:Declaring metric variables
2024-12-05 21:47:29,602:INFO:Importing untrained model
2024-12-05 21:47:29,607:INFO:Naive Bayes Imported successfully
2024-12-05 21:47:29,618:INFO:Starting cross validation
2024-12-05 21:47:29,619:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:47:30,040:INFO:Calculating mean and std
2024-12-05 21:47:30,042:INFO:Creating metrics dataframe
2024-12-05 21:47:30,049:INFO:Uploading results into container
2024-12-05 21:47:30,049:INFO:Uploading model into container now
2024-12-05 21:47:30,049:INFO:_master_model_container: 3
2024-12-05 21:47:30,050:INFO:_display_container: 2
2024-12-05 21:47:30,050:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-05 21:47:30,050:INFO:create_model() successfully completed......................................
2024-12-05 21:47:30,171:INFO:SubProcess create_model() end ==================================
2024-12-05 21:47:30,171:INFO:Creating metrics dataframe
2024-12-05 21:47:30,189:INFO:Initializing Decision Tree Classifier
2024-12-05 21:47:30,189:INFO:Total runtime is 0.16950601339340213 minutes
2024-12-05 21:47:30,195:INFO:SubProcess create_model() called ==================================
2024-12-05 21:47:30,196:INFO:Initializing create_model()
2024-12-05 21:47:30,196:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1276C3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:47:30,196:INFO:Checking exceptions
2024-12-05 21:47:30,196:INFO:Importing libraries
2024-12-05 21:47:30,196:INFO:Copying training dataset
2024-12-05 21:47:30,227:INFO:Defining folds
2024-12-05 21:47:30,227:INFO:Declaring metric variables
2024-12-05 21:47:30,232:INFO:Importing untrained model
2024-12-05 21:47:30,239:INFO:Decision Tree Classifier Imported successfully
2024-12-05 21:47:30,249:INFO:Starting cross validation
2024-12-05 21:47:30,250:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:47:32,017:INFO:Calculating mean and std
2024-12-05 21:47:32,019:INFO:Creating metrics dataframe
2024-12-05 21:47:32,022:INFO:Uploading results into container
2024-12-05 21:47:32,023:INFO:Uploading model into container now
2024-12-05 21:47:32,024:INFO:_master_model_container: 4
2024-12-05 21:47:32,024:INFO:_display_container: 2
2024-12-05 21:47:32,024:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-12-05 21:47:32,024:INFO:create_model() successfully completed......................................
2024-12-05 21:47:32,128:INFO:SubProcess create_model() end ==================================
2024-12-05 21:47:32,128:INFO:Creating metrics dataframe
2024-12-05 21:47:32,149:INFO:Initializing SVM - Linear Kernel
2024-12-05 21:47:32,149:INFO:Total runtime is 0.20216414531071983 minutes
2024-12-05 21:47:32,159:INFO:SubProcess create_model() called ==================================
2024-12-05 21:47:32,159:INFO:Initializing create_model()
2024-12-05 21:47:32,160:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1276C3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:47:32,160:INFO:Checking exceptions
2024-12-05 21:47:32,161:INFO:Importing libraries
2024-12-05 21:47:32,161:INFO:Copying training dataset
2024-12-05 21:47:32,223:INFO:Defining folds
2024-12-05 21:47:32,223:INFO:Declaring metric variables
2024-12-05 21:47:32,235:INFO:Importing untrained model
2024-12-05 21:47:32,249:INFO:SVM - Linear Kernel Imported successfully
2024-12-05 21:47:32,273:INFO:Starting cross validation
2024-12-05 21:47:32,275:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:47:34,552:INFO:Calculating mean and std
2024-12-05 21:47:34,555:INFO:Creating metrics dataframe
2024-12-05 21:47:34,562:INFO:Uploading results into container
2024-12-05 21:47:34,563:INFO:Uploading model into container now
2024-12-05 21:47:34,564:INFO:_master_model_container: 5
2024-12-05 21:47:34,564:INFO:_display_container: 2
2024-12-05 21:47:34,564:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-05 21:47:34,565:INFO:create_model() successfully completed......................................
2024-12-05 21:47:34,702:INFO:SubProcess create_model() end ==================================
2024-12-05 21:47:34,702:INFO:Creating metrics dataframe
2024-12-05 21:47:34,718:INFO:Initializing Ridge Classifier
2024-12-05 21:47:34,718:INFO:Total runtime is 0.24499002297719322 minutes
2024-12-05 21:47:34,727:INFO:SubProcess create_model() called ==================================
2024-12-05 21:47:34,727:INFO:Initializing create_model()
2024-12-05 21:47:34,727:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1276C3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:47:34,727:INFO:Checking exceptions
2024-12-05 21:47:34,727:INFO:Importing libraries
2024-12-05 21:47:34,727:INFO:Copying training dataset
2024-12-05 21:47:34,752:INFO:Defining folds
2024-12-05 21:47:34,752:INFO:Declaring metric variables
2024-12-05 21:47:34,752:INFO:Importing untrained model
2024-12-05 21:47:34,760:INFO:Ridge Classifier Imported successfully
2024-12-05 21:47:34,769:INFO:Starting cross validation
2024-12-05 21:47:34,769:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:47:34,904:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.3967e-22): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-12-05 21:47:34,904:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.13325e-22): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-12-05 21:47:34,904:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.5023e-22): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-12-05 21:47:34,914:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.66259e-22): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-12-05 21:47:34,915:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.27749e-22): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-12-05 21:47:35,077:INFO:Calculating mean and std
2024-12-05 21:47:35,077:INFO:Creating metrics dataframe
2024-12-05 21:47:35,087:INFO:Uploading results into container
2024-12-05 21:47:35,088:INFO:Uploading model into container now
2024-12-05 21:47:35,089:INFO:_master_model_container: 6
2024-12-05 21:47:35,089:INFO:_display_container: 2
2024-12-05 21:47:35,089:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-12-05 21:47:35,090:INFO:create_model() successfully completed......................................
2024-12-05 21:47:35,212:INFO:SubProcess create_model() end ==================================
2024-12-05 21:47:35,213:INFO:Creating metrics dataframe
2024-12-05 21:47:35,231:INFO:Initializing Random Forest Classifier
2024-12-05 21:47:35,232:INFO:Total runtime is 0.2535450021425883 minutes
2024-12-05 21:47:35,241:INFO:SubProcess create_model() called ==================================
2024-12-05 21:47:35,242:INFO:Initializing create_model()
2024-12-05 21:47:35,242:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1276C3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:47:35,243:INFO:Checking exceptions
2024-12-05 21:47:35,243:INFO:Importing libraries
2024-12-05 21:47:35,243:INFO:Copying training dataset
2024-12-05 21:47:35,284:INFO:Defining folds
2024-12-05 21:47:35,285:INFO:Declaring metric variables
2024-12-05 21:47:35,288:INFO:Importing untrained model
2024-12-05 21:47:35,298:INFO:Random Forest Classifier Imported successfully
2024-12-05 21:47:35,311:INFO:Starting cross validation
2024-12-05 21:47:35,313:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:47:46,789:INFO:Calculating mean and std
2024-12-05 21:47:46,795:INFO:Creating metrics dataframe
2024-12-05 21:47:46,818:INFO:Uploading results into container
2024-12-05 21:47:46,821:INFO:Uploading model into container now
2024-12-05 21:47:46,823:INFO:_master_model_container: 7
2024-12-05 21:47:46,823:INFO:_display_container: 2
2024-12-05 21:47:46,824:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 21:47:46,825:INFO:create_model() successfully completed......................................
2024-12-05 21:47:47,086:INFO:SubProcess create_model() end ==================================
2024-12-05 21:47:47,087:INFO:Creating metrics dataframe
2024-12-05 21:47:47,124:INFO:Initializing Quadratic Discriminant Analysis
2024-12-05 21:47:47,125:INFO:Total runtime is 0.4517724831899007 minutes
2024-12-05 21:47:47,141:INFO:SubProcess create_model() called ==================================
2024-12-05 21:47:47,143:INFO:Initializing create_model()
2024-12-05 21:47:47,143:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1276C3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:47:47,144:INFO:Checking exceptions
2024-12-05 21:47:47,144:INFO:Importing libraries
2024-12-05 21:47:47,144:INFO:Copying training dataset
2024-12-05 21:47:47,207:INFO:Defining folds
2024-12-05 21:47:47,207:INFO:Declaring metric variables
2024-12-05 21:47:47,215:INFO:Importing untrained model
2024-12-05 21:47:47,222:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-05 21:47:47,233:INFO:Starting cross validation
2024-12-05 21:47:47,234:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:47:47,795:INFO:Calculating mean and std
2024-12-05 21:47:47,797:INFO:Creating metrics dataframe
2024-12-05 21:47:47,803:INFO:Uploading results into container
2024-12-05 21:47:47,804:INFO:Uploading model into container now
2024-12-05 21:47:47,804:INFO:_master_model_container: 8
2024-12-05 21:47:47,805:INFO:_display_container: 2
2024-12-05 21:47:47,805:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-05 21:47:47,805:INFO:create_model() successfully completed......................................
2024-12-05 21:47:47,933:INFO:SubProcess create_model() end ==================================
2024-12-05 21:47:47,933:INFO:Creating metrics dataframe
2024-12-05 21:47:47,953:INFO:Initializing Ada Boost Classifier
2024-12-05 21:47:47,953:INFO:Total runtime is 0.4655632535616557 minutes
2024-12-05 21:47:47,957:INFO:SubProcess create_model() called ==================================
2024-12-05 21:47:47,958:INFO:Initializing create_model()
2024-12-05 21:47:47,958:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1276C3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:47:47,958:INFO:Checking exceptions
2024-12-05 21:47:47,958:INFO:Importing libraries
2024-12-05 21:47:47,958:INFO:Copying training dataset
2024-12-05 21:47:47,989:INFO:Defining folds
2024-12-05 21:47:47,989:INFO:Declaring metric variables
2024-12-05 21:47:47,998:INFO:Importing untrained model
2024-12-05 21:47:48,003:INFO:Ada Boost Classifier Imported successfully
2024-12-05 21:47:48,023:INFO:Starting cross validation
2024-12-05 21:47:48,025:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:47:48,160:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:47:48,167:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:47:48,167:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:47:48,167:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:47:48,178:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:47:55,255:INFO:Calculating mean and std
2024-12-05 21:47:55,257:INFO:Creating metrics dataframe
2024-12-05 21:47:55,264:INFO:Uploading results into container
2024-12-05 21:47:55,264:INFO:Uploading model into container now
2024-12-05 21:47:55,265:INFO:_master_model_container: 9
2024-12-05 21:47:55,265:INFO:_display_container: 2
2024-12-05 21:47:55,265:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-12-05 21:47:55,265:INFO:create_model() successfully completed......................................
2024-12-05 21:47:55,399:INFO:SubProcess create_model() end ==================================
2024-12-05 21:47:55,399:INFO:Creating metrics dataframe
2024-12-05 21:47:55,415:INFO:Initializing Gradient Boosting Classifier
2024-12-05 21:47:55,415:INFO:Total runtime is 0.5899333198865254 minutes
2024-12-05 21:47:55,420:INFO:SubProcess create_model() called ==================================
2024-12-05 21:47:55,421:INFO:Initializing create_model()
2024-12-05 21:47:55,421:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1276C3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:47:55,421:INFO:Checking exceptions
2024-12-05 21:47:55,421:INFO:Importing libraries
2024-12-05 21:47:55,421:INFO:Copying training dataset
2024-12-05 21:47:55,445:INFO:Defining folds
2024-12-05 21:47:55,445:INFO:Declaring metric variables
2024-12-05 21:47:55,449:INFO:Importing untrained model
2024-12-05 21:47:55,455:INFO:Gradient Boosting Classifier Imported successfully
2024-12-05 21:47:55,463:INFO:Starting cross validation
2024-12-05 21:47:55,464:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:48:18,735:INFO:Calculating mean and std
2024-12-05 21:48:18,740:INFO:Creating metrics dataframe
2024-12-05 21:48:18,754:INFO:Uploading results into container
2024-12-05 21:48:18,756:INFO:Uploading model into container now
2024-12-05 21:48:18,758:INFO:_master_model_container: 10
2024-12-05 21:48:18,759:INFO:_display_container: 2
2024-12-05 21:48:18,762:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-05 21:48:18,762:INFO:create_model() successfully completed......................................
2024-12-05 21:48:19,018:INFO:SubProcess create_model() end ==================================
2024-12-05 21:48:19,018:INFO:Creating metrics dataframe
2024-12-05 21:48:19,031:INFO:Initializing Linear Discriminant Analysis
2024-12-05 21:48:19,031:INFO:Total runtime is 0.9835368315378825 minutes
2024-12-05 21:48:19,035:INFO:SubProcess create_model() called ==================================
2024-12-05 21:48:19,035:INFO:Initializing create_model()
2024-12-05 21:48:19,036:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1276C3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:48:19,036:INFO:Checking exceptions
2024-12-05 21:48:19,036:INFO:Importing libraries
2024-12-05 21:48:19,036:INFO:Copying training dataset
2024-12-05 21:48:19,061:INFO:Defining folds
2024-12-05 21:48:19,061:INFO:Declaring metric variables
2024-12-05 21:48:19,064:INFO:Importing untrained model
2024-12-05 21:48:19,069:INFO:Linear Discriminant Analysis Imported successfully
2024-12-05 21:48:19,077:INFO:Starting cross validation
2024-12-05 21:48:19,078:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:48:19,665:INFO:Calculating mean and std
2024-12-05 21:48:19,669:INFO:Creating metrics dataframe
2024-12-05 21:48:19,684:INFO:Uploading results into container
2024-12-05 21:48:19,688:INFO:Uploading model into container now
2024-12-05 21:48:19,690:INFO:_master_model_container: 11
2024-12-05 21:48:19,691:INFO:_display_container: 2
2024-12-05 21:48:19,693:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-05 21:48:19,694:INFO:create_model() successfully completed......................................
2024-12-05 21:48:19,913:INFO:SubProcess create_model() end ==================================
2024-12-05 21:48:19,913:INFO:Creating metrics dataframe
2024-12-05 21:48:19,926:INFO:Initializing Extra Trees Classifier
2024-12-05 21:48:19,926:INFO:Total runtime is 0.9984486818313599 minutes
2024-12-05 21:48:19,929:INFO:SubProcess create_model() called ==================================
2024-12-05 21:48:19,929:INFO:Initializing create_model()
2024-12-05 21:48:19,929:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1276C3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:48:19,929:INFO:Checking exceptions
2024-12-05 21:48:19,930:INFO:Importing libraries
2024-12-05 21:48:19,930:INFO:Copying training dataset
2024-12-05 21:48:19,946:INFO:Defining folds
2024-12-05 21:48:19,946:INFO:Declaring metric variables
2024-12-05 21:48:19,953:INFO:Importing untrained model
2024-12-05 21:48:19,968:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:48:19,982:INFO:Starting cross validation
2024-12-05 21:48:19,983:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:48:24,143:INFO:Calculating mean and std
2024-12-05 21:48:24,147:INFO:Creating metrics dataframe
2024-12-05 21:48:24,164:INFO:Uploading results into container
2024-12-05 21:48:24,166:INFO:Uploading model into container now
2024-12-05 21:48:24,169:INFO:_master_model_container: 12
2024-12-05 21:48:24,170:INFO:_display_container: 2
2024-12-05 21:48:24,172:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:48:24,172:INFO:create_model() successfully completed......................................
2024-12-05 21:48:24,372:INFO:SubProcess create_model() end ==================================
2024-12-05 21:48:24,372:INFO:Creating metrics dataframe
2024-12-05 21:48:24,384:INFO:Initializing Extreme Gradient Boosting
2024-12-05 21:48:24,385:INFO:Total runtime is 1.0727661649386089 minutes
2024-12-05 21:48:24,388:INFO:SubProcess create_model() called ==================================
2024-12-05 21:48:24,389:INFO:Initializing create_model()
2024-12-05 21:48:24,389:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1276C3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:48:24,389:INFO:Checking exceptions
2024-12-05 21:48:24,389:INFO:Importing libraries
2024-12-05 21:48:24,389:INFO:Copying training dataset
2024-12-05 21:48:24,433:INFO:Defining folds
2024-12-05 21:48:24,433:INFO:Declaring metric variables
2024-12-05 21:48:24,438:INFO:Importing untrained model
2024-12-05 21:48:24,445:INFO:Extreme Gradient Boosting Imported successfully
2024-12-05 21:48:24,457:INFO:Starting cross validation
2024-12-05 21:48:24,458:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:48:26,551:INFO:Calculating mean and std
2024-12-05 21:48:26,554:INFO:Creating metrics dataframe
2024-12-05 21:48:26,562:INFO:Uploading results into container
2024-12-05 21:48:26,563:INFO:Uploading model into container now
2024-12-05 21:48:26,564:INFO:_master_model_container: 13
2024-12-05 21:48:26,564:INFO:_display_container: 2
2024-12-05 21:48:26,566:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-12-05 21:48:26,566:INFO:create_model() successfully completed......................................
2024-12-05 21:48:26,733:INFO:SubProcess create_model() end ==================================
2024-12-05 21:48:26,733:INFO:Creating metrics dataframe
2024-12-05 21:48:26,766:INFO:Initializing Light Gradient Boosting Machine
2024-12-05 21:48:26,767:INFO:Total runtime is 1.1124731461207074 minutes
2024-12-05 21:48:26,777:INFO:SubProcess create_model() called ==================================
2024-12-05 21:48:26,777:INFO:Initializing create_model()
2024-12-05 21:48:26,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1276C3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:48:26,779:INFO:Checking exceptions
2024-12-05 21:48:26,779:INFO:Importing libraries
2024-12-05 21:48:26,779:INFO:Copying training dataset
2024-12-05 21:48:26,846:INFO:Defining folds
2024-12-05 21:48:26,846:INFO:Declaring metric variables
2024-12-05 21:48:26,856:INFO:Importing untrained model
2024-12-05 21:48:26,869:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-05 21:48:26,888:INFO:Starting cross validation
2024-12-05 21:48:26,891:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:48:29,188:INFO:Calculating mean and std
2024-12-05 21:48:29,191:INFO:Creating metrics dataframe
2024-12-05 21:48:29,199:INFO:Uploading results into container
2024-12-05 21:48:29,208:INFO:Uploading model into container now
2024-12-05 21:48:29,209:INFO:_master_model_container: 14
2024-12-05 21:48:29,209:INFO:_display_container: 2
2024-12-05 21:48:29,209:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-05 21:48:29,210:INFO:create_model() successfully completed......................................
2024-12-05 21:48:29,330:INFO:SubProcess create_model() end ==================================
2024-12-05 21:48:29,330:INFO:Creating metrics dataframe
2024-12-05 21:48:29,343:INFO:Initializing CatBoost Classifier
2024-12-05 21:48:29,343:INFO:Total runtime is 1.1553948720296225 minutes
2024-12-05 21:48:29,346:INFO:SubProcess create_model() called ==================================
2024-12-05 21:48:29,347:INFO:Initializing create_model()
2024-12-05 21:48:29,347:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1276C3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:48:29,347:INFO:Checking exceptions
2024-12-05 21:48:29,347:INFO:Importing libraries
2024-12-05 21:48:29,347:INFO:Copying training dataset
2024-12-05 21:48:29,366:INFO:Defining folds
2024-12-05 21:48:29,367:INFO:Declaring metric variables
2024-12-05 21:48:29,370:INFO:Importing untrained model
2024-12-05 21:48:29,374:INFO:CatBoost Classifier Imported successfully
2024-12-05 21:48:29,381:INFO:Starting cross validation
2024-12-05 21:48:29,381:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:49:24,379:INFO:Calculating mean and std
2024-12-05 21:49:24,381:INFO:Creating metrics dataframe
2024-12-05 21:49:24,391:INFO:Uploading results into container
2024-12-05 21:49:24,394:INFO:Uploading model into container now
2024-12-05 21:49:24,395:INFO:_master_model_container: 15
2024-12-05 21:49:24,395:INFO:_display_container: 2
2024-12-05 21:49:24,395:INFO:<catboost.core.CatBoostClassifier object at 0x0000023E143A1240>
2024-12-05 21:49:24,395:INFO:create_model() successfully completed......................................
2024-12-05 21:49:24,605:INFO:SubProcess create_model() end ==================================
2024-12-05 21:49:24,606:INFO:Creating metrics dataframe
2024-12-05 21:49:24,645:INFO:Initializing Dummy Classifier
2024-12-05 21:49:24,645:INFO:Total runtime is 2.0771029949188233 minutes
2024-12-05 21:49:24,654:INFO:SubProcess create_model() called ==================================
2024-12-05 21:49:24,655:INFO:Initializing create_model()
2024-12-05 21:49:24,655:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1276C3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:49:24,655:INFO:Checking exceptions
2024-12-05 21:49:24,656:INFO:Importing libraries
2024-12-05 21:49:24,656:INFO:Copying training dataset
2024-12-05 21:49:24,687:INFO:Defining folds
2024-12-05 21:49:24,687:INFO:Declaring metric variables
2024-12-05 21:49:24,692:INFO:Importing untrained model
2024-12-05 21:49:24,699:INFO:Dummy Classifier Imported successfully
2024-12-05 21:49:24,707:INFO:Starting cross validation
2024-12-05 21:49:24,709:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:49:25,006:INFO:Calculating mean and std
2024-12-05 21:49:25,013:INFO:Creating metrics dataframe
2024-12-05 21:49:25,031:INFO:Uploading results into container
2024-12-05 21:49:25,034:INFO:Uploading model into container now
2024-12-05 21:49:25,036:INFO:_master_model_container: 16
2024-12-05 21:49:25,036:INFO:_display_container: 2
2024-12-05 21:49:25,038:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-12-05 21:49:25,038:INFO:create_model() successfully completed......................................
2024-12-05 21:49:25,205:INFO:SubProcess create_model() end ==================================
2024-12-05 21:49:25,205:INFO:Creating metrics dataframe
2024-12-05 21:49:25,238:INFO:Initializing create_model()
2024-12-05 21:49:25,238:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:49:25,238:INFO:Checking exceptions
2024-12-05 21:49:25,241:INFO:Importing libraries
2024-12-05 21:49:25,242:INFO:Copying training dataset
2024-12-05 21:49:25,271:INFO:Defining folds
2024-12-05 21:49:25,271:INFO:Declaring metric variables
2024-12-05 21:49:25,271:INFO:Importing untrained model
2024-12-05 21:49:25,271:INFO:Declaring custom model
2024-12-05 21:49:25,272:INFO:Random Forest Classifier Imported successfully
2024-12-05 21:49:25,276:INFO:Cross validation set to False
2024-12-05 21:49:25,276:INFO:Fitting Model
2024-12-05 21:49:29,071:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 21:49:29,071:INFO:create_model() successfully completed......................................
2024-12-05 21:49:29,249:INFO:_master_model_container: 16
2024-12-05 21:49:29,250:INFO:_display_container: 2
2024-12-05 21:49:29,251:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 21:49:29,251:INFO:compare_models() successfully completed......................................
2024-12-05 21:49:29,307:INFO:Initializing predict_model()
2024-12-05 21:49:29,308:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E12C23BE0>)
2024-12-05 21:49:29,308:INFO:Checking exceptions
2024-12-05 21:49:29,308:INFO:Preloading libraries
2024-12-05 21:49:29,311:INFO:Set up data.
2024-12-05 21:49:29,460:INFO:Set up index.
2024-12-05 21:49:29,868:INFO:Initializing finalize_model()
2024-12-05 21:49:29,868:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-05 21:49:29,868:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 21:49:29,882:INFO:Initializing create_model()
2024-12-05 21:49:29,883:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:49:29,883:INFO:Checking exceptions
2024-12-05 21:49:29,885:INFO:Importing libraries
2024-12-05 21:49:29,885:INFO:Copying training dataset
2024-12-05 21:49:29,886:INFO:Defining folds
2024-12-05 21:49:29,886:INFO:Declaring metric variables
2024-12-05 21:49:29,886:INFO:Importing untrained model
2024-12-05 21:49:29,886:INFO:Declaring custom model
2024-12-05 21:49:29,887:INFO:Random Forest Classifier Imported successfully
2024-12-05 21:49:29,888:INFO:Cross validation set to False
2024-12-05 21:49:29,888:INFO:Fitting Model
2024-12-05 21:49:33,951:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-12-05 21:49:33,951:INFO:create_model() successfully completed......................................
2024-12-05 21:49:34,062:INFO:_master_model_container: 16
2024-12-05 21:49:34,062:INFO:_display_container: 3
2024-12-05 21:49:34,068:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-12-05 21:49:34,068:INFO:finalize_model() successfully completed......................................
2024-12-05 21:49:34,202:INFO:Initializing predict_model()
2024-12-05 21:49:34,202:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E147F80D0>)
2024-12-05 21:49:34,202:INFO:Checking exceptions
2024-12-05 21:49:34,203:INFO:Preloading libraries
2024-12-05 21:49:34,204:INFO:Set up data.
2024-12-05 21:49:34,239:INFO:Set up index.
2024-12-05 21:49:34,645:INFO:Initializing predict_model()
2024-12-05 21:49:34,645:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E147F80D0>)
2024-12-05 21:49:34,646:INFO:Checking exceptions
2024-12-05 21:49:34,646:INFO:Preloading libraries
2024-12-05 21:49:34,648:INFO:Set up data.
2024-12-05 21:49:34,708:INFO:Set up index.
2024-12-05 21:49:35,733:INFO:Initializing predict_model()
2024-12-05 21:49:35,734:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E138A0AF0>)
2024-12-05 21:49:35,734:INFO:Checking exceptions
2024-12-05 21:49:35,735:INFO:Preloading libraries
2024-12-05 21:49:35,741:INFO:Set up data.
2024-12-05 21:49:35,872:INFO:Set up index.
2024-12-05 21:49:36,706:INFO:Initializing plot_model()
2024-12-05 21:49:36,706:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E184A6B90>, system=True)
2024-12-05 21:49:36,707:INFO:Checking exceptions
2024-12-05 21:49:36,801:INFO:Preloading libraries
2024-12-05 21:49:36,950:INFO:Copying training dataset
2024-12-05 21:49:36,950:INFO:Plot type: feature
2024-12-05 21:49:36,951:WARNING:No coef_ found. Trying feature_importances_
2024-12-05 21:49:37,253:INFO:Visual Rendered Successfully
2024-12-05 21:49:37,376:INFO:plot_model() successfully completed......................................
2024-12-05 21:49:37,553:INFO:PyCaret ClassificationExperiment
2024-12-05 21:49:37,553:INFO:Logging name: clf-default-name
2024-12-05 21:49:37,553:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-05 21:49:37,553:INFO:version 3.3.2
2024-12-05 21:49:37,553:INFO:Initializing setup()
2024-12-05 21:49:37,553:INFO:self.USI: 7e4e
2024-12-05 21:49:37,553:INFO:self._variable_keys: {'_available_plots', 'logging_param', 'is_multiclass', 'fold_generator', 'y', 'data', 'fold_groups_param', 'memory', 'X', 'target_param', 'pipeline', 'y_train', '_ml_usecase', 'seed', 'X_train', 'html_param', 'USI', 'X_test', 'exp_name_log', 'exp_id', 'fix_imbalance', 'fold_shuffle_param', 'gpu_param', 'gpu_n_jobs_param', 'y_test', 'log_plots_param', 'idx', 'n_jobs_param'}
2024-12-05 21:49:37,553:INFO:Checking environment
2024-12-05 21:49:37,553:INFO:python_version: 3.10.11
2024-12-05 21:49:37,553:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-12-05 21:49:37,553:INFO:machine: AMD64
2024-12-05 21:49:37,553:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-05 21:49:37,557:INFO:Memory: svmem(total=17041244160, available=5107687424, percent=70.0, used=11933556736, free=5107687424)
2024-12-05 21:49:37,557:INFO:Physical Core: 4
2024-12-05 21:49:37,557:INFO:Logical Core: 8
2024-12-05 21:49:37,557:INFO:Checking libraries
2024-12-05 21:49:37,557:INFO:System:
2024-12-05 21:49:37,557:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-12-05 21:49:37,557:INFO:executable: c:\Users\diego\AppData\Local\Programs\Python\Python310\python.exe
2024-12-05 21:49:37,557:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-05 21:49:37,558:INFO:PyCaret required dependencies:
2024-12-05 21:49:37,558:INFO:                 pip: 24.2
2024-12-05 21:49:37,558:INFO:          setuptools: 65.5.0
2024-12-05 21:49:37,558:INFO:             pycaret: 3.3.2
2024-12-05 21:49:37,558:INFO:             IPython: 8.26.0
2024-12-05 21:49:37,558:INFO:          ipywidgets: 8.1.5
2024-12-05 21:49:37,558:INFO:                tqdm: 4.66.5
2024-12-05 21:49:37,558:INFO:               numpy: 1.26.4
2024-12-05 21:49:37,558:INFO:              pandas: 1.5.3
2024-12-05 21:49:37,558:INFO:              jinja2: 3.1.4
2024-12-05 21:49:37,558:INFO:               scipy: 1.11.4
2024-12-05 21:49:37,558:INFO:              joblib: 1.3.2
2024-12-05 21:49:37,558:INFO:             sklearn: 1.4.2
2024-12-05 21:49:37,558:INFO:                pyod: 2.0.2
2024-12-05 21:49:37,559:INFO:            imblearn: 0.12.3
2024-12-05 21:49:37,559:INFO:   category_encoders: 2.6.4
2024-12-05 21:49:37,559:INFO:            lightgbm: 4.5.0
2024-12-05 21:49:37,559:INFO:               numba: 0.60.0
2024-12-05 21:49:37,559:INFO:            requests: 2.32.3
2024-12-05 21:49:37,559:INFO:          matplotlib: 3.7.5
2024-12-05 21:49:37,559:INFO:          scikitplot: 0.3.7
2024-12-05 21:49:37,559:INFO:         yellowbrick: 1.5
2024-12-05 21:49:37,559:INFO:              plotly: 5.24.1
2024-12-05 21:49:37,559:INFO:    plotly-resampler: Not installed
2024-12-05 21:49:37,559:INFO:             kaleido: 0.2.1
2024-12-05 21:49:37,559:INFO:           schemdraw: 0.15
2024-12-05 21:49:37,559:INFO:         statsmodels: 0.14.4
2024-12-05 21:49:37,559:INFO:              sktime: 0.26.0
2024-12-05 21:49:37,559:INFO:               tbats: 1.1.3
2024-12-05 21:49:37,559:INFO:            pmdarima: 2.0.4
2024-12-05 21:49:37,559:INFO:              psutil: 6.0.0
2024-12-05 21:49:37,559:INFO:          markupsafe: 2.1.5
2024-12-05 21:49:37,560:INFO:             pickle5: Not installed
2024-12-05 21:49:37,560:INFO:         cloudpickle: 3.1.0
2024-12-05 21:49:37,560:INFO:         deprecation: 2.1.0
2024-12-05 21:49:37,560:INFO:              xxhash: 3.5.0
2024-12-05 21:49:37,560:INFO:           wurlitzer: Not installed
2024-12-05 21:49:37,560:INFO:PyCaret optional dependencies:
2024-12-05 21:49:37,560:INFO:                shap: 0.44.0
2024-12-05 21:49:37,560:INFO:           interpret: 0.5.0
2024-12-05 21:49:37,560:INFO:                umap: 0.5.6
2024-12-05 21:49:37,560:INFO:     ydata_profiling: 4.11.0
2024-12-05 21:49:37,560:INFO:  explainerdashboard: 0.4.7
2024-12-05 21:49:37,560:INFO:             autoviz: Not installed
2024-12-05 21:49:37,560:INFO:           fairlearn: 0.7.0
2024-12-05 21:49:37,560:INFO:          deepchecks: Not installed
2024-12-05 21:49:37,560:INFO:             xgboost: 2.1.2
2024-12-05 21:49:37,560:INFO:            catboost: 1.2.7
2024-12-05 21:49:37,561:INFO:              kmodes: Not installed
2024-12-05 21:49:37,561:INFO:             mlxtend: Not installed
2024-12-05 21:49:37,562:INFO:       statsforecast: Not installed
2024-12-05 21:49:37,562:INFO:        tune_sklearn: Not installed
2024-12-05 21:49:37,562:INFO:                 ray: Not installed
2024-12-05 21:49:37,562:INFO:            hyperopt: Not installed
2024-12-05 21:49:37,562:INFO:              optuna: 4.0.0
2024-12-05 21:49:37,562:INFO:               skopt: Not installed
2024-12-05 21:49:37,562:INFO:              mlflow: 2.18.0
2024-12-05 21:49:37,562:INFO:              gradio: Not installed
2024-12-05 21:49:37,562:INFO:             fastapi: Not installed
2024-12-05 21:49:37,562:INFO:             uvicorn: Not installed
2024-12-05 21:49:37,562:INFO:              m2cgen: Not installed
2024-12-05 21:49:37,562:INFO:           evidently: Not installed
2024-12-05 21:49:37,562:INFO:               fugue: Not installed
2024-12-05 21:49:37,562:INFO:           streamlit: 1.39.0
2024-12-05 21:49:37,562:INFO:             prophet: Not installed
2024-12-05 21:49:37,562:INFO:None
2024-12-05 21:49:37,562:INFO:Set up data.
2024-12-05 21:49:37,638:INFO:Set up folding strategy.
2024-12-05 21:49:37,639:INFO:Set up train/test split.
2024-12-05 21:49:37,680:INFO:Set up index.
2024-12-05 21:49:37,681:INFO:Assigning column types.
2024-12-05 21:49:37,711:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-05 21:49:37,780:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 21:49:37,781:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:49:37,817:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:49:37,820:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:49:37,906:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 21:49:37,907:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:49:37,942:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:49:37,945:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:49:37,945:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-05 21:49:37,998:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:49:38,029:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:49:38,033:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:49:38,081:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:49:38,121:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:49:38,125:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:49:38,125:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-05 21:49:38,206:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:49:38,209:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:49:38,287:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:49:38,290:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:49:38,291:INFO:Preparing preprocessing pipeline...
2024-12-05 21:49:38,294:INFO:Set up simple imputation.
2024-12-05 21:49:38,303:INFO:Set up encoding of categorical features.
2024-12-05 21:49:38,303:INFO:Set up feature normalization.
2024-12-05 21:49:38,626:INFO:Finished creating preprocessing pipeline.
2024-12-05 21:49:38,649:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\diego\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_ti...
                 TransformerWrapper(exclude=None, include=['wallet_address'],
                                    transformer=TargetEncoder(cols=['wallet_address'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-12-05 21:49:38,650:INFO:Creating final display dataframe.
2024-12-05 21:49:39,401:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            target
2                   Target type            Binary
3           Original data shape       (31007, 47)
4        Transformed data shape       (31007, 47)
5   Transformed train set shape       (21704, 47)
6    Transformed test set shape        (9303, 47)
7              Numeric features                45
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                    Normalize              True
16             Normalize method            zscore
17               Fold Generator   StratifiedKFold
18                  Fold Number                 5
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              7e4e
2024-12-05 21:49:39,515:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:49:39,518:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:49:39,631:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:49:39,637:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:49:39,639:INFO:setup() successfully completed in 2.17s...............
2024-12-05 21:49:39,709:INFO:Initializing compare_models()
2024-12-05 21:49:39,709:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-05 21:49:39,709:INFO:Checking exceptions
2024-12-05 21:49:39,727:INFO:Preparing display monitor
2024-12-05 21:49:39,757:INFO:Initializing Logistic Regression
2024-12-05 21:49:39,757:INFO:Total runtime is 0.0 minutes
2024-12-05 21:49:39,763:INFO:SubProcess create_model() called ==================================
2024-12-05 21:49:39,764:INFO:Initializing create_model()
2024-12-05 21:49:39,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12472B30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:49:39,764:INFO:Checking exceptions
2024-12-05 21:49:39,764:INFO:Importing libraries
2024-12-05 21:49:39,765:INFO:Copying training dataset
2024-12-05 21:49:39,801:INFO:Defining folds
2024-12-05 21:49:39,801:INFO:Declaring metric variables
2024-12-05 21:49:39,806:INFO:Importing untrained model
2024-12-05 21:49:39,811:INFO:Logistic Regression Imported successfully
2024-12-05 21:49:39,822:INFO:Starting cross validation
2024-12-05 21:49:39,824:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:49:40,914:INFO:Calculating mean and std
2024-12-05 21:49:40,936:INFO:Creating metrics dataframe
2024-12-05 21:49:40,941:INFO:Uploading results into container
2024-12-05 21:49:40,943:INFO:Uploading model into container now
2024-12-05 21:49:40,943:INFO:_master_model_container: 1
2024-12-05 21:49:40,943:INFO:_display_container: 2
2024-12-05 21:49:40,944:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-05 21:49:40,944:INFO:create_model() successfully completed......................................
2024-12-05 21:49:41,133:INFO:SubProcess create_model() end ==================================
2024-12-05 21:49:41,134:INFO:Creating metrics dataframe
2024-12-05 21:49:41,151:INFO:Initializing K Neighbors Classifier
2024-12-05 21:49:41,151:INFO:Total runtime is 0.023219887415568033 minutes
2024-12-05 21:49:41,155:INFO:SubProcess create_model() called ==================================
2024-12-05 21:49:41,155:INFO:Initializing create_model()
2024-12-05 21:49:41,155:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12472B30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:49:41,155:INFO:Checking exceptions
2024-12-05 21:49:41,156:INFO:Importing libraries
2024-12-05 21:49:41,156:INFO:Copying training dataset
2024-12-05 21:49:41,217:INFO:Defining folds
2024-12-05 21:49:41,218:INFO:Declaring metric variables
2024-12-05 21:49:41,225:INFO:Importing untrained model
2024-12-05 21:49:41,234:INFO:K Neighbors Classifier Imported successfully
2024-12-05 21:49:41,248:INFO:Starting cross validation
2024-12-05 21:49:41,252:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:49:44,065:INFO:Calculating mean and std
2024-12-05 21:49:44,070:INFO:Creating metrics dataframe
2024-12-05 21:49:44,084:INFO:Uploading results into container
2024-12-05 21:49:44,087:INFO:Uploading model into container now
2024-12-05 21:49:44,088:INFO:_master_model_container: 2
2024-12-05 21:49:44,088:INFO:_display_container: 2
2024-12-05 21:49:44,089:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-05 21:49:44,090:INFO:create_model() successfully completed......................................
2024-12-05 21:49:44,344:INFO:SubProcess create_model() end ==================================
2024-12-05 21:49:44,344:INFO:Creating metrics dataframe
2024-12-05 21:49:44,381:INFO:Initializing Naive Bayes
2024-12-05 21:49:44,381:INFO:Total runtime is 0.07705337206522624 minutes
2024-12-05 21:49:44,386:INFO:SubProcess create_model() called ==================================
2024-12-05 21:49:44,386:INFO:Initializing create_model()
2024-12-05 21:49:44,386:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12472B30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:49:44,387:INFO:Checking exceptions
2024-12-05 21:49:44,387:INFO:Importing libraries
2024-12-05 21:49:44,387:INFO:Copying training dataset
2024-12-05 21:49:44,417:INFO:Defining folds
2024-12-05 21:49:44,418:INFO:Declaring metric variables
2024-12-05 21:49:44,423:INFO:Importing untrained model
2024-12-05 21:49:44,428:INFO:Naive Bayes Imported successfully
2024-12-05 21:49:44,438:INFO:Starting cross validation
2024-12-05 21:49:44,440:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:49:45,119:INFO:Calculating mean and std
2024-12-05 21:49:45,121:INFO:Creating metrics dataframe
2024-12-05 21:49:45,135:INFO:Uploading results into container
2024-12-05 21:49:45,136:INFO:Uploading model into container now
2024-12-05 21:49:45,137:INFO:_master_model_container: 3
2024-12-05 21:49:45,138:INFO:_display_container: 2
2024-12-05 21:49:45,138:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-05 21:49:45,138:INFO:create_model() successfully completed......................................
2024-12-05 21:49:45,281:INFO:SubProcess create_model() end ==================================
2024-12-05 21:49:45,282:INFO:Creating metrics dataframe
2024-12-05 21:49:45,313:INFO:Initializing Decision Tree Classifier
2024-12-05 21:49:45,313:INFO:Total runtime is 0.09258758227030436 minutes
2024-12-05 21:49:45,323:INFO:SubProcess create_model() called ==================================
2024-12-05 21:49:45,324:INFO:Initializing create_model()
2024-12-05 21:49:45,325:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12472B30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:49:45,325:INFO:Checking exceptions
2024-12-05 21:49:45,325:INFO:Importing libraries
2024-12-05 21:49:45,326:INFO:Copying training dataset
2024-12-05 21:49:45,415:INFO:Defining folds
2024-12-05 21:49:45,416:INFO:Declaring metric variables
2024-12-05 21:49:45,428:INFO:Importing untrained model
2024-12-05 21:49:45,440:INFO:Decision Tree Classifier Imported successfully
2024-12-05 21:49:45,461:INFO:Starting cross validation
2024-12-05 21:49:45,464:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:49:47,760:INFO:Calculating mean and std
2024-12-05 21:49:47,767:INFO:Creating metrics dataframe
2024-12-05 21:49:47,781:INFO:Uploading results into container
2024-12-05 21:49:47,785:INFO:Uploading model into container now
2024-12-05 21:49:47,787:INFO:_master_model_container: 4
2024-12-05 21:49:47,788:INFO:_display_container: 2
2024-12-05 21:49:47,789:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-12-05 21:49:47,790:INFO:create_model() successfully completed......................................
2024-12-05 21:49:48,014:INFO:SubProcess create_model() end ==================================
2024-12-05 21:49:48,015:INFO:Creating metrics dataframe
2024-12-05 21:49:48,030:INFO:Initializing SVM - Linear Kernel
2024-12-05 21:49:48,030:INFO:Total runtime is 0.13787619670232137 minutes
2024-12-05 21:49:48,037:INFO:SubProcess create_model() called ==================================
2024-12-05 21:49:48,037:INFO:Initializing create_model()
2024-12-05 21:49:48,037:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12472B30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:49:48,037:INFO:Checking exceptions
2024-12-05 21:49:48,037:INFO:Importing libraries
2024-12-05 21:49:48,038:INFO:Copying training dataset
2024-12-05 21:49:48,072:INFO:Defining folds
2024-12-05 21:49:48,072:INFO:Declaring metric variables
2024-12-05 21:49:48,080:INFO:Importing untrained model
2024-12-05 21:49:48,086:INFO:SVM - Linear Kernel Imported successfully
2024-12-05 21:49:48,097:INFO:Starting cross validation
2024-12-05 21:49:48,101:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:49:49,434:INFO:Calculating mean and std
2024-12-05 21:49:49,438:INFO:Creating metrics dataframe
2024-12-05 21:49:49,455:INFO:Uploading results into container
2024-12-05 21:49:49,459:INFO:Uploading model into container now
2024-12-05 21:49:49,461:INFO:_master_model_container: 5
2024-12-05 21:49:49,462:INFO:_display_container: 2
2024-12-05 21:49:49,465:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-05 21:49:49,466:INFO:create_model() successfully completed......................................
2024-12-05 21:49:49,703:INFO:SubProcess create_model() end ==================================
2024-12-05 21:49:49,703:INFO:Creating metrics dataframe
2024-12-05 21:49:49,715:INFO:Initializing Ridge Classifier
2024-12-05 21:49:49,715:INFO:Total runtime is 0.16595381895701092 minutes
2024-12-05 21:49:49,721:INFO:SubProcess create_model() called ==================================
2024-12-05 21:49:49,721:INFO:Initializing create_model()
2024-12-05 21:49:49,721:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12472B30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:49:49,721:INFO:Checking exceptions
2024-12-05 21:49:49,721:INFO:Importing libraries
2024-12-05 21:49:49,721:INFO:Copying training dataset
2024-12-05 21:49:49,752:INFO:Defining folds
2024-12-05 21:49:49,752:INFO:Declaring metric variables
2024-12-05 21:49:49,757:INFO:Importing untrained model
2024-12-05 21:49:49,762:INFO:Ridge Classifier Imported successfully
2024-12-05 21:49:49,771:INFO:Starting cross validation
2024-12-05 21:49:49,772:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:49:50,494:INFO:Calculating mean and std
2024-12-05 21:49:50,498:INFO:Creating metrics dataframe
2024-12-05 21:49:50,516:INFO:Uploading results into container
2024-12-05 21:49:50,518:INFO:Uploading model into container now
2024-12-05 21:49:50,520:INFO:_master_model_container: 6
2024-12-05 21:49:50,520:INFO:_display_container: 2
2024-12-05 21:49:50,521:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-12-05 21:49:50,521:INFO:create_model() successfully completed......................................
2024-12-05 21:49:50,761:INFO:SubProcess create_model() end ==================================
2024-12-05 21:49:50,761:INFO:Creating metrics dataframe
2024-12-05 21:49:50,776:INFO:Initializing Random Forest Classifier
2024-12-05 21:49:50,776:INFO:Total runtime is 0.1836449464162191 minutes
2024-12-05 21:49:50,780:INFO:SubProcess create_model() called ==================================
2024-12-05 21:49:50,781:INFO:Initializing create_model()
2024-12-05 21:49:50,781:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12472B30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:49:50,781:INFO:Checking exceptions
2024-12-05 21:49:50,781:INFO:Importing libraries
2024-12-05 21:49:50,781:INFO:Copying training dataset
2024-12-05 21:49:50,809:INFO:Defining folds
2024-12-05 21:49:50,809:INFO:Declaring metric variables
2024-12-05 21:49:50,814:INFO:Importing untrained model
2024-12-05 21:49:50,819:INFO:Random Forest Classifier Imported successfully
2024-12-05 21:49:50,830:INFO:Starting cross validation
2024-12-05 21:49:50,831:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:49:59,533:INFO:Calculating mean and std
2024-12-05 21:49:59,543:INFO:Creating metrics dataframe
2024-12-05 21:49:59,575:INFO:Uploading results into container
2024-12-05 21:49:59,578:INFO:Uploading model into container now
2024-12-05 21:49:59,580:INFO:_master_model_container: 7
2024-12-05 21:49:59,580:INFO:_display_container: 2
2024-12-05 21:49:59,583:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 21:49:59,584:INFO:create_model() successfully completed......................................
2024-12-05 21:49:59,854:INFO:SubProcess create_model() end ==================================
2024-12-05 21:49:59,854:INFO:Creating metrics dataframe
2024-12-05 21:49:59,879:INFO:Initializing Quadratic Discriminant Analysis
2024-12-05 21:49:59,880:INFO:Total runtime is 0.33538413445154824 minutes
2024-12-05 21:49:59,888:INFO:SubProcess create_model() called ==================================
2024-12-05 21:49:59,889:INFO:Initializing create_model()
2024-12-05 21:49:59,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12472B30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:49:59,889:INFO:Checking exceptions
2024-12-05 21:49:59,889:INFO:Importing libraries
2024-12-05 21:49:59,890:INFO:Copying training dataset
2024-12-05 21:49:59,938:INFO:Defining folds
2024-12-05 21:49:59,938:INFO:Declaring metric variables
2024-12-05 21:49:59,946:INFO:Importing untrained model
2024-12-05 21:49:59,955:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-05 21:49:59,971:INFO:Starting cross validation
2024-12-05 21:49:59,976:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:50:00,819:INFO:Calculating mean and std
2024-12-05 21:50:00,825:INFO:Creating metrics dataframe
2024-12-05 21:50:00,839:INFO:Uploading results into container
2024-12-05 21:50:00,842:INFO:Uploading model into container now
2024-12-05 21:50:00,845:INFO:_master_model_container: 8
2024-12-05 21:50:00,846:INFO:_display_container: 2
2024-12-05 21:50:00,847:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-05 21:50:00,848:INFO:create_model() successfully completed......................................
2024-12-05 21:50:01,099:INFO:SubProcess create_model() end ==================================
2024-12-05 21:50:01,100:INFO:Creating metrics dataframe
2024-12-05 21:50:01,135:INFO:Initializing Ada Boost Classifier
2024-12-05 21:50:01,136:INFO:Total runtime is 0.3563136537869771 minutes
2024-12-05 21:50:01,146:INFO:SubProcess create_model() called ==================================
2024-12-05 21:50:01,147:INFO:Initializing create_model()
2024-12-05 21:50:01,148:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12472B30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:50:01,148:INFO:Checking exceptions
2024-12-05 21:50:01,149:INFO:Importing libraries
2024-12-05 21:50:01,149:INFO:Copying training dataset
2024-12-05 21:50:01,214:INFO:Defining folds
2024-12-05 21:50:01,215:INFO:Declaring metric variables
2024-12-05 21:50:01,228:INFO:Importing untrained model
2024-12-05 21:50:01,241:INFO:Ada Boost Classifier Imported successfully
2024-12-05 21:50:01,257:INFO:Starting cross validation
2024-12-05 21:50:01,260:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:50:01,608:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:50:01,629:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:50:01,629:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:50:01,636:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:50:01,637:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:50:07,158:INFO:Calculating mean and std
2024-12-05 21:50:07,162:INFO:Creating metrics dataframe
2024-12-05 21:50:07,176:INFO:Uploading results into container
2024-12-05 21:50:07,179:INFO:Uploading model into container now
2024-12-05 21:50:07,180:INFO:_master_model_container: 9
2024-12-05 21:50:07,181:INFO:_display_container: 2
2024-12-05 21:50:07,181:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-12-05 21:50:07,181:INFO:create_model() successfully completed......................................
2024-12-05 21:50:07,449:INFO:SubProcess create_model() end ==================================
2024-12-05 21:50:07,449:INFO:Creating metrics dataframe
2024-12-05 21:50:07,469:INFO:Initializing Gradient Boosting Classifier
2024-12-05 21:50:07,469:INFO:Total runtime is 0.46185496250788366 minutes
2024-12-05 21:50:07,476:INFO:SubProcess create_model() called ==================================
2024-12-05 21:50:07,476:INFO:Initializing create_model()
2024-12-05 21:50:07,476:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12472B30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:50:07,476:INFO:Checking exceptions
2024-12-05 21:50:07,477:INFO:Importing libraries
2024-12-05 21:50:07,477:INFO:Copying training dataset
2024-12-05 21:50:07,514:INFO:Defining folds
2024-12-05 21:50:07,515:INFO:Declaring metric variables
2024-12-05 21:50:07,522:INFO:Importing untrained model
2024-12-05 21:50:07,528:INFO:Gradient Boosting Classifier Imported successfully
2024-12-05 21:50:07,541:INFO:Starting cross validation
2024-12-05 21:50:07,543:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:50:32,980:INFO:Calculating mean and std
2024-12-05 21:50:32,982:INFO:Creating metrics dataframe
2024-12-05 21:50:32,987:INFO:Uploading results into container
2024-12-05 21:50:32,987:INFO:Uploading model into container now
2024-12-05 21:50:32,988:INFO:_master_model_container: 10
2024-12-05 21:50:32,988:INFO:_display_container: 2
2024-12-05 21:50:32,989:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-05 21:50:32,989:INFO:create_model() successfully completed......................................
2024-12-05 21:50:33,104:INFO:SubProcess create_model() end ==================================
2024-12-05 21:50:33,104:INFO:Creating metrics dataframe
2024-12-05 21:50:33,120:INFO:Initializing Linear Discriminant Analysis
2024-12-05 21:50:33,120:INFO:Total runtime is 0.8893810788790384 minutes
2024-12-05 21:50:33,125:INFO:SubProcess create_model() called ==================================
2024-12-05 21:50:33,126:INFO:Initializing create_model()
2024-12-05 21:50:33,126:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12472B30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:50:33,126:INFO:Checking exceptions
2024-12-05 21:50:33,126:INFO:Importing libraries
2024-12-05 21:50:33,126:INFO:Copying training dataset
2024-12-05 21:50:33,155:INFO:Defining folds
2024-12-05 21:50:33,156:INFO:Declaring metric variables
2024-12-05 21:50:33,162:INFO:Importing untrained model
2024-12-05 21:50:33,169:INFO:Linear Discriminant Analysis Imported successfully
2024-12-05 21:50:33,179:INFO:Starting cross validation
2024-12-05 21:50:33,180:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:50:34,617:INFO:Calculating mean and std
2024-12-05 21:50:34,623:INFO:Creating metrics dataframe
2024-12-05 21:50:34,646:INFO:Uploading results into container
2024-12-05 21:50:34,650:INFO:Uploading model into container now
2024-12-05 21:50:34,651:INFO:_master_model_container: 11
2024-12-05 21:50:34,652:INFO:_display_container: 2
2024-12-05 21:50:34,653:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-05 21:50:34,654:INFO:create_model() successfully completed......................................
2024-12-05 21:50:34,853:INFO:SubProcess create_model() end ==================================
2024-12-05 21:50:34,854:INFO:Creating metrics dataframe
2024-12-05 21:50:34,873:INFO:Initializing Extra Trees Classifier
2024-12-05 21:50:34,873:INFO:Total runtime is 0.918595524628957 minutes
2024-12-05 21:50:34,877:INFO:SubProcess create_model() called ==================================
2024-12-05 21:50:34,877:INFO:Initializing create_model()
2024-12-05 21:50:34,878:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12472B30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:50:34,878:INFO:Checking exceptions
2024-12-05 21:50:34,878:INFO:Importing libraries
2024-12-05 21:50:34,878:INFO:Copying training dataset
2024-12-05 21:50:34,911:INFO:Defining folds
2024-12-05 21:50:34,911:INFO:Declaring metric variables
2024-12-05 21:50:34,917:INFO:Importing untrained model
2024-12-05 21:50:34,924:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:50:34,931:INFO:Starting cross validation
2024-12-05 21:50:34,934:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:50:39,342:INFO:Calculating mean and std
2024-12-05 21:50:39,351:INFO:Creating metrics dataframe
2024-12-05 21:50:39,369:INFO:Uploading results into container
2024-12-05 21:50:39,371:INFO:Uploading model into container now
2024-12-05 21:50:39,373:INFO:_master_model_container: 12
2024-12-05 21:50:39,373:INFO:_display_container: 2
2024-12-05 21:50:39,375:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:50:39,377:INFO:create_model() successfully completed......................................
2024-12-05 21:50:39,509:INFO:SubProcess create_model() end ==================================
2024-12-05 21:50:39,510:INFO:Creating metrics dataframe
2024-12-05 21:50:39,521:INFO:Initializing Extreme Gradient Boosting
2024-12-05 21:50:39,522:INFO:Total runtime is 0.9960707942644754 minutes
2024-12-05 21:50:39,524:INFO:SubProcess create_model() called ==================================
2024-12-05 21:50:39,525:INFO:Initializing create_model()
2024-12-05 21:50:39,525:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12472B30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:50:39,525:INFO:Checking exceptions
2024-12-05 21:50:39,525:INFO:Importing libraries
2024-12-05 21:50:39,525:INFO:Copying training dataset
2024-12-05 21:50:39,545:INFO:Defining folds
2024-12-05 21:50:39,545:INFO:Declaring metric variables
2024-12-05 21:50:39,549:INFO:Importing untrained model
2024-12-05 21:50:39,554:INFO:Extreme Gradient Boosting Imported successfully
2024-12-05 21:50:39,561:INFO:Starting cross validation
2024-12-05 21:50:39,563:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:50:42,291:INFO:Calculating mean and std
2024-12-05 21:50:42,292:INFO:Creating metrics dataframe
2024-12-05 21:50:42,297:INFO:Uploading results into container
2024-12-05 21:50:42,298:INFO:Uploading model into container now
2024-12-05 21:50:42,299:INFO:_master_model_container: 13
2024-12-05 21:50:42,299:INFO:_display_container: 2
2024-12-05 21:50:42,300:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-12-05 21:50:42,301:INFO:create_model() successfully completed......................................
2024-12-05 21:50:42,418:INFO:SubProcess create_model() end ==================================
2024-12-05 21:50:42,418:INFO:Creating metrics dataframe
2024-12-05 21:50:42,435:INFO:Initializing Light Gradient Boosting Machine
2024-12-05 21:50:42,435:INFO:Total runtime is 1.0446210026741027 minutes
2024-12-05 21:50:42,440:INFO:SubProcess create_model() called ==================================
2024-12-05 21:50:42,441:INFO:Initializing create_model()
2024-12-05 21:50:42,441:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12472B30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:50:42,441:INFO:Checking exceptions
2024-12-05 21:50:42,441:INFO:Importing libraries
2024-12-05 21:50:42,442:INFO:Copying training dataset
2024-12-05 21:50:42,469:INFO:Defining folds
2024-12-05 21:50:42,469:INFO:Declaring metric variables
2024-12-05 21:50:42,475:INFO:Importing untrained model
2024-12-05 21:50:42,479:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-05 21:50:42,488:INFO:Starting cross validation
2024-12-05 21:50:42,491:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:50:45,944:INFO:Calculating mean and std
2024-12-05 21:50:45,945:INFO:Creating metrics dataframe
2024-12-05 21:50:45,950:INFO:Uploading results into container
2024-12-05 21:50:45,951:INFO:Uploading model into container now
2024-12-05 21:50:45,951:INFO:_master_model_container: 14
2024-12-05 21:50:45,951:INFO:_display_container: 2
2024-12-05 21:50:45,952:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-05 21:50:45,952:INFO:create_model() successfully completed......................................
2024-12-05 21:50:46,057:INFO:SubProcess create_model() end ==================================
2024-12-05 21:50:46,057:INFO:Creating metrics dataframe
2024-12-05 21:50:46,069:INFO:Initializing CatBoost Classifier
2024-12-05 21:50:46,070:INFO:Total runtime is 1.1052176117897032 minutes
2024-12-05 21:50:46,073:INFO:SubProcess create_model() called ==================================
2024-12-05 21:50:46,074:INFO:Initializing create_model()
2024-12-05 21:50:46,074:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12472B30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:50:46,074:INFO:Checking exceptions
2024-12-05 21:50:46,074:INFO:Importing libraries
2024-12-05 21:50:46,074:INFO:Copying training dataset
2024-12-05 21:50:46,096:INFO:Defining folds
2024-12-05 21:50:46,097:INFO:Declaring metric variables
2024-12-05 21:50:46,102:INFO:Importing untrained model
2024-12-05 21:50:46,147:INFO:CatBoost Classifier Imported successfully
2024-12-05 21:50:46,156:INFO:Starting cross validation
2024-12-05 21:50:46,158:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:51:26,647:INFO:Calculating mean and std
2024-12-05 21:51:26,651:INFO:Creating metrics dataframe
2024-12-05 21:51:26,664:INFO:Uploading results into container
2024-12-05 21:51:26,666:INFO:Uploading model into container now
2024-12-05 21:51:26,668:INFO:_master_model_container: 15
2024-12-05 21:51:26,668:INFO:_display_container: 2
2024-12-05 21:51:26,668:INFO:<catboost.core.CatBoostClassifier object at 0x0000023E144649A0>
2024-12-05 21:51:26,668:INFO:create_model() successfully completed......................................
2024-12-05 21:51:26,889:INFO:SubProcess create_model() end ==================================
2024-12-05 21:51:26,889:INFO:Creating metrics dataframe
2024-12-05 21:51:26,948:INFO:Initializing Dummy Classifier
2024-12-05 21:51:26,951:INFO:Total runtime is 1.7865521868069965 minutes
2024-12-05 21:51:26,969:INFO:SubProcess create_model() called ==================================
2024-12-05 21:51:26,971:INFO:Initializing create_model()
2024-12-05 21:51:26,972:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12472B30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:51:26,972:INFO:Checking exceptions
2024-12-05 21:51:26,973:INFO:Importing libraries
2024-12-05 21:51:26,973:INFO:Copying training dataset
2024-12-05 21:51:27,057:INFO:Defining folds
2024-12-05 21:51:27,057:INFO:Declaring metric variables
2024-12-05 21:51:27,066:INFO:Importing untrained model
2024-12-05 21:51:27,071:INFO:Dummy Classifier Imported successfully
2024-12-05 21:51:27,086:INFO:Starting cross validation
2024-12-05 21:51:27,087:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:51:27,674:INFO:Calculating mean and std
2024-12-05 21:51:27,676:INFO:Creating metrics dataframe
2024-12-05 21:51:27,680:INFO:Uploading results into container
2024-12-05 21:51:27,681:INFO:Uploading model into container now
2024-12-05 21:51:27,681:INFO:_master_model_container: 16
2024-12-05 21:51:27,682:INFO:_display_container: 2
2024-12-05 21:51:27,682:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-12-05 21:51:27,682:INFO:create_model() successfully completed......................................
2024-12-05 21:51:27,783:INFO:SubProcess create_model() end ==================================
2024-12-05 21:51:27,783:INFO:Creating metrics dataframe
2024-12-05 21:51:27,810:INFO:Initializing create_model()
2024-12-05 21:51:27,810:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:51:27,810:INFO:Checking exceptions
2024-12-05 21:51:27,812:INFO:Importing libraries
2024-12-05 21:51:27,812:INFO:Copying training dataset
2024-12-05 21:51:27,836:INFO:Defining folds
2024-12-05 21:51:27,837:INFO:Declaring metric variables
2024-12-05 21:51:27,837:INFO:Importing untrained model
2024-12-05 21:51:27,837:INFO:Declaring custom model
2024-12-05 21:51:27,838:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:51:27,840:INFO:Cross validation set to False
2024-12-05 21:51:27,840:INFO:Fitting Model
2024-12-05 21:51:28,705:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:51:28,705:INFO:create_model() successfully completed......................................
2024-12-05 21:51:29,034:INFO:_master_model_container: 16
2024-12-05 21:51:29,035:INFO:_display_container: 2
2024-12-05 21:51:29,035:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:51:29,036:INFO:compare_models() successfully completed......................................
2024-12-05 21:51:29,079:INFO:Initializing predict_model()
2024-12-05 21:51:29,079:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E149B5630>)
2024-12-05 21:51:29,079:INFO:Checking exceptions
2024-12-05 21:51:29,079:INFO:Preloading libraries
2024-12-05 21:51:29,083:INFO:Set up data.
2024-12-05 21:51:29,131:INFO:Set up index.
2024-12-05 21:51:29,588:INFO:Initializing finalize_model()
2024-12-05 21:51:29,588:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-05 21:51:29,589:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:51:29,609:INFO:Initializing create_model()
2024-12-05 21:51:29,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:51:29,609:INFO:Checking exceptions
2024-12-05 21:51:29,611:INFO:Importing libraries
2024-12-05 21:51:29,612:INFO:Copying training dataset
2024-12-05 21:51:29,614:INFO:Defining folds
2024-12-05 21:51:29,614:INFO:Declaring metric variables
2024-12-05 21:51:29,614:INFO:Importing untrained model
2024-12-05 21:51:29,614:INFO:Declaring custom model
2024-12-05 21:51:29,615:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:51:29,617:INFO:Cross validation set to False
2024-12-05 21:51:29,617:INFO:Fitting Model
2024-12-05 21:51:31,146:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 21:51:31,147:INFO:create_model() successfully completed......................................
2024-12-05 21:51:31,325:INFO:_master_model_container: 16
2024-12-05 21:51:31,325:INFO:_display_container: 3
2024-12-05 21:51:31,341:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 21:51:31,341:INFO:finalize_model() successfully completed......................................
2024-12-05 21:51:31,505:INFO:Initializing predict_model()
2024-12-05 21:51:31,506:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E149B5630>)
2024-12-05 21:51:31,506:INFO:Checking exceptions
2024-12-05 21:51:31,520:INFO:Preloading libraries
2024-12-05 21:51:31,525:INFO:Set up data.
2024-12-05 21:51:31,576:INFO:Set up index.
2024-12-05 21:51:32,047:INFO:Initializing predict_model()
2024-12-05 21:51:32,047:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E184D91B0>)
2024-12-05 21:51:32,047:INFO:Checking exceptions
2024-12-05 21:51:32,048:INFO:Preloading libraries
2024-12-05 21:51:32,050:INFO:Set up data.
2024-12-05 21:51:32,087:INFO:Set up index.
2024-12-05 21:51:32,819:INFO:Initializing predict_model()
2024-12-05 21:51:32,819:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E14B03400>)
2024-12-05 21:51:32,819:INFO:Checking exceptions
2024-12-05 21:51:32,819:INFO:Preloading libraries
2024-12-05 21:51:32,822:INFO:Set up data.
2024-12-05 21:51:32,881:INFO:Set up index.
2024-12-05 21:51:33,620:INFO:Initializing plot_model()
2024-12-05 21:51:33,620:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E145CE080>, system=True)
2024-12-05 21:51:33,621:INFO:Checking exceptions
2024-12-05 21:51:33,671:INFO:Preloading libraries
2024-12-05 21:51:33,835:INFO:Copying training dataset
2024-12-05 21:51:33,835:INFO:Plot type: feature
2024-12-05 21:51:33,835:WARNING:No coef_ found. Trying feature_importances_
2024-12-05 21:51:34,101:INFO:Visual Rendered Successfully
2024-12-05 21:51:34,185:INFO:plot_model() successfully completed......................................
2024-12-05 21:51:34,329:INFO:PyCaret ClassificationExperiment
2024-12-05 21:51:34,329:INFO:Logging name: clf-default-name
2024-12-05 21:51:34,330:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-05 21:51:34,330:INFO:version 3.3.2
2024-12-05 21:51:34,330:INFO:Initializing setup()
2024-12-05 21:51:34,330:INFO:self.USI: 1c1f
2024-12-05 21:51:34,330:INFO:self._variable_keys: {'_available_plots', 'logging_param', 'is_multiclass', 'fold_generator', 'y', 'data', 'fold_groups_param', 'memory', 'X', 'target_param', 'pipeline', 'y_train', '_ml_usecase', 'seed', 'X_train', 'html_param', 'USI', 'X_test', 'exp_name_log', 'exp_id', 'fix_imbalance', 'fold_shuffle_param', 'gpu_param', 'gpu_n_jobs_param', 'y_test', 'log_plots_param', 'idx', 'n_jobs_param'}
2024-12-05 21:51:34,330:INFO:Checking environment
2024-12-05 21:51:34,330:INFO:python_version: 3.10.11
2024-12-05 21:51:34,330:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-12-05 21:51:34,330:INFO:machine: AMD64
2024-12-05 21:51:34,330:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-05 21:51:34,333:INFO:Memory: svmem(total=17041244160, available=5130338304, percent=69.9, used=11910905856, free=5130338304)
2024-12-05 21:51:34,333:INFO:Physical Core: 4
2024-12-05 21:51:34,333:INFO:Logical Core: 8
2024-12-05 21:51:34,333:INFO:Checking libraries
2024-12-05 21:51:34,333:INFO:System:
2024-12-05 21:51:34,333:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-12-05 21:51:34,333:INFO:executable: c:\Users\diego\AppData\Local\Programs\Python\Python310\python.exe
2024-12-05 21:51:34,333:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-05 21:51:34,333:INFO:PyCaret required dependencies:
2024-12-05 21:51:34,333:INFO:                 pip: 24.2
2024-12-05 21:51:34,334:INFO:          setuptools: 65.5.0
2024-12-05 21:51:34,334:INFO:             pycaret: 3.3.2
2024-12-05 21:51:34,334:INFO:             IPython: 8.26.0
2024-12-05 21:51:34,334:INFO:          ipywidgets: 8.1.5
2024-12-05 21:51:34,334:INFO:                tqdm: 4.66.5
2024-12-05 21:51:34,334:INFO:               numpy: 1.26.4
2024-12-05 21:51:34,334:INFO:              pandas: 1.5.3
2024-12-05 21:51:34,334:INFO:              jinja2: 3.1.4
2024-12-05 21:51:34,334:INFO:               scipy: 1.11.4
2024-12-05 21:51:34,334:INFO:              joblib: 1.3.2
2024-12-05 21:51:34,334:INFO:             sklearn: 1.4.2
2024-12-05 21:51:34,334:INFO:                pyod: 2.0.2
2024-12-05 21:51:34,334:INFO:            imblearn: 0.12.3
2024-12-05 21:51:34,334:INFO:   category_encoders: 2.6.4
2024-12-05 21:51:34,334:INFO:            lightgbm: 4.5.0
2024-12-05 21:51:34,334:INFO:               numba: 0.60.0
2024-12-05 21:51:34,334:INFO:            requests: 2.32.3
2024-12-05 21:51:34,334:INFO:          matplotlib: 3.7.5
2024-12-05 21:51:34,334:INFO:          scikitplot: 0.3.7
2024-12-05 21:51:34,334:INFO:         yellowbrick: 1.5
2024-12-05 21:51:34,334:INFO:              plotly: 5.24.1
2024-12-05 21:51:34,334:INFO:    plotly-resampler: Not installed
2024-12-05 21:51:34,334:INFO:             kaleido: 0.2.1
2024-12-05 21:51:34,334:INFO:           schemdraw: 0.15
2024-12-05 21:51:34,334:INFO:         statsmodels: 0.14.4
2024-12-05 21:51:34,334:INFO:              sktime: 0.26.0
2024-12-05 21:51:34,334:INFO:               tbats: 1.1.3
2024-12-05 21:51:34,334:INFO:            pmdarima: 2.0.4
2024-12-05 21:51:34,334:INFO:              psutil: 6.0.0
2024-12-05 21:51:34,334:INFO:          markupsafe: 2.1.5
2024-12-05 21:51:34,335:INFO:             pickle5: Not installed
2024-12-05 21:51:34,335:INFO:         cloudpickle: 3.1.0
2024-12-05 21:51:34,335:INFO:         deprecation: 2.1.0
2024-12-05 21:51:34,335:INFO:              xxhash: 3.5.0
2024-12-05 21:51:34,335:INFO:           wurlitzer: Not installed
2024-12-05 21:51:34,335:INFO:PyCaret optional dependencies:
2024-12-05 21:51:34,335:INFO:                shap: 0.44.0
2024-12-05 21:51:34,335:INFO:           interpret: 0.5.0
2024-12-05 21:51:34,335:INFO:                umap: 0.5.6
2024-12-05 21:51:34,335:INFO:     ydata_profiling: 4.11.0
2024-12-05 21:51:34,335:INFO:  explainerdashboard: 0.4.7
2024-12-05 21:51:34,335:INFO:             autoviz: Not installed
2024-12-05 21:51:34,335:INFO:           fairlearn: 0.7.0
2024-12-05 21:51:34,335:INFO:          deepchecks: Not installed
2024-12-05 21:51:34,335:INFO:             xgboost: 2.1.2
2024-12-05 21:51:34,335:INFO:            catboost: 1.2.7
2024-12-05 21:51:34,335:INFO:              kmodes: Not installed
2024-12-05 21:51:34,335:INFO:             mlxtend: Not installed
2024-12-05 21:51:34,335:INFO:       statsforecast: Not installed
2024-12-05 21:51:34,335:INFO:        tune_sklearn: Not installed
2024-12-05 21:51:34,335:INFO:                 ray: Not installed
2024-12-05 21:51:34,335:INFO:            hyperopt: Not installed
2024-12-05 21:51:34,335:INFO:              optuna: 4.0.0
2024-12-05 21:51:34,335:INFO:               skopt: Not installed
2024-12-05 21:51:34,335:INFO:              mlflow: 2.18.0
2024-12-05 21:51:34,335:INFO:              gradio: Not installed
2024-12-05 21:51:34,336:INFO:             fastapi: Not installed
2024-12-05 21:51:34,336:INFO:             uvicorn: Not installed
2024-12-05 21:51:34,336:INFO:              m2cgen: Not installed
2024-12-05 21:51:34,336:INFO:           evidently: Not installed
2024-12-05 21:51:34,336:INFO:               fugue: Not installed
2024-12-05 21:51:34,336:INFO:           streamlit: 1.39.0
2024-12-05 21:51:34,336:INFO:             prophet: Not installed
2024-12-05 21:51:34,336:INFO:None
2024-12-05 21:51:34,336:INFO:Set up data.
2024-12-05 21:51:34,386:INFO:Set up folding strategy.
2024-12-05 21:51:34,386:INFO:Set up train/test split.
2024-12-05 21:51:34,418:INFO:Set up index.
2024-12-05 21:51:34,419:INFO:Assigning column types.
2024-12-05 21:51:34,438:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-05 21:51:34,511:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 21:51:34,511:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:51:34,588:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:51:34,595:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:51:34,683:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 21:51:34,684:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:51:34,742:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:51:34,748:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:51:34,749:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-05 21:51:34,863:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:51:34,917:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:51:34,922:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:51:35,003:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:51:35,052:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:51:35,078:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:51:35,079:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-05 21:51:35,221:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:51:35,226:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:51:35,472:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:51:35,477:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:51:35,479:INFO:Preparing preprocessing pipeline...
2024-12-05 21:51:35,484:INFO:Set up simple imputation.
2024-12-05 21:51:35,502:INFO:Set up encoding of categorical features.
2024-12-05 21:51:35,502:INFO:Set up imbalanced handling.
2024-12-05 21:51:35,502:INFO:Set up feature normalization.
2024-12-05 21:51:36,289:INFO:Finished creating preprocessing pipeline.
2024-12-05 21:51:36,302:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\diego\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_ti...
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-12-05 21:51:36,302:INFO:Creating final display dataframe.
2024-12-05 21:51:37,460:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            target
2                   Target type            Binary
3           Original data shape       (31007, 47)
4        Transformed data shape       (31505, 47)
5   Transformed train set shape       (22202, 47)
6    Transformed test set shape        (9303, 47)
7              Numeric features                45
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                 5
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              1c1f
2024-12-05 21:51:37,545:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:51:37,548:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:51:37,639:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:51:37,641:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:51:37,642:INFO:setup() successfully completed in 3.43s...............
2024-12-05 21:51:37,686:INFO:Initializing compare_models()
2024-12-05 21:51:37,686:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-05 21:51:37,686:INFO:Checking exceptions
2024-12-05 21:51:37,699:INFO:Preparing display monitor
2024-12-05 21:51:37,720:INFO:Initializing Logistic Regression
2024-12-05 21:51:37,720:INFO:Total runtime is 0.0 minutes
2024-12-05 21:51:37,728:INFO:SubProcess create_model() called ==================================
2024-12-05 21:51:37,728:INFO:Initializing create_model()
2024-12-05 21:51:37,729:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144650C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:51:37,729:INFO:Checking exceptions
2024-12-05 21:51:37,729:INFO:Importing libraries
2024-12-05 21:51:37,729:INFO:Copying training dataset
2024-12-05 21:51:37,761:INFO:Defining folds
2024-12-05 21:51:37,762:INFO:Declaring metric variables
2024-12-05 21:51:37,767:INFO:Importing untrained model
2024-12-05 21:51:37,770:INFO:Logistic Regression Imported successfully
2024-12-05 21:51:37,780:INFO:Starting cross validation
2024-12-05 21:51:37,783:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:51:40,225:INFO:Calculating mean and std
2024-12-05 21:51:40,233:INFO:Creating metrics dataframe
2024-12-05 21:51:40,251:INFO:Uploading results into container
2024-12-05 21:51:40,253:INFO:Uploading model into container now
2024-12-05 21:51:40,255:INFO:_master_model_container: 1
2024-12-05 21:51:40,257:INFO:_display_container: 2
2024-12-05 21:51:40,259:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-05 21:51:40,259:INFO:create_model() successfully completed......................................
2024-12-05 21:51:40,463:INFO:SubProcess create_model() end ==================================
2024-12-05 21:51:40,464:INFO:Creating metrics dataframe
2024-12-05 21:51:40,481:INFO:Initializing K Neighbors Classifier
2024-12-05 21:51:40,481:INFO:Total runtime is 0.04600941340128581 minutes
2024-12-05 21:51:40,486:INFO:SubProcess create_model() called ==================================
2024-12-05 21:51:40,486:INFO:Initializing create_model()
2024-12-05 21:51:40,486:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144650C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:51:40,487:INFO:Checking exceptions
2024-12-05 21:51:40,487:INFO:Importing libraries
2024-12-05 21:51:40,487:INFO:Copying training dataset
2024-12-05 21:51:40,515:INFO:Defining folds
2024-12-05 21:51:40,516:INFO:Declaring metric variables
2024-12-05 21:51:40,519:INFO:Importing untrained model
2024-12-05 21:51:40,524:INFO:K Neighbors Classifier Imported successfully
2024-12-05 21:51:40,534:INFO:Starting cross validation
2024-12-05 21:51:40,536:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:51:43,973:INFO:Calculating mean and std
2024-12-05 21:51:43,974:INFO:Creating metrics dataframe
2024-12-05 21:51:43,979:INFO:Uploading results into container
2024-12-05 21:51:43,980:INFO:Uploading model into container now
2024-12-05 21:51:43,981:INFO:_master_model_container: 2
2024-12-05 21:51:43,981:INFO:_display_container: 2
2024-12-05 21:51:43,981:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-05 21:51:43,981:INFO:create_model() successfully completed......................................
2024-12-05 21:51:44,192:INFO:SubProcess create_model() end ==================================
2024-12-05 21:51:44,193:INFO:Creating metrics dataframe
2024-12-05 21:51:44,243:INFO:Initializing Naive Bayes
2024-12-05 21:51:44,244:INFO:Total runtime is 0.10872955719629923 minutes
2024-12-05 21:51:44,263:INFO:SubProcess create_model() called ==================================
2024-12-05 21:51:44,264:INFO:Initializing create_model()
2024-12-05 21:51:44,265:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144650C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:51:44,266:INFO:Checking exceptions
2024-12-05 21:51:44,266:INFO:Importing libraries
2024-12-05 21:51:44,266:INFO:Copying training dataset
2024-12-05 21:51:44,332:INFO:Defining folds
2024-12-05 21:51:44,332:INFO:Declaring metric variables
2024-12-05 21:51:44,338:INFO:Importing untrained model
2024-12-05 21:51:44,344:INFO:Naive Bayes Imported successfully
2024-12-05 21:51:44,354:INFO:Starting cross validation
2024-12-05 21:51:44,357:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:51:45,796:INFO:Calculating mean and std
2024-12-05 21:51:45,802:INFO:Creating metrics dataframe
2024-12-05 21:51:45,817:INFO:Uploading results into container
2024-12-05 21:51:45,820:INFO:Uploading model into container now
2024-12-05 21:51:45,822:INFO:_master_model_container: 3
2024-12-05 21:51:45,823:INFO:_display_container: 2
2024-12-05 21:51:45,824:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-05 21:51:45,825:INFO:create_model() successfully completed......................................
2024-12-05 21:51:46,042:INFO:SubProcess create_model() end ==================================
2024-12-05 21:51:46,043:INFO:Creating metrics dataframe
2024-12-05 21:51:46,096:INFO:Initializing Decision Tree Classifier
2024-12-05 21:51:46,097:INFO:Total runtime is 0.13961477279663087 minutes
2024-12-05 21:51:46,112:INFO:SubProcess create_model() called ==================================
2024-12-05 21:51:46,113:INFO:Initializing create_model()
2024-12-05 21:51:46,114:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144650C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:51:46,114:INFO:Checking exceptions
2024-12-05 21:51:46,114:INFO:Importing libraries
2024-12-05 21:51:46,115:INFO:Copying training dataset
2024-12-05 21:51:46,187:INFO:Defining folds
2024-12-05 21:51:46,188:INFO:Declaring metric variables
2024-12-05 21:51:46,201:INFO:Importing untrained model
2024-12-05 21:51:46,211:INFO:Decision Tree Classifier Imported successfully
2024-12-05 21:51:46,233:INFO:Starting cross validation
2024-12-05 21:51:46,240:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:51:49,317:INFO:Calculating mean and std
2024-12-05 21:51:49,318:INFO:Creating metrics dataframe
2024-12-05 21:51:49,322:INFO:Uploading results into container
2024-12-05 21:51:49,323:INFO:Uploading model into container now
2024-12-05 21:51:49,323:INFO:_master_model_container: 4
2024-12-05 21:51:49,323:INFO:_display_container: 2
2024-12-05 21:51:49,324:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-12-05 21:51:49,324:INFO:create_model() successfully completed......................................
2024-12-05 21:51:49,417:INFO:SubProcess create_model() end ==================================
2024-12-05 21:51:49,417:INFO:Creating metrics dataframe
2024-12-05 21:51:49,428:INFO:Initializing SVM - Linear Kernel
2024-12-05 21:51:49,428:INFO:Total runtime is 0.1951263467470805 minutes
2024-12-05 21:51:49,432:INFO:SubProcess create_model() called ==================================
2024-12-05 21:51:49,432:INFO:Initializing create_model()
2024-12-05 21:51:49,432:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144650C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:51:49,432:INFO:Checking exceptions
2024-12-05 21:51:49,433:INFO:Importing libraries
2024-12-05 21:51:49,433:INFO:Copying training dataset
2024-12-05 21:51:49,455:INFO:Defining folds
2024-12-05 21:51:49,455:INFO:Declaring metric variables
2024-12-05 21:51:49,458:INFO:Importing untrained model
2024-12-05 21:51:49,463:INFO:SVM - Linear Kernel Imported successfully
2024-12-05 21:51:49,469:INFO:Starting cross validation
2024-12-05 21:51:49,471:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:51:51,289:INFO:Calculating mean and std
2024-12-05 21:51:51,290:INFO:Creating metrics dataframe
2024-12-05 21:51:51,297:INFO:Uploading results into container
2024-12-05 21:51:51,298:INFO:Uploading model into container now
2024-12-05 21:51:51,299:INFO:_master_model_container: 5
2024-12-05 21:51:51,299:INFO:_display_container: 2
2024-12-05 21:51:51,300:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-05 21:51:51,300:INFO:create_model() successfully completed......................................
2024-12-05 21:51:51,409:INFO:SubProcess create_model() end ==================================
2024-12-05 21:51:51,409:INFO:Creating metrics dataframe
2024-12-05 21:51:51,422:INFO:Initializing Ridge Classifier
2024-12-05 21:51:51,422:INFO:Total runtime is 0.22835757732391357 minutes
2024-12-05 21:51:51,426:INFO:SubProcess create_model() called ==================================
2024-12-05 21:51:51,427:INFO:Initializing create_model()
2024-12-05 21:51:51,427:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144650C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:51:51,427:INFO:Checking exceptions
2024-12-05 21:51:51,427:INFO:Importing libraries
2024-12-05 21:51:51,427:INFO:Copying training dataset
2024-12-05 21:51:51,458:INFO:Defining folds
2024-12-05 21:51:51,458:INFO:Declaring metric variables
2024-12-05 21:51:51,462:INFO:Importing untrained model
2024-12-05 21:51:51,467:INFO:Ridge Classifier Imported successfully
2024-12-05 21:51:51,477:INFO:Starting cross validation
2024-12-05 21:51:51,480:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:51:53,314:INFO:Calculating mean and std
2024-12-05 21:51:53,315:INFO:Creating metrics dataframe
2024-12-05 21:51:53,319:INFO:Uploading results into container
2024-12-05 21:51:53,319:INFO:Uploading model into container now
2024-12-05 21:51:53,319:INFO:_master_model_container: 6
2024-12-05 21:51:53,319:INFO:_display_container: 2
2024-12-05 21:51:53,320:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-12-05 21:51:53,321:INFO:create_model() successfully completed......................................
2024-12-05 21:51:53,473:INFO:SubProcess create_model() end ==================================
2024-12-05 21:51:53,473:INFO:Creating metrics dataframe
2024-12-05 21:51:53,507:INFO:Initializing Random Forest Classifier
2024-12-05 21:51:53,507:INFO:Total runtime is 0.26311753193537396 minutes
2024-12-05 21:51:53,514:INFO:SubProcess create_model() called ==================================
2024-12-05 21:51:53,515:INFO:Initializing create_model()
2024-12-05 21:51:53,515:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144650C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:51:53,516:INFO:Checking exceptions
2024-12-05 21:51:53,516:INFO:Importing libraries
2024-12-05 21:51:53,516:INFO:Copying training dataset
2024-12-05 21:51:53,561:INFO:Defining folds
2024-12-05 21:51:53,562:INFO:Declaring metric variables
2024-12-05 21:51:53,572:INFO:Importing untrained model
2024-12-05 21:51:53,583:INFO:Random Forest Classifier Imported successfully
2024-12-05 21:51:53,599:INFO:Starting cross validation
2024-12-05 21:51:53,601:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:52:03,470:INFO:Calculating mean and std
2024-12-05 21:52:03,475:INFO:Creating metrics dataframe
2024-12-05 21:52:03,495:INFO:Uploading results into container
2024-12-05 21:52:03,499:INFO:Uploading model into container now
2024-12-05 21:52:03,501:INFO:_master_model_container: 7
2024-12-05 21:52:03,501:INFO:_display_container: 2
2024-12-05 21:52:03,503:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 21:52:03,503:INFO:create_model() successfully completed......................................
2024-12-05 21:52:03,652:INFO:SubProcess create_model() end ==================================
2024-12-05 21:52:03,652:INFO:Creating metrics dataframe
2024-12-05 21:52:03,671:INFO:Initializing Quadratic Discriminant Analysis
2024-12-05 21:52:03,671:INFO:Total runtime is 0.43250262339909873 minutes
2024-12-05 21:52:03,677:INFO:SubProcess create_model() called ==================================
2024-12-05 21:52:03,678:INFO:Initializing create_model()
2024-12-05 21:52:03,679:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144650C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:52:03,680:INFO:Checking exceptions
2024-12-05 21:52:03,680:INFO:Importing libraries
2024-12-05 21:52:03,680:INFO:Copying training dataset
2024-12-05 21:52:03,733:INFO:Defining folds
2024-12-05 21:52:03,733:INFO:Declaring metric variables
2024-12-05 21:52:03,744:INFO:Importing untrained model
2024-12-05 21:52:03,752:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-05 21:52:03,765:INFO:Starting cross validation
2024-12-05 21:52:03,767:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:52:05,300:INFO:Calculating mean and std
2024-12-05 21:52:05,307:INFO:Creating metrics dataframe
2024-12-05 21:52:05,333:INFO:Uploading results into container
2024-12-05 21:52:05,339:INFO:Uploading model into container now
2024-12-05 21:52:05,342:INFO:_master_model_container: 8
2024-12-05 21:52:05,342:INFO:_display_container: 2
2024-12-05 21:52:05,342:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-05 21:52:05,342:INFO:create_model() successfully completed......................................
2024-12-05 21:52:05,496:INFO:SubProcess create_model() end ==================================
2024-12-05 21:52:05,496:INFO:Creating metrics dataframe
2024-12-05 21:52:05,506:INFO:Initializing Ada Boost Classifier
2024-12-05 21:52:05,506:INFO:Total runtime is 0.46308642625808716 minutes
2024-12-05 21:52:05,510:INFO:SubProcess create_model() called ==================================
2024-12-05 21:52:05,510:INFO:Initializing create_model()
2024-12-05 21:52:05,511:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144650C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:52:05,511:INFO:Checking exceptions
2024-12-05 21:52:05,511:INFO:Importing libraries
2024-12-05 21:52:05,511:INFO:Copying training dataset
2024-12-05 21:52:05,533:INFO:Defining folds
2024-12-05 21:52:05,533:INFO:Declaring metric variables
2024-12-05 21:52:05,536:INFO:Importing untrained model
2024-12-05 21:52:05,540:INFO:Ada Boost Classifier Imported successfully
2024-12-05 21:52:05,549:INFO:Starting cross validation
2024-12-05 21:52:05,553:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:52:06,535:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:52:06,552:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:52:06,556:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:52:06,561:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:52:06,608:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:52:12,059:INFO:Calculating mean and std
2024-12-05 21:52:12,067:INFO:Creating metrics dataframe
2024-12-05 21:52:12,082:INFO:Uploading results into container
2024-12-05 21:52:12,082:INFO:Uploading model into container now
2024-12-05 21:52:12,092:INFO:_master_model_container: 9
2024-12-05 21:52:12,092:INFO:_display_container: 2
2024-12-05 21:52:12,092:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-12-05 21:52:12,092:INFO:create_model() successfully completed......................................
2024-12-05 21:52:12,333:INFO:SubProcess create_model() end ==================================
2024-12-05 21:52:12,333:INFO:Creating metrics dataframe
2024-12-05 21:52:12,350:INFO:Initializing Gradient Boosting Classifier
2024-12-05 21:52:12,350:INFO:Total runtime is 0.5771563291549683 minutes
2024-12-05 21:52:12,354:INFO:SubProcess create_model() called ==================================
2024-12-05 21:52:12,354:INFO:Initializing create_model()
2024-12-05 21:52:12,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144650C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:52:12,355:INFO:Checking exceptions
2024-12-05 21:52:12,355:INFO:Importing libraries
2024-12-05 21:52:12,355:INFO:Copying training dataset
2024-12-05 21:52:12,378:INFO:Defining folds
2024-12-05 21:52:12,378:INFO:Declaring metric variables
2024-12-05 21:52:12,384:INFO:Importing untrained model
2024-12-05 21:52:12,389:INFO:Gradient Boosting Classifier Imported successfully
2024-12-05 21:52:12,397:INFO:Starting cross validation
2024-12-05 21:52:12,400:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:52:37,219:INFO:Calculating mean and std
2024-12-05 21:52:37,221:INFO:Creating metrics dataframe
2024-12-05 21:52:37,226:INFO:Uploading results into container
2024-12-05 21:52:37,226:INFO:Uploading model into container now
2024-12-05 21:52:37,227:INFO:_master_model_container: 10
2024-12-05 21:52:37,227:INFO:_display_container: 2
2024-12-05 21:52:37,228:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-05 21:52:37,228:INFO:create_model() successfully completed......................................
2024-12-05 21:52:37,329:INFO:SubProcess create_model() end ==================================
2024-12-05 21:52:37,329:INFO:Creating metrics dataframe
2024-12-05 21:52:37,343:INFO:Initializing Linear Discriminant Analysis
2024-12-05 21:52:37,343:INFO:Total runtime is 0.9937088966369629 minutes
2024-12-05 21:52:37,349:INFO:SubProcess create_model() called ==================================
2024-12-05 21:52:37,349:INFO:Initializing create_model()
2024-12-05 21:52:37,349:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144650C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:52:37,349:INFO:Checking exceptions
2024-12-05 21:52:37,349:INFO:Importing libraries
2024-12-05 21:52:37,349:INFO:Copying training dataset
2024-12-05 21:52:37,431:INFO:Defining folds
2024-12-05 21:52:37,432:INFO:Declaring metric variables
2024-12-05 21:52:37,449:INFO:Importing untrained model
2024-12-05 21:52:37,457:INFO:Linear Discriminant Analysis Imported successfully
2024-12-05 21:52:37,467:INFO:Starting cross validation
2024-12-05 21:52:37,473:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:52:39,456:INFO:Calculating mean and std
2024-12-05 21:52:39,459:INFO:Creating metrics dataframe
2024-12-05 21:52:39,467:INFO:Uploading results into container
2024-12-05 21:52:39,469:INFO:Uploading model into container now
2024-12-05 21:52:39,470:INFO:_master_model_container: 11
2024-12-05 21:52:39,470:INFO:_display_container: 2
2024-12-05 21:52:39,472:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-05 21:52:39,472:INFO:create_model() successfully completed......................................
2024-12-05 21:52:39,618:INFO:SubProcess create_model() end ==================================
2024-12-05 21:52:39,619:INFO:Creating metrics dataframe
2024-12-05 21:52:39,650:INFO:Initializing Extra Trees Classifier
2024-12-05 21:52:39,650:INFO:Total runtime is 1.032157305876414 minutes
2024-12-05 21:52:39,658:INFO:SubProcess create_model() called ==================================
2024-12-05 21:52:39,658:INFO:Initializing create_model()
2024-12-05 21:52:39,659:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144650C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:52:39,659:INFO:Checking exceptions
2024-12-05 21:52:39,660:INFO:Importing libraries
2024-12-05 21:52:39,660:INFO:Copying training dataset
2024-12-05 21:52:39,714:INFO:Defining folds
2024-12-05 21:52:39,714:INFO:Declaring metric variables
2024-12-05 21:52:39,725:INFO:Importing untrained model
2024-12-05 21:52:39,734:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:52:39,749:INFO:Starting cross validation
2024-12-05 21:52:39,755:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:52:45,172:INFO:Calculating mean and std
2024-12-05 21:52:45,176:INFO:Creating metrics dataframe
2024-12-05 21:52:45,193:INFO:Uploading results into container
2024-12-05 21:52:45,195:INFO:Uploading model into container now
2024-12-05 21:52:45,197:INFO:_master_model_container: 12
2024-12-05 21:52:45,198:INFO:_display_container: 2
2024-12-05 21:52:45,200:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:52:45,200:INFO:create_model() successfully completed......................................
2024-12-05 21:52:45,428:INFO:SubProcess create_model() end ==================================
2024-12-05 21:52:45,429:INFO:Creating metrics dataframe
2024-12-05 21:52:45,492:INFO:Initializing Extreme Gradient Boosting
2024-12-05 21:52:45,492:INFO:Total runtime is 1.129523189862569 minutes
2024-12-05 21:52:45,506:INFO:SubProcess create_model() called ==================================
2024-12-05 21:52:45,508:INFO:Initializing create_model()
2024-12-05 21:52:45,508:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144650C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:52:45,508:INFO:Checking exceptions
2024-12-05 21:52:45,509:INFO:Importing libraries
2024-12-05 21:52:45,509:INFO:Copying training dataset
2024-12-05 21:52:45,596:INFO:Defining folds
2024-12-05 21:52:45,597:INFO:Declaring metric variables
2024-12-05 21:52:45,613:INFO:Importing untrained model
2024-12-05 21:52:45,623:INFO:Extreme Gradient Boosting Imported successfully
2024-12-05 21:52:45,639:INFO:Starting cross validation
2024-12-05 21:52:45,643:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:52:49,578:INFO:Calculating mean and std
2024-12-05 21:52:49,583:INFO:Creating metrics dataframe
2024-12-05 21:52:49,600:INFO:Uploading results into container
2024-12-05 21:52:49,602:INFO:Uploading model into container now
2024-12-05 21:52:49,604:INFO:_master_model_container: 13
2024-12-05 21:52:49,605:INFO:_display_container: 2
2024-12-05 21:52:49,609:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-12-05 21:52:49,609:INFO:create_model() successfully completed......................................
2024-12-05 21:52:49,817:INFO:SubProcess create_model() end ==================================
2024-12-05 21:52:49,818:INFO:Creating metrics dataframe
2024-12-05 21:52:49,842:INFO:Initializing Light Gradient Boosting Machine
2024-12-05 21:52:49,842:INFO:Total runtime is 1.2020192702611285 minutes
2024-12-05 21:52:49,847:INFO:SubProcess create_model() called ==================================
2024-12-05 21:52:49,848:INFO:Initializing create_model()
2024-12-05 21:52:49,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144650C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:52:49,848:INFO:Checking exceptions
2024-12-05 21:52:49,848:INFO:Importing libraries
2024-12-05 21:52:49,848:INFO:Copying training dataset
2024-12-05 21:52:49,876:INFO:Defining folds
2024-12-05 21:52:49,876:INFO:Declaring metric variables
2024-12-05 21:52:49,880:INFO:Importing untrained model
2024-12-05 21:52:49,885:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-05 21:52:49,897:INFO:Starting cross validation
2024-12-05 21:52:49,900:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:52:53,562:INFO:Calculating mean and std
2024-12-05 21:52:53,564:INFO:Creating metrics dataframe
2024-12-05 21:52:53,568:INFO:Uploading results into container
2024-12-05 21:52:53,569:INFO:Uploading model into container now
2024-12-05 21:52:53,571:INFO:_master_model_container: 14
2024-12-05 21:52:53,571:INFO:_display_container: 2
2024-12-05 21:52:53,573:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-05 21:52:53,573:INFO:create_model() successfully completed......................................
2024-12-05 21:52:53,680:INFO:SubProcess create_model() end ==================================
2024-12-05 21:52:53,680:INFO:Creating metrics dataframe
2024-12-05 21:52:53,693:INFO:Initializing CatBoost Classifier
2024-12-05 21:52:53,693:INFO:Total runtime is 1.2662032683690387 minutes
2024-12-05 21:52:53,696:INFO:SubProcess create_model() called ==================================
2024-12-05 21:52:53,696:INFO:Initializing create_model()
2024-12-05 21:52:53,696:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144650C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:52:53,696:INFO:Checking exceptions
2024-12-05 21:52:53,696:INFO:Importing libraries
2024-12-05 21:52:53,697:INFO:Copying training dataset
2024-12-05 21:52:53,717:INFO:Defining folds
2024-12-05 21:52:53,717:INFO:Declaring metric variables
2024-12-05 21:52:53,723:INFO:Importing untrained model
2024-12-05 21:52:53,726:INFO:CatBoost Classifier Imported successfully
2024-12-05 21:52:53,735:INFO:Starting cross validation
2024-12-05 21:52:53,738:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:53:36,564:INFO:Calculating mean and std
2024-12-05 21:53:36,570:INFO:Creating metrics dataframe
2024-12-05 21:53:36,594:INFO:Uploading results into container
2024-12-05 21:53:36,599:INFO:Uploading model into container now
2024-12-05 21:53:36,600:INFO:_master_model_container: 15
2024-12-05 21:53:36,601:INFO:_display_container: 2
2024-12-05 21:53:36,601:INFO:<catboost.core.CatBoostClassifier object at 0x0000023E1282C430>
2024-12-05 21:53:36,601:INFO:create_model() successfully completed......................................
2024-12-05 21:53:36,833:INFO:SubProcess create_model() end ==================================
2024-12-05 21:53:36,834:INFO:Creating metrics dataframe
2024-12-05 21:53:36,861:INFO:Initializing Dummy Classifier
2024-12-05 21:53:36,861:INFO:Total runtime is 1.9856743931770322 minutes
2024-12-05 21:53:36,866:INFO:SubProcess create_model() called ==================================
2024-12-05 21:53:36,866:INFO:Initializing create_model()
2024-12-05 21:53:36,866:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E144650C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:53:36,866:INFO:Checking exceptions
2024-12-05 21:53:36,866:INFO:Importing libraries
2024-12-05 21:53:36,867:INFO:Copying training dataset
2024-12-05 21:53:36,896:INFO:Defining folds
2024-12-05 21:53:36,896:INFO:Declaring metric variables
2024-12-05 21:53:36,900:INFO:Importing untrained model
2024-12-05 21:53:36,906:INFO:Dummy Classifier Imported successfully
2024-12-05 21:53:36,916:INFO:Starting cross validation
2024-12-05 21:53:36,921:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:53:38,490:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 21:53:38,493:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 21:53:38,520:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 21:53:38,527:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 21:53:38,529:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 21:53:38,662:INFO:Calculating mean and std
2024-12-05 21:53:38,664:INFO:Creating metrics dataframe
2024-12-05 21:53:38,671:INFO:Uploading results into container
2024-12-05 21:53:38,673:INFO:Uploading model into container now
2024-12-05 21:53:38,673:INFO:_master_model_container: 16
2024-12-05 21:53:38,674:INFO:_display_container: 2
2024-12-05 21:53:38,674:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-12-05 21:53:38,674:INFO:create_model() successfully completed......................................
2024-12-05 21:53:38,806:INFO:SubProcess create_model() end ==================================
2024-12-05 21:53:38,806:INFO:Creating metrics dataframe
2024-12-05 21:53:38,830:INFO:Initializing create_model()
2024-12-05 21:53:38,830:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:53:38,830:INFO:Checking exceptions
2024-12-05 21:53:38,833:INFO:Importing libraries
2024-12-05 21:53:38,833:INFO:Copying training dataset
2024-12-05 21:53:38,858:INFO:Defining folds
2024-12-05 21:53:38,858:INFO:Declaring metric variables
2024-12-05 21:53:38,858:INFO:Importing untrained model
2024-12-05 21:53:38,858:INFO:Declaring custom model
2024-12-05 21:53:38,859:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:53:38,863:INFO:Cross validation set to False
2024-12-05 21:53:38,863:INFO:Fitting Model
2024-12-05 21:53:40,604:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:53:40,604:INFO:create_model() successfully completed......................................
2024-12-05 21:53:40,744:INFO:_master_model_container: 16
2024-12-05 21:53:40,744:INFO:_display_container: 2
2024-12-05 21:53:40,745:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:53:40,745:INFO:compare_models() successfully completed......................................
2024-12-05 21:53:40,816:INFO:Initializing predict_model()
2024-12-05 21:53:40,816:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E1842D2D0>)
2024-12-05 21:53:40,816:INFO:Checking exceptions
2024-12-05 21:53:40,816:INFO:Preloading libraries
2024-12-05 21:53:40,819:INFO:Set up data.
2024-12-05 21:53:40,865:INFO:Set up index.
2024-12-05 21:53:41,551:INFO:Initializing finalize_model()
2024-12-05 21:53:41,551:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-05 21:53:41,553:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:53:41,572:INFO:Initializing create_model()
2024-12-05 21:53:41,573:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:53:41,573:INFO:Checking exceptions
2024-12-05 21:53:41,576:INFO:Importing libraries
2024-12-05 21:53:41,576:INFO:Copying training dataset
2024-12-05 21:53:41,578:INFO:Defining folds
2024-12-05 21:53:41,578:INFO:Declaring metric variables
2024-12-05 21:53:41,578:INFO:Importing untrained model
2024-12-05 21:53:41,578:INFO:Declaring custom model
2024-12-05 21:53:41,579:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:53:41,582:INFO:Cross validation set to False
2024-12-05 21:53:41,582:INFO:Fitting Model
2024-12-05 21:53:43,632:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 21:53:43,633:INFO:create_model() successfully completed......................................
2024-12-05 21:53:43,853:INFO:_master_model_container: 16
2024-12-05 21:53:43,853:INFO:_display_container: 3
2024-12-05 21:53:43,895:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 21:53:43,895:INFO:finalize_model() successfully completed......................................
2024-12-05 21:53:44,167:INFO:Initializing predict_model()
2024-12-05 21:53:44,168:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E1842F880>)
2024-12-05 21:53:44,168:INFO:Checking exceptions
2024-12-05 21:53:44,168:INFO:Preloading libraries
2024-12-05 21:53:44,176:INFO:Set up data.
2024-12-05 21:53:44,265:INFO:Set up index.
2024-12-05 21:53:44,860:INFO:Initializing predict_model()
2024-12-05 21:53:44,860:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E126EE3B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E1842F880>)
2024-12-05 21:53:44,860:INFO:Checking exceptions
2024-12-05 21:53:44,860:INFO:Preloading libraries
2024-12-05 21:53:44,863:INFO:Set up data.
2024-12-05 21:53:44,896:INFO:Set up index.
2024-12-05 21:53:45,581:INFO:PyCaret ClassificationExperiment
2024-12-05 21:53:45,581:INFO:Logging name: clf-default-name
2024-12-05 21:53:45,581:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-05 21:53:45,581:INFO:version 3.3.2
2024-12-05 21:53:45,581:INFO:Initializing setup()
2024-12-05 21:53:45,581:INFO:self.USI: a01a
2024-12-05 21:53:45,581:INFO:self._variable_keys: {'_available_plots', 'logging_param', 'is_multiclass', 'fold_generator', 'y', 'data', 'fold_groups_param', 'memory', 'X', 'target_param', 'pipeline', 'y_train', '_ml_usecase', 'seed', 'X_train', 'html_param', 'USI', 'X_test', 'exp_name_log', 'exp_id', 'fix_imbalance', 'fold_shuffle_param', 'gpu_param', 'gpu_n_jobs_param', 'y_test', 'log_plots_param', 'idx', 'n_jobs_param'}
2024-12-05 21:53:45,581:INFO:Checking environment
2024-12-05 21:53:45,581:INFO:python_version: 3.10.11
2024-12-05 21:53:45,582:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-12-05 21:53:45,582:INFO:machine: AMD64
2024-12-05 21:53:45,582:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-05 21:53:45,587:INFO:Memory: svmem(total=17041244160, available=4897996800, percent=71.3, used=12143247360, free=4897996800)
2024-12-05 21:53:45,587:INFO:Physical Core: 4
2024-12-05 21:53:45,587:INFO:Logical Core: 8
2024-12-05 21:53:45,587:INFO:Checking libraries
2024-12-05 21:53:45,587:INFO:System:
2024-12-05 21:53:45,587:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-12-05 21:53:45,587:INFO:executable: c:\Users\diego\AppData\Local\Programs\Python\Python310\python.exe
2024-12-05 21:53:45,587:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-05 21:53:45,587:INFO:PyCaret required dependencies:
2024-12-05 21:53:45,587:INFO:                 pip: 24.2
2024-12-05 21:53:45,587:INFO:          setuptools: 65.5.0
2024-12-05 21:53:45,587:INFO:             pycaret: 3.3.2
2024-12-05 21:53:45,587:INFO:             IPython: 8.26.0
2024-12-05 21:53:45,587:INFO:          ipywidgets: 8.1.5
2024-12-05 21:53:45,587:INFO:                tqdm: 4.66.5
2024-12-05 21:53:45,587:INFO:               numpy: 1.26.4
2024-12-05 21:53:45,587:INFO:              pandas: 1.5.3
2024-12-05 21:53:45,588:INFO:              jinja2: 3.1.4
2024-12-05 21:53:45,588:INFO:               scipy: 1.11.4
2024-12-05 21:53:45,588:INFO:              joblib: 1.3.2
2024-12-05 21:53:45,588:INFO:             sklearn: 1.4.2
2024-12-05 21:53:45,588:INFO:                pyod: 2.0.2
2024-12-05 21:53:45,588:INFO:            imblearn: 0.12.3
2024-12-05 21:53:45,588:INFO:   category_encoders: 2.6.4
2024-12-05 21:53:45,588:INFO:            lightgbm: 4.5.0
2024-12-05 21:53:45,588:INFO:               numba: 0.60.0
2024-12-05 21:53:45,588:INFO:            requests: 2.32.3
2024-12-05 21:53:45,588:INFO:          matplotlib: 3.7.5
2024-12-05 21:53:45,588:INFO:          scikitplot: 0.3.7
2024-12-05 21:53:45,588:INFO:         yellowbrick: 1.5
2024-12-05 21:53:45,588:INFO:              plotly: 5.24.1
2024-12-05 21:53:45,588:INFO:    plotly-resampler: Not installed
2024-12-05 21:53:45,588:INFO:             kaleido: 0.2.1
2024-12-05 21:53:45,588:INFO:           schemdraw: 0.15
2024-12-05 21:53:45,588:INFO:         statsmodels: 0.14.4
2024-12-05 21:53:45,588:INFO:              sktime: 0.26.0
2024-12-05 21:53:45,588:INFO:               tbats: 1.1.3
2024-12-05 21:53:45,588:INFO:            pmdarima: 2.0.4
2024-12-05 21:53:45,588:INFO:              psutil: 6.0.0
2024-12-05 21:53:45,588:INFO:          markupsafe: 2.1.5
2024-12-05 21:53:45,588:INFO:             pickle5: Not installed
2024-12-05 21:53:45,588:INFO:         cloudpickle: 3.1.0
2024-12-05 21:53:45,588:INFO:         deprecation: 2.1.0
2024-12-05 21:53:45,588:INFO:              xxhash: 3.5.0
2024-12-05 21:53:45,588:INFO:           wurlitzer: Not installed
2024-12-05 21:53:45,588:INFO:PyCaret optional dependencies:
2024-12-05 21:53:45,589:INFO:                shap: 0.44.0
2024-12-05 21:53:45,589:INFO:           interpret: 0.5.0
2024-12-05 21:53:45,589:INFO:                umap: 0.5.6
2024-12-05 21:53:45,589:INFO:     ydata_profiling: 4.11.0
2024-12-05 21:53:45,589:INFO:  explainerdashboard: 0.4.7
2024-12-05 21:53:45,589:INFO:             autoviz: Not installed
2024-12-05 21:53:45,589:INFO:           fairlearn: 0.7.0
2024-12-05 21:53:45,589:INFO:          deepchecks: Not installed
2024-12-05 21:53:45,589:INFO:             xgboost: 2.1.2
2024-12-05 21:53:45,589:INFO:            catboost: 1.2.7
2024-12-05 21:53:45,589:INFO:              kmodes: Not installed
2024-12-05 21:53:45,589:INFO:             mlxtend: Not installed
2024-12-05 21:53:45,589:INFO:       statsforecast: Not installed
2024-12-05 21:53:45,589:INFO:        tune_sklearn: Not installed
2024-12-05 21:53:45,589:INFO:                 ray: Not installed
2024-12-05 21:53:45,589:INFO:            hyperopt: Not installed
2024-12-05 21:53:45,589:INFO:              optuna: 4.0.0
2024-12-05 21:53:45,589:INFO:               skopt: Not installed
2024-12-05 21:53:45,589:INFO:              mlflow: 2.18.0
2024-12-05 21:53:45,589:INFO:              gradio: Not installed
2024-12-05 21:53:45,589:INFO:             fastapi: Not installed
2024-12-05 21:53:45,589:INFO:             uvicorn: Not installed
2024-12-05 21:53:45,589:INFO:              m2cgen: Not installed
2024-12-05 21:53:45,589:INFO:           evidently: Not installed
2024-12-05 21:53:45,589:INFO:               fugue: Not installed
2024-12-05 21:53:45,589:INFO:           streamlit: 1.39.0
2024-12-05 21:53:45,589:INFO:             prophet: Not installed
2024-12-05 21:53:45,590:INFO:None
2024-12-05 21:53:45,590:INFO:Set up data.
2024-12-05 21:53:45,643:INFO:Set up folding strategy.
2024-12-05 21:53:45,644:INFO:Set up train/test split.
2024-12-05 21:53:45,675:INFO:Set up index.
2024-12-05 21:53:45,676:INFO:Assigning column types.
2024-12-05 21:53:45,696:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-05 21:53:45,743:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 21:53:45,744:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:53:45,774:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:53:45,776:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:53:45,820:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 21:53:45,820:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:53:45,852:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:53:45,855:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:53:45,855:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-05 21:53:45,905:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:53:45,933:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:53:45,936:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:53:45,983:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 21:53:46,012:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:53:46,014:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:53:46,015:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-05 21:53:46,089:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:53:46,090:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:53:46,160:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:53:46,163:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:53:46,165:INFO:Preparing preprocessing pipeline...
2024-12-05 21:53:46,167:INFO:Set up simple imputation.
2024-12-05 21:53:46,175:INFO:Set up encoding of categorical features.
2024-12-05 21:53:46,175:INFO:Set up imbalanced handling.
2024-12-05 21:53:46,175:INFO:Set up feature normalization.
2024-12-05 21:53:46,175:INFO:Set up feature selection.
2024-12-05 21:53:46,247:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:53:46,250:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:53:47,372:INFO:Finished creating preprocessing pipeline.
2024-12-05 21:53:47,397:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\diego\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_ti...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=9,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2024-12-05 21:53:47,397:INFO:Creating final display dataframe.
2024-12-05 21:53:48,340:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            target
2                   Target type            Binary
3           Original data shape       (31007, 47)
4        Transformed data shape       (31505, 10)
5   Transformed train set shape       (22202, 10)
6    Transformed test set shape        (9303, 10)
7              Numeric features                45
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17                    Normalize              True
18             Normalize method            zscore
19            Feature selection              True
20     Feature selection method           classic
21  Feature selection estimator          lightgbm
22  Number of features selected               0.2
23               Fold Generator   StratifiedKFold
24                  Fold Number                 5
25                     CPU Jobs                -1
26                      Use GPU             False
27               Log Experiment             False
28              Experiment Name  clf-default-name
29                          USI              a01a
2024-12-05 21:53:48,464:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:53:48,467:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:53:48,560:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 21:53:48,563:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 21:53:48,564:INFO:setup() successfully completed in 3.06s...............
2024-12-05 21:53:48,615:INFO:Initializing compare_models()
2024-12-05 21:53:48,615:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-05 21:53:48,615:INFO:Checking exceptions
2024-12-05 21:53:48,631:INFO:Preparing display monitor
2024-12-05 21:53:48,659:INFO:Initializing Logistic Regression
2024-12-05 21:53:48,659:INFO:Total runtime is 0.0 minutes
2024-12-05 21:53:48,665:INFO:SubProcess create_model() called ==================================
2024-12-05 21:53:48,666:INFO:Initializing create_model()
2024-12-05 21:53:48,666:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E132B7220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:53:48,666:INFO:Checking exceptions
2024-12-05 21:53:48,666:INFO:Importing libraries
2024-12-05 21:53:48,666:INFO:Copying training dataset
2024-12-05 21:53:48,700:INFO:Defining folds
2024-12-05 21:53:48,700:INFO:Declaring metric variables
2024-12-05 21:53:48,706:INFO:Importing untrained model
2024-12-05 21:53:48,710:INFO:Logistic Regression Imported successfully
2024-12-05 21:53:48,721:INFO:Starting cross validation
2024-12-05 21:53:48,735:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:53:52,219:INFO:Calculating mean and std
2024-12-05 21:53:52,224:INFO:Creating metrics dataframe
2024-12-05 21:53:52,238:INFO:Uploading results into container
2024-12-05 21:53:52,240:INFO:Uploading model into container now
2024-12-05 21:53:52,242:INFO:_master_model_container: 1
2024-12-05 21:53:52,243:INFO:_display_container: 2
2024-12-05 21:53:52,245:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-05 21:53:52,246:INFO:create_model() successfully completed......................................
2024-12-05 21:53:52,460:INFO:SubProcess create_model() end ==================================
2024-12-05 21:53:52,462:INFO:Creating metrics dataframe
2024-12-05 21:53:52,496:INFO:Initializing K Neighbors Classifier
2024-12-05 21:53:52,497:INFO:Total runtime is 0.06396701335906982 minutes
2024-12-05 21:53:52,511:INFO:SubProcess create_model() called ==================================
2024-12-05 21:53:52,512:INFO:Initializing create_model()
2024-12-05 21:53:52,513:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E132B7220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:53:52,513:INFO:Checking exceptions
2024-12-05 21:53:52,514:INFO:Importing libraries
2024-12-05 21:53:52,514:INFO:Copying training dataset
2024-12-05 21:53:52,582:INFO:Defining folds
2024-12-05 21:53:52,583:INFO:Declaring metric variables
2024-12-05 21:53:52,597:INFO:Importing untrained model
2024-12-05 21:53:52,608:INFO:K Neighbors Classifier Imported successfully
2024-12-05 21:53:52,626:INFO:Starting cross validation
2024-12-05 21:53:52,647:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:53:57,922:INFO:Calculating mean and std
2024-12-05 21:53:57,925:INFO:Creating metrics dataframe
2024-12-05 21:53:57,939:INFO:Uploading results into container
2024-12-05 21:53:57,940:INFO:Uploading model into container now
2024-12-05 21:53:57,942:INFO:_master_model_container: 2
2024-12-05 21:53:57,942:INFO:_display_container: 2
2024-12-05 21:53:57,945:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-05 21:53:57,945:INFO:create_model() successfully completed......................................
2024-12-05 21:53:58,173:INFO:SubProcess create_model() end ==================================
2024-12-05 21:53:58,173:INFO:Creating metrics dataframe
2024-12-05 21:53:58,220:INFO:Initializing Naive Bayes
2024-12-05 21:53:58,221:INFO:Total runtime is 0.15936278104782103 minutes
2024-12-05 21:53:58,235:INFO:SubProcess create_model() called ==================================
2024-12-05 21:53:58,242:INFO:Initializing create_model()
2024-12-05 21:53:58,243:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E132B7220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:53:58,243:INFO:Checking exceptions
2024-12-05 21:53:58,244:INFO:Importing libraries
2024-12-05 21:53:58,244:INFO:Copying training dataset
2024-12-05 21:53:58,332:INFO:Defining folds
2024-12-05 21:53:58,333:INFO:Declaring metric variables
2024-12-05 21:53:58,353:INFO:Importing untrained model
2024-12-05 21:53:58,371:INFO:Naive Bayes Imported successfully
2024-12-05 21:53:58,403:INFO:Starting cross validation
2024-12-05 21:53:58,426:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:54:02,002:INFO:Calculating mean and std
2024-12-05 21:54:02,003:INFO:Creating metrics dataframe
2024-12-05 21:54:02,008:INFO:Uploading results into container
2024-12-05 21:54:02,008:INFO:Uploading model into container now
2024-12-05 21:54:02,009:INFO:_master_model_container: 3
2024-12-05 21:54:02,010:INFO:_display_container: 2
2024-12-05 21:54:02,010:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-05 21:54:02,010:INFO:create_model() successfully completed......................................
2024-12-05 21:54:02,140:INFO:SubProcess create_model() end ==================================
2024-12-05 21:54:02,141:INFO:Creating metrics dataframe
2024-12-05 21:54:02,158:INFO:Initializing Decision Tree Classifier
2024-12-05 21:54:02,158:INFO:Total runtime is 0.22498913208643595 minutes
2024-12-05 21:54:02,163:INFO:SubProcess create_model() called ==================================
2024-12-05 21:54:02,164:INFO:Initializing create_model()
2024-12-05 21:54:02,164:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E132B7220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:54:02,164:INFO:Checking exceptions
2024-12-05 21:54:02,164:INFO:Importing libraries
2024-12-05 21:54:02,165:INFO:Copying training dataset
2024-12-05 21:54:02,200:INFO:Defining folds
2024-12-05 21:54:02,200:INFO:Declaring metric variables
2024-12-05 21:54:02,208:INFO:Importing untrained model
2024-12-05 21:54:02,213:INFO:Decision Tree Classifier Imported successfully
2024-12-05 21:54:02,226:INFO:Starting cross validation
2024-12-05 21:54:02,239:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:54:05,942:INFO:Calculating mean and std
2024-12-05 21:54:05,946:INFO:Creating metrics dataframe
2024-12-05 21:54:05,963:INFO:Uploading results into container
2024-12-05 21:54:05,966:INFO:Uploading model into container now
2024-12-05 21:54:05,969:INFO:_master_model_container: 4
2024-12-05 21:54:05,971:INFO:_display_container: 2
2024-12-05 21:54:05,972:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-12-05 21:54:05,973:INFO:create_model() successfully completed......................................
2024-12-05 21:54:06,206:INFO:SubProcess create_model() end ==================================
2024-12-05 21:54:06,206:INFO:Creating metrics dataframe
2024-12-05 21:54:06,252:INFO:Initializing SVM - Linear Kernel
2024-12-05 21:54:06,252:INFO:Total runtime is 0.2932203451792399 minutes
2024-12-05 21:54:06,267:INFO:SubProcess create_model() called ==================================
2024-12-05 21:54:06,269:INFO:Initializing create_model()
2024-12-05 21:54:06,269:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E132B7220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:54:06,270:INFO:Checking exceptions
2024-12-05 21:54:06,270:INFO:Importing libraries
2024-12-05 21:54:06,270:INFO:Copying training dataset
2024-12-05 21:54:06,355:INFO:Defining folds
2024-12-05 21:54:06,356:INFO:Declaring metric variables
2024-12-05 21:54:06,372:INFO:Importing untrained model
2024-12-05 21:54:06,391:INFO:SVM - Linear Kernel Imported successfully
2024-12-05 21:54:06,425:INFO:Starting cross validation
2024-12-05 21:54:06,469:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:54:09,562:INFO:Calculating mean and std
2024-12-05 21:54:09,564:INFO:Creating metrics dataframe
2024-12-05 21:54:09,573:INFO:Uploading results into container
2024-12-05 21:54:09,575:INFO:Uploading model into container now
2024-12-05 21:54:09,575:INFO:_master_model_container: 5
2024-12-05 21:54:09,575:INFO:_display_container: 2
2024-12-05 21:54:09,577:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-05 21:54:09,578:INFO:create_model() successfully completed......................................
2024-12-05 21:54:09,798:INFO:SubProcess create_model() end ==================================
2024-12-05 21:54:09,798:INFO:Creating metrics dataframe
2024-12-05 21:54:09,854:INFO:Initializing Ridge Classifier
2024-12-05 21:54:09,854:INFO:Total runtime is 0.35324649810791015 minutes
2024-12-05 21:54:09,868:INFO:SubProcess create_model() called ==================================
2024-12-05 21:54:09,870:INFO:Initializing create_model()
2024-12-05 21:54:09,871:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E132B7220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:54:09,872:INFO:Checking exceptions
2024-12-05 21:54:09,872:INFO:Importing libraries
2024-12-05 21:54:09,872:INFO:Copying training dataset
2024-12-05 21:54:09,954:INFO:Defining folds
2024-12-05 21:54:09,954:INFO:Declaring metric variables
2024-12-05 21:54:09,969:INFO:Importing untrained model
2024-12-05 21:54:09,977:INFO:Ridge Classifier Imported successfully
2024-12-05 21:54:10,000:INFO:Starting cross validation
2024-12-05 21:54:10,030:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:54:14,021:INFO:Calculating mean and std
2024-12-05 21:54:14,021:INFO:Creating metrics dataframe
2024-12-05 21:54:14,037:INFO:Uploading results into container
2024-12-05 21:54:14,039:INFO:Uploading model into container now
2024-12-05 21:54:14,039:INFO:_master_model_container: 6
2024-12-05 21:54:14,040:INFO:_display_container: 2
2024-12-05 21:54:14,040:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-12-05 21:54:14,040:INFO:create_model() successfully completed......................................
2024-12-05 21:54:14,257:INFO:SubProcess create_model() end ==================================
2024-12-05 21:54:14,257:INFO:Creating metrics dataframe
2024-12-05 21:54:14,272:INFO:Initializing Random Forest Classifier
2024-12-05 21:54:14,272:INFO:Total runtime is 0.4268868128458659 minutes
2024-12-05 21:54:14,277:INFO:SubProcess create_model() called ==================================
2024-12-05 21:54:14,278:INFO:Initializing create_model()
2024-12-05 21:54:14,278:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E132B7220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:54:14,278:INFO:Checking exceptions
2024-12-05 21:54:14,278:INFO:Importing libraries
2024-12-05 21:54:14,278:INFO:Copying training dataset
2024-12-05 21:54:14,316:INFO:Defining folds
2024-12-05 21:54:14,319:INFO:Declaring metric variables
2024-12-05 21:54:14,330:INFO:Importing untrained model
2024-12-05 21:54:14,336:INFO:Random Forest Classifier Imported successfully
2024-12-05 21:54:14,351:INFO:Starting cross validation
2024-12-05 21:54:14,375:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:54:24,253:INFO:Calculating mean and std
2024-12-05 21:54:24,255:INFO:Creating metrics dataframe
2024-12-05 21:54:24,258:INFO:Uploading results into container
2024-12-05 21:54:24,259:INFO:Uploading model into container now
2024-12-05 21:54:24,260:INFO:_master_model_container: 7
2024-12-05 21:54:24,260:INFO:_display_container: 2
2024-12-05 21:54:24,260:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 21:54:24,260:INFO:create_model() successfully completed......................................
2024-12-05 21:54:24,351:INFO:SubProcess create_model() end ==================================
2024-12-05 21:54:24,352:INFO:Creating metrics dataframe
2024-12-05 21:54:24,363:INFO:Initializing Quadratic Discriminant Analysis
2024-12-05 21:54:24,363:INFO:Total runtime is 0.5950680494308471 minutes
2024-12-05 21:54:24,366:INFO:SubProcess create_model() called ==================================
2024-12-05 21:54:24,367:INFO:Initializing create_model()
2024-12-05 21:54:24,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E132B7220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:54:24,367:INFO:Checking exceptions
2024-12-05 21:54:24,367:INFO:Importing libraries
2024-12-05 21:54:24,367:INFO:Copying training dataset
2024-12-05 21:54:24,392:INFO:Defining folds
2024-12-05 21:54:24,392:INFO:Declaring metric variables
2024-12-05 21:54:24,396:INFO:Importing untrained model
2024-12-05 21:54:24,400:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-05 21:54:24,410:INFO:Starting cross validation
2024-12-05 21:54:24,421:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:54:27,794:INFO:Calculating mean and std
2024-12-05 21:54:27,796:INFO:Creating metrics dataframe
2024-12-05 21:54:27,801:INFO:Uploading results into container
2024-12-05 21:54:27,804:INFO:Uploading model into container now
2024-12-05 21:54:27,804:INFO:_master_model_container: 8
2024-12-05 21:54:27,805:INFO:_display_container: 2
2024-12-05 21:54:27,805:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-05 21:54:27,805:INFO:create_model() successfully completed......................................
2024-12-05 21:54:27,974:INFO:SubProcess create_model() end ==================================
2024-12-05 21:54:27,974:INFO:Creating metrics dataframe
2024-12-05 21:54:27,990:INFO:Initializing Ada Boost Classifier
2024-12-05 21:54:27,991:INFO:Total runtime is 0.6555280327796935 minutes
2024-12-05 21:54:27,996:INFO:SubProcess create_model() called ==================================
2024-12-05 21:54:27,997:INFO:Initializing create_model()
2024-12-05 21:54:27,997:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E132B7220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:54:27,997:INFO:Checking exceptions
2024-12-05 21:54:27,997:INFO:Importing libraries
2024-12-05 21:54:27,997:INFO:Copying training dataset
2024-12-05 21:54:28,032:INFO:Defining folds
2024-12-05 21:54:28,032:INFO:Declaring metric variables
2024-12-05 21:54:28,037:INFO:Importing untrained model
2024-12-05 21:54:28,046:INFO:Ada Boost Classifier Imported successfully
2024-12-05 21:54:28,055:INFO:Starting cross validation
2024-12-05 21:54:28,072:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:54:31,456:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:54:31,681:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:54:31,730:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:54:31,770:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:54:31,834:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 21:54:34,086:INFO:Calculating mean and std
2024-12-05 21:54:34,087:INFO:Creating metrics dataframe
2024-12-05 21:54:34,092:INFO:Uploading results into container
2024-12-05 21:54:34,093:INFO:Uploading model into container now
2024-12-05 21:54:34,094:INFO:_master_model_container: 9
2024-12-05 21:54:34,095:INFO:_display_container: 2
2024-12-05 21:54:34,095:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-12-05 21:54:34,095:INFO:create_model() successfully completed......................................
2024-12-05 21:54:34,225:INFO:SubProcess create_model() end ==================================
2024-12-05 21:54:34,225:INFO:Creating metrics dataframe
2024-12-05 21:54:34,243:INFO:Initializing Gradient Boosting Classifier
2024-12-05 21:54:34,243:INFO:Total runtime is 0.7597244183222451 minutes
2024-12-05 21:54:34,249:INFO:SubProcess create_model() called ==================================
2024-12-05 21:54:34,249:INFO:Initializing create_model()
2024-12-05 21:54:34,249:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E132B7220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:54:34,249:INFO:Checking exceptions
2024-12-05 21:54:34,249:INFO:Importing libraries
2024-12-05 21:54:34,249:INFO:Copying training dataset
2024-12-05 21:54:34,286:INFO:Defining folds
2024-12-05 21:54:34,286:INFO:Declaring metric variables
2024-12-05 21:54:34,293:INFO:Importing untrained model
2024-12-05 21:54:34,298:INFO:Gradient Boosting Classifier Imported successfully
2024-12-05 21:54:34,309:INFO:Starting cross validation
2024-12-05 21:54:34,323:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:54:45,616:INFO:Calculating mean and std
2024-12-05 21:54:45,617:INFO:Creating metrics dataframe
2024-12-05 21:54:45,621:INFO:Uploading results into container
2024-12-05 21:54:45,621:INFO:Uploading model into container now
2024-12-05 21:54:45,622:INFO:_master_model_container: 10
2024-12-05 21:54:45,622:INFO:_display_container: 2
2024-12-05 21:54:45,622:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-05 21:54:45,622:INFO:create_model() successfully completed......................................
2024-12-05 21:54:45,738:INFO:SubProcess create_model() end ==================================
2024-12-05 21:54:45,738:INFO:Creating metrics dataframe
2024-12-05 21:54:45,761:INFO:Initializing Linear Discriminant Analysis
2024-12-05 21:54:45,761:INFO:Total runtime is 0.9516957481702167 minutes
2024-12-05 21:54:45,766:INFO:SubProcess create_model() called ==================================
2024-12-05 21:54:45,766:INFO:Initializing create_model()
2024-12-05 21:54:45,766:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E132B7220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:54:45,766:INFO:Checking exceptions
2024-12-05 21:54:45,767:INFO:Importing libraries
2024-12-05 21:54:45,767:INFO:Copying training dataset
2024-12-05 21:54:45,811:INFO:Defining folds
2024-12-05 21:54:45,811:INFO:Declaring metric variables
2024-12-05 21:54:45,816:INFO:Importing untrained model
2024-12-05 21:54:45,825:INFO:Linear Discriminant Analysis Imported successfully
2024-12-05 21:54:45,838:INFO:Starting cross validation
2024-12-05 21:54:45,855:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:54:49,803:INFO:Calculating mean and std
2024-12-05 21:54:49,805:INFO:Creating metrics dataframe
2024-12-05 21:54:49,810:INFO:Uploading results into container
2024-12-05 21:54:49,811:INFO:Uploading model into container now
2024-12-05 21:54:49,812:INFO:_master_model_container: 11
2024-12-05 21:54:49,812:INFO:_display_container: 2
2024-12-05 21:54:49,812:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-05 21:54:49,812:INFO:create_model() successfully completed......................................
2024-12-05 21:54:49,937:INFO:SubProcess create_model() end ==================================
2024-12-05 21:54:49,937:INFO:Creating metrics dataframe
2024-12-05 21:54:49,951:INFO:Initializing Extra Trees Classifier
2024-12-05 21:54:49,952:INFO:Total runtime is 1.021554386615753 minutes
2024-12-05 21:54:49,957:INFO:SubProcess create_model() called ==================================
2024-12-05 21:54:49,957:INFO:Initializing create_model()
2024-12-05 21:54:49,957:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E132B7220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:54:49,958:INFO:Checking exceptions
2024-12-05 21:54:49,958:INFO:Importing libraries
2024-12-05 21:54:49,958:INFO:Copying training dataset
2024-12-05 21:54:49,986:INFO:Defining folds
2024-12-05 21:54:49,986:INFO:Declaring metric variables
2024-12-05 21:54:49,991:INFO:Importing untrained model
2024-12-05 21:54:49,996:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:54:50,007:INFO:Starting cross validation
2024-12-05 21:54:50,022:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:54:55,098:INFO:Calculating mean and std
2024-12-05 21:54:55,103:INFO:Creating metrics dataframe
2024-12-05 21:54:55,117:INFO:Uploading results into container
2024-12-05 21:54:55,121:INFO:Uploading model into container now
2024-12-05 21:54:55,123:INFO:_master_model_container: 12
2024-12-05 21:54:55,124:INFO:_display_container: 2
2024-12-05 21:54:55,126:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:54:55,127:INFO:create_model() successfully completed......................................
2024-12-05 21:54:55,356:INFO:SubProcess create_model() end ==================================
2024-12-05 21:54:55,356:INFO:Creating metrics dataframe
2024-12-05 21:54:55,414:INFO:Initializing Extreme Gradient Boosting
2024-12-05 21:54:55,415:INFO:Total runtime is 1.1125952959060668 minutes
2024-12-05 21:54:55,431:INFO:SubProcess create_model() called ==================================
2024-12-05 21:54:55,433:INFO:Initializing create_model()
2024-12-05 21:54:55,434:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E132B7220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:54:55,434:INFO:Checking exceptions
2024-12-05 21:54:55,435:INFO:Importing libraries
2024-12-05 21:54:55,435:INFO:Copying training dataset
2024-12-05 21:54:55,519:INFO:Defining folds
2024-12-05 21:54:55,520:INFO:Declaring metric variables
2024-12-05 21:54:55,533:INFO:Importing untrained model
2024-12-05 21:54:55,546:INFO:Extreme Gradient Boosting Imported successfully
2024-12-05 21:54:55,559:INFO:Starting cross validation
2024-12-05 21:54:55,572:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:54:59,640:INFO:Calculating mean and std
2024-12-05 21:54:59,647:INFO:Creating metrics dataframe
2024-12-05 21:54:59,675:INFO:Uploading results into container
2024-12-05 21:54:59,681:INFO:Uploading model into container now
2024-12-05 21:54:59,684:INFO:_master_model_container: 13
2024-12-05 21:54:59,684:INFO:_display_container: 2
2024-12-05 21:54:59,689:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-12-05 21:54:59,690:INFO:create_model() successfully completed......................................
2024-12-05 21:54:59,897:INFO:SubProcess create_model() end ==================================
2024-12-05 21:54:59,897:INFO:Creating metrics dataframe
2024-12-05 21:54:59,923:INFO:Initializing Light Gradient Boosting Machine
2024-12-05 21:54:59,923:INFO:Total runtime is 1.187726068496704 minutes
2024-12-05 21:54:59,929:INFO:SubProcess create_model() called ==================================
2024-12-05 21:54:59,929:INFO:Initializing create_model()
2024-12-05 21:54:59,930:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E132B7220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:54:59,930:INFO:Checking exceptions
2024-12-05 21:54:59,930:INFO:Importing libraries
2024-12-05 21:54:59,930:INFO:Copying training dataset
2024-12-05 21:54:59,969:INFO:Defining folds
2024-12-05 21:54:59,969:INFO:Declaring metric variables
2024-12-05 21:54:59,976:INFO:Importing untrained model
2024-12-05 21:54:59,986:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-05 21:55:00,004:INFO:Starting cross validation
2024-12-05 21:55:00,032:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:55:03,960:INFO:Calculating mean and std
2024-12-05 21:55:03,961:INFO:Creating metrics dataframe
2024-12-05 21:55:03,964:INFO:Uploading results into container
2024-12-05 21:55:03,965:INFO:Uploading model into container now
2024-12-05 21:55:03,965:INFO:_master_model_container: 14
2024-12-05 21:55:03,965:INFO:_display_container: 2
2024-12-05 21:55:03,966:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-05 21:55:03,966:INFO:create_model() successfully completed......................................
2024-12-05 21:55:04,043:INFO:SubProcess create_model() end ==================================
2024-12-05 21:55:04,044:INFO:Creating metrics dataframe
2024-12-05 21:55:04,057:INFO:Initializing CatBoost Classifier
2024-12-05 21:55:04,057:INFO:Total runtime is 1.2566258231798806 minutes
2024-12-05 21:55:04,062:INFO:SubProcess create_model() called ==================================
2024-12-05 21:55:04,062:INFO:Initializing create_model()
2024-12-05 21:55:04,063:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E132B7220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:55:04,063:INFO:Checking exceptions
2024-12-05 21:55:04,063:INFO:Importing libraries
2024-12-05 21:55:04,063:INFO:Copying training dataset
2024-12-05 21:55:04,085:INFO:Defining folds
2024-12-05 21:55:04,085:INFO:Declaring metric variables
2024-12-05 21:55:04,089:INFO:Importing untrained model
2024-12-05 21:55:04,093:INFO:CatBoost Classifier Imported successfully
2024-12-05 21:55:04,103:INFO:Starting cross validation
2024-12-05 21:55:04,164:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:55:28,840:INFO:Calculating mean and std
2024-12-05 21:55:28,844:INFO:Creating metrics dataframe
2024-12-05 21:55:28,858:INFO:Uploading results into container
2024-12-05 21:55:28,861:INFO:Uploading model into container now
2024-12-05 21:55:28,862:INFO:_master_model_container: 15
2024-12-05 21:55:28,863:INFO:_display_container: 2
2024-12-05 21:55:28,863:INFO:<catboost.core.CatBoostClassifier object at 0x0000023E143E5F60>
2024-12-05 21:55:28,864:INFO:create_model() successfully completed......................................
2024-12-05 21:55:29,093:INFO:SubProcess create_model() end ==================================
2024-12-05 21:55:29,093:INFO:Creating metrics dataframe
2024-12-05 21:55:29,128:INFO:Initializing Dummy Classifier
2024-12-05 21:55:29,128:INFO:Total runtime is 1.6744894305864968 minutes
2024-12-05 21:55:29,133:INFO:SubProcess create_model() called ==================================
2024-12-05 21:55:29,133:INFO:Initializing create_model()
2024-12-05 21:55:29,133:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E132B7220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:55:29,133:INFO:Checking exceptions
2024-12-05 21:55:29,133:INFO:Importing libraries
2024-12-05 21:55:29,133:INFO:Copying training dataset
2024-12-05 21:55:29,168:INFO:Defining folds
2024-12-05 21:55:29,168:INFO:Declaring metric variables
2024-12-05 21:55:29,173:INFO:Importing untrained model
2024-12-05 21:55:29,192:INFO:Dummy Classifier Imported successfully
2024-12-05 21:55:29,213:INFO:Starting cross validation
2024-12-05 21:55:29,229:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 21:55:31,913:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 21:55:31,953:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 21:55:31,981:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 21:55:32,078:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 21:55:32,080:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 21:55:32,209:INFO:Calculating mean and std
2024-12-05 21:55:32,213:INFO:Creating metrics dataframe
2024-12-05 21:55:32,227:INFO:Uploading results into container
2024-12-05 21:55:32,229:INFO:Uploading model into container now
2024-12-05 21:55:32,231:INFO:_master_model_container: 16
2024-12-05 21:55:32,231:INFO:_display_container: 2
2024-12-05 21:55:32,233:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-12-05 21:55:32,233:INFO:create_model() successfully completed......................................
2024-12-05 21:55:32,465:INFO:SubProcess create_model() end ==================================
2024-12-05 21:55:32,467:INFO:Creating metrics dataframe
2024-12-05 21:55:32,581:INFO:Initializing create_model()
2024-12-05 21:55:32,581:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:55:32,582:INFO:Checking exceptions
2024-12-05 21:55:32,586:INFO:Importing libraries
2024-12-05 21:55:32,587:INFO:Copying training dataset
2024-12-05 21:55:32,635:INFO:Defining folds
2024-12-05 21:55:32,635:INFO:Declaring metric variables
2024-12-05 21:55:32,635:INFO:Importing untrained model
2024-12-05 21:55:32,635:INFO:Declaring custom model
2024-12-05 21:55:32,636:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:55:32,646:INFO:Cross validation set to False
2024-12-05 21:55:32,646:INFO:Fitting Model
2024-12-05 21:55:33,157:INFO:[LightGBM] [Info] Number of positive: 11101, number of negative: 11101
2024-12-05 21:55:33,162:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.004817 seconds.
2024-12-05 21:55:33,163:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-12-05 21:55:33,163:INFO:[LightGBM] [Info] Total Bins 9997
2024-12-05 21:55:33,163:INFO:[LightGBM] [Info] Number of data points in the train set: 22202, number of used features: 46
2024-12-05 21:55:33,163:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2024-12-05 21:55:34,001:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:55:34,001:INFO:create_model() successfully completed......................................
2024-12-05 21:55:34,167:INFO:_master_model_container: 16
2024-12-05 21:55:34,167:INFO:_display_container: 2
2024-12-05 21:55:34,168:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:55:34,168:INFO:compare_models() successfully completed......................................
2024-12-05 21:55:34,220:INFO:Initializing predict_model()
2024-12-05 21:55:34,220:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E1DD0DB40>)
2024-12-05 21:55:34,220:INFO:Checking exceptions
2024-12-05 21:55:34,220:INFO:Preloading libraries
2024-12-05 21:55:34,222:INFO:Set up data.
2024-12-05 21:55:34,261:INFO:Set up index.
2024-12-05 21:55:34,779:INFO:Initializing finalize_model()
2024-12-05 21:55:34,779:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-05 21:55:34,779:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 21:55:34,794:INFO:Initializing create_model()
2024-12-05 21:55:34,794:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 21:55:34,794:INFO:Checking exceptions
2024-12-05 21:55:34,796:INFO:Importing libraries
2024-12-05 21:55:34,796:INFO:Copying training dataset
2024-12-05 21:55:34,798:INFO:Defining folds
2024-12-05 21:55:34,798:INFO:Declaring metric variables
2024-12-05 21:55:34,801:INFO:Importing untrained model
2024-12-05 21:55:34,801:INFO:Declaring custom model
2024-12-05 21:55:34,802:INFO:Extra Trees Classifier Imported successfully
2024-12-05 21:55:34,813:INFO:Cross validation set to False
2024-12-05 21:55:34,813:INFO:Fitting Model
2024-12-05 21:55:35,673:INFO:[LightGBM] [Info] Number of positive: 15859, number of negative: 15859
2024-12-05 21:55:35,681:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.006180 seconds.
2024-12-05 21:55:35,681:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-12-05 21:55:35,681:INFO:[LightGBM] [Info] Total Bins 10085
2024-12-05 21:55:35,681:INFO:[LightGBM] [Info] Number of data points in the train set: 31718, number of used features: 46
2024-12-05 21:55:35,681:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2024-12-05 21:55:36,826:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 21:55:36,827:INFO:create_model() successfully completed......................................
2024-12-05 21:55:36,938:INFO:_master_model_container: 16
2024-12-05 21:55:36,938:INFO:_display_container: 3
2024-12-05 21:55:36,973:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 21:55:36,973:INFO:finalize_model() successfully completed......................................
2024-12-05 21:55:37,150:INFO:Initializing predict_model()
2024-12-05 21:55:37,150:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E1DD0DB40>)
2024-12-05 21:55:37,151:INFO:Checking exceptions
2024-12-05 21:55:37,151:INFO:Preloading libraries
2024-12-05 21:55:37,153:INFO:Set up data.
2024-12-05 21:55:37,182:INFO:Set up index.
2024-12-05 21:55:37,539:INFO:Initializing predict_model()
2024-12-05 21:55:37,540:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E13546200>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E1720ADD0>)
2024-12-05 21:55:37,540:INFO:Checking exceptions
2024-12-05 21:55:37,540:INFO:Preloading libraries
2024-12-05 21:55:37,542:INFO:Set up data.
2024-12-05 21:55:37,573:INFO:Set up index.
2024-12-05 21:59:36,467:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 21:59:37,695:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 21:59:41,011:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 21:59:42,117:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 21:59:43,198:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 21:59:46,468:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 21:59:47,547:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 21:59:48,711:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 21:59:51,953:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 21:59:53,011:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 21:59:54,207:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 21:59:56,786:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 21:59:57,869:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 21:59:59,058:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:01,682:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:02,779:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:03,953:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:06,465:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:07,570:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:08,727:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:12,007:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:13,082:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:14,269:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:17,507:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:18,585:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:19,752:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:22,988:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:24,061:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:25,227:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:27,708:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:28,785:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:30,145:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:32,757:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:33,937:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:35,187:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:38,131:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:39,266:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:40,514:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:43,185:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:44,327:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:45,579:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:48,121:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:49,204:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:50,390:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:52,909:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:53,994:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:55,185:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:58,494:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:00:59,942:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:01,518:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:05,726:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:06,844:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:08,202:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:12,026:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:13,104:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:14,301:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:17,944:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:19,109:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:20,388:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:23,792:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:24,884:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:26,109:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:30,274:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:31,386:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:32,599:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:35,938:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:37,052:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:38,254:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:41,558:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:42,667:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:43,854:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:47,230:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:48,317:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:49,567:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:52,834:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:53,943:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:55,131:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:58,442:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:01:59,527:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:00,717:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:04,004:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:05,086:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:06,274:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:08,777:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:09,864:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:11,067:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:13,565:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:14,808:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:15,994:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:19,064:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:20,260:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:21,454:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:23,965:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:25,030:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:26,181:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:28,621:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:29,666:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:30,883:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:33,890:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:34,999:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:36,257:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:38,847:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:39,944:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:41,184:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:43,751:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:44,838:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:46,052:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:48,624:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:49,825:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:51,153:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:53,999:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:55,125:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:56,304:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:58,797:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:02:59,856:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:34: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_mean = df.groupby('wallet_address')[col].apply(

2024-12-05 22:03:01,009:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:40: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  rolling_std = df.groupby('wallet_address')[col].apply(

2024-12-05 22:03:03,624:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2939955549.py:48: FutureWarning: Not prepending group keys to the result index of transform-like apply. In the future, the group keys will be included in the index, regardless of whether the applied function returns a like-indexed object.
To preserve the previous behavior, use

	>>> .groupby(..., group_keys=False)

To adopt the future behavior and silence this warning, use 

	>>> .groupby(..., group_keys=True)
  variacion_col = df.groupby('wallet_address')[col].apply(

2024-12-05 22:06:39,696:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:06:41,357:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:06:43,244:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:06:43,244:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:06:43,253:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:06:44,952:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:06:46,727:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:06:46,727:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:06:46,766:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:06:48,412:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:06:50,173:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:06:50,177:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:06:50,184:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:06:51,944:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:06:53,727:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:06:53,727:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:06:53,739:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:06:55,419:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:06:57,217:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:06:57,218:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:06:57,244:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:06:58,882:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:07:00,633:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:07:00,636:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:07:00,644:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:07:02,383:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:07:04,168:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:07:04,168:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:07:04,179:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:07:05,826:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:07:07,727:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:07:07,727:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:07:07,763:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:07:09,368:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:07:11,143:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:07:11,143:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:07:11,153:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:07:12,827:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:07:14,594:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:07:14,595:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:07:14,603:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:07:16,365:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:07:18,143:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:07:18,152:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:07:18,183:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:07:19,853:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:07:21,652:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:07:21,653:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:07:21,662:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:07:23,333:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:07:25,285:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:07:25,285:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:07:25,299:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:07:26,953:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:07:28,713:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:07:28,713:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:07:28,743:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:07:30,559:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:07:32,577:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:07:32,579:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:07:32,584:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:07:34,237:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:07:36,026:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:07:36,026:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:07:36,037:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:07:37,709:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:07:39,479:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:07:39,480:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:07:39,518:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:07:41,279:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:07:42,953:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:07:42,953:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:07:42,965:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:07:44,533:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:07:46,226:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:07:46,226:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:07:46,238:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:07:47,809:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:07:49,584:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:07:49,584:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:07:49,623:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:07:51,183:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:07:52,867:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:07:52,867:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:07:52,880:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:07:54,395:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:07:56,017:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:07:56,023:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:07:56,026:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:07:57,654:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:07:59,353:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:07:59,353:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:07:59,392:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:08:00,943:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:08:02,633:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:08:02,635:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:08:02,643:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:08:04,200:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:08:06,138:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:08:06,140:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:08:06,148:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:08:07,709:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:08:09,384:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:08:09,384:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:08:09,417:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:08:11,084:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:08:12,779:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:08:12,781:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:08:12,784:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:08:14,339:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:08:16,025:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:08:16,025:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:08:16,039:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:08:17,598:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:08:19,266:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:08:19,267:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:08:19,300:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:08:20,918:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:08:22,594:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:08:22,595:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:08:22,603:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:08:24,148:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:08:25,966:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:08:25,968:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:08:25,976:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:08:27,508:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:08:29,177:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:08:29,179:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:08:29,208:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:08:30,752:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:08:32,409:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:08:32,409:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:08:32,417:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:08:34,066:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:08:35,808:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:08:35,810:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:08:35,816:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:08:37,353:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:08:39,109:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:08:39,109:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:08:39,143:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:08:40,666:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:08:42,349:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:08:42,353:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:08:42,360:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:08:43,883:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:08:45,539:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:08:45,541:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:08:45,549:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:08:47,273:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:08:48,941:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:08:48,942:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:08:48,974:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:08:50,508:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:08:52,191:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:08:52,192:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:08:52,199:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:08:53,733:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:08:55,497:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:08:55,499:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:08:55,507:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:08:57,052:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:08:58,715:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:08:58,716:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:08:58,749:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:09:00,293:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:09:01,965:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:09:01,966:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:09:01,975:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:09:03,649:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:09:05,308:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:09:05,308:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:09:05,316:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:09:06,866:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:09:08,547:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:09:08,549:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:09:08,581:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:09:10,174:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:09:11,948:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:09:11,948:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:09:11,959:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:09:13,538:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:09:15,248:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:09:15,253:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:09:15,261:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:09:16,803:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:09:18,535:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:09:18,542:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:09:18,574:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:09:20,242:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:09:21,956:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:09:21,956:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:09:21,963:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:09:23,533:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:09:25,347:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:09:25,352:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:09:25,356:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:09:26,933:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:09:28,588:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:09:28,588:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:09:28,622:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:09:30,302:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:09:32,003:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:09:32,003:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:09:32,017:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:09:33,865:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:09:36,149:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:09:36,149:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:09:36,157:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:09:37,906:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:09:39,592:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:09:39,592:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:09:39,632:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:09:41,198:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:09:42,998:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:09:42,998:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:09:43,007:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:09:44,572:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:09:46,295:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:09:46,295:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:09:46,307:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:09:47,865:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:09:49,529:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:09:49,530:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:09:49,563:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:09:51,232:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:09:52,929:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:09:52,931:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:09:52,940:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:09:54,528:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:09:56,198:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:09:56,203:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:09:56,206:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:09:57,760:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:09:59,543:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:09:59,545:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:09:59,573:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:10:01,098:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:10:02,759:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:10:02,760:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:10:02,766:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:10:04,292:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:10:05,949:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:10:05,949:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:10:05,959:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:10:07,598:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:10:09,260:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:10:09,261:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:10:09,293:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:10:10,815:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:10:12,473:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:10:12,473:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:10:12,482:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:10:14,030:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:10:16,292:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:10:16,294:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:10:16,307:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:10:18,296:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:10:20,597:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:10:20,599:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:10:20,634:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:10:22,352:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:10:24,412:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:10:24,412:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:10:24,424:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:10:26,248:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:10:28,253:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:10:28,255:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:10:28,265:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:10:29,842:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:10:31,567:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:10:31,572:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:10:31,602:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:10:33,192:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:10:34,912:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:10:34,912:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:10:34,923:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:10:36,606:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:10:38,322:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:10:38,322:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:10:38,332:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:10:39,892:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:10:41,552:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:10:41,555:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:10:41,593:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:10:43,257:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:10:44,952:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:10:44,956:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:10:44,963:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:10:46,512:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:10:48,322:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:10:48,322:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:10:48,335:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:10:49,927:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:10:51,591:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:10:51,593:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:10:51,622:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:10:53,288:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:10:54,964:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:10:54,964:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:10:54,974:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:10:56,522:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:10:58,197:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:10:58,197:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:10:58,205:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:10:59,882:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:11:01,558:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:11:01,559:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:11:01,597:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:11:03,178:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:11:04,849:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:11:04,850:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:11:04,858:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:11:06,413:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:11:08,205:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:11:08,205:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:11:08,213:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:11:09,796:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:11:11,513:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:11:11,513:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:11:11,546:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:11:13,097:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:11:14,775:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:11:14,776:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:11:14,782:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:11:16,490:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:11:18,274:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:11:18,275:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:11:18,282:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:11:19,838:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:11:21,507:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:11:21,507:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:11:21,546:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:11:23,108:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:11:24,916:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:11:24,916:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:11:24,924:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:11:26,489:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:11:28,157:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:11:28,159:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:11:28,167:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:11:29,693:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:11:31,342:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:11:31,342:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:11:31,377:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:11:33,059:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:11:34,730:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:11:34,732:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:11:34,738:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:11:36,282:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:11:37,979:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:11:37,982:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:11:37,988:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:11:39,577:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:11:41,472:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:11:41,472:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:11:41,513:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:11:43,627:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:11:45,822:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:11:45,822:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:11:45,838:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:11:48,047:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:11:50,652:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:11:50,662:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:11:50,672:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:11:52,913:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:11:55,024:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:11:55,025:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:11:55,071:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:11:57,272:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:11:59,352:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:11:59,354:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:11:59,363:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:12:01,642:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:12:03,682:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:12:03,682:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:12:03,699:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:12:05,377:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:12:07,556:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:12:07,563:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:12:07,605:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:12:09,762:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:12:11,605:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:12:11,606:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:12:11,615:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:12:13,527:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:12:15,662:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:12:15,664:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:12:15,673:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:12:17,592:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:12:19,827:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:12:19,832:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:12:19,862:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:12:21,578:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:12:23,294:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:12:23,295:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:12:23,304:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:12:24,975:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:12:27,197:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:12:27,197:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:12:27,213:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:12:29,295:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:12:31,332:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:12:31,332:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:12:31,372:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:12:33,342:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:12:35,092:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:12:35,092:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:12:35,105:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:12:36,805:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:12:38,542:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:12:38,542:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:12:38,552:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:12:40,148:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:12:41,853:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:12:41,861:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:12:41,895:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:12:43,489:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:12:45,295:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:12:45,303:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:12:45,311:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:12:46,894:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:12:48,590:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:12:48,592:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:12:48,595:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:12:50,185:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:12:52,230:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:12:52,233:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:12:52,269:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:12:54,214:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:12:56,090:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:12:56,092:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:12:56,095:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:12:58,036:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:12:59,984:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:12:59,985:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:12:59,994:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:37: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_shift_{i}'] = shift_col

2024-12-05 22:13:01,630:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:45: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_mm_{i}'] = rolling_mean

2024-12-05 22:13:03,472:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:53: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_desv_{i}'] = rolling_std

2024-12-05 22:13:03,472:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2547726123.py:59: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:14:35,919:INFO:PyCaret ClassificationExperiment
2024-12-05 22:14:35,919:INFO:Logging name: clf-default-name
2024-12-05 22:14:35,919:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-05 22:14:35,919:INFO:version 3.3.2
2024-12-05 22:14:35,919:INFO:Initializing setup()
2024-12-05 22:14:35,919:INFO:self.USI: 67cf
2024-12-05 22:14:35,919:INFO:self._variable_keys: {'_available_plots', 'logging_param', 'is_multiclass', 'fold_generator', 'y', 'data', 'fold_groups_param', 'memory', 'X', 'target_param', 'pipeline', 'y_train', '_ml_usecase', 'seed', 'X_train', 'html_param', 'USI', 'X_test', 'exp_name_log', 'exp_id', 'fix_imbalance', 'fold_shuffle_param', 'gpu_param', 'gpu_n_jobs_param', 'y_test', 'log_plots_param', 'idx', 'n_jobs_param'}
2024-12-05 22:14:35,921:INFO:Checking environment
2024-12-05 22:14:35,921:INFO:python_version: 3.10.11
2024-12-05 22:14:35,921:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-12-05 22:14:35,921:INFO:machine: AMD64
2024-12-05 22:14:35,921:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-05 22:14:35,924:INFO:Memory: svmem(total=17041244160, available=6274572288, percent=63.2, used=10766671872, free=6274572288)
2024-12-05 22:14:35,924:INFO:Physical Core: 4
2024-12-05 22:14:35,924:INFO:Logical Core: 8
2024-12-05 22:14:35,924:INFO:Checking libraries
2024-12-05 22:14:35,924:INFO:System:
2024-12-05 22:14:35,924:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-12-05 22:14:35,924:INFO:executable: c:\Users\diego\AppData\Local\Programs\Python\Python310\python.exe
2024-12-05 22:14:35,924:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-05 22:14:35,924:INFO:PyCaret required dependencies:
2024-12-05 22:14:35,925:INFO:                 pip: 24.2
2024-12-05 22:14:35,925:INFO:          setuptools: 65.5.0
2024-12-05 22:14:35,925:INFO:             pycaret: 3.3.2
2024-12-05 22:14:35,925:INFO:             IPython: 8.26.0
2024-12-05 22:14:35,925:INFO:          ipywidgets: 8.1.5
2024-12-05 22:14:35,925:INFO:                tqdm: 4.66.5
2024-12-05 22:14:35,925:INFO:               numpy: 1.26.4
2024-12-05 22:14:35,925:INFO:              pandas: 1.5.3
2024-12-05 22:14:35,925:INFO:              jinja2: 3.1.4
2024-12-05 22:14:35,925:INFO:               scipy: 1.11.4
2024-12-05 22:14:35,925:INFO:              joblib: 1.3.2
2024-12-05 22:14:35,925:INFO:             sklearn: 1.4.2
2024-12-05 22:14:35,925:INFO:                pyod: 2.0.2
2024-12-05 22:14:35,925:INFO:            imblearn: 0.12.3
2024-12-05 22:14:35,925:INFO:   category_encoders: 2.6.4
2024-12-05 22:14:35,925:INFO:            lightgbm: 4.5.0
2024-12-05 22:14:35,925:INFO:               numba: 0.60.0
2024-12-05 22:14:35,925:INFO:            requests: 2.32.3
2024-12-05 22:14:35,925:INFO:          matplotlib: 3.7.5
2024-12-05 22:14:35,925:INFO:          scikitplot: 0.3.7
2024-12-05 22:14:35,925:INFO:         yellowbrick: 1.5
2024-12-05 22:14:35,925:INFO:              plotly: 5.24.1
2024-12-05 22:14:35,925:INFO:    plotly-resampler: Not installed
2024-12-05 22:14:35,925:INFO:             kaleido: 0.2.1
2024-12-05 22:14:35,925:INFO:           schemdraw: 0.15
2024-12-05 22:14:35,925:INFO:         statsmodels: 0.14.4
2024-12-05 22:14:35,925:INFO:              sktime: 0.26.0
2024-12-05 22:14:35,925:INFO:               tbats: 1.1.3
2024-12-05 22:14:35,925:INFO:            pmdarima: 2.0.4
2024-12-05 22:14:35,925:INFO:              psutil: 6.0.0
2024-12-05 22:14:35,925:INFO:          markupsafe: 2.1.5
2024-12-05 22:14:35,925:INFO:             pickle5: Not installed
2024-12-05 22:14:35,925:INFO:         cloudpickle: 3.1.0
2024-12-05 22:14:35,925:INFO:         deprecation: 2.1.0
2024-12-05 22:14:35,925:INFO:              xxhash: 3.5.0
2024-12-05 22:14:35,925:INFO:           wurlitzer: Not installed
2024-12-05 22:14:35,925:INFO:PyCaret optional dependencies:
2024-12-05 22:14:35,925:INFO:                shap: 0.44.0
2024-12-05 22:14:35,925:INFO:           interpret: 0.5.0
2024-12-05 22:14:35,925:INFO:                umap: 0.5.6
2024-12-05 22:14:35,925:INFO:     ydata_profiling: 4.11.0
2024-12-05 22:14:35,925:INFO:  explainerdashboard: 0.4.7
2024-12-05 22:14:35,925:INFO:             autoviz: Not installed
2024-12-05 22:14:35,925:INFO:           fairlearn: 0.7.0
2024-12-05 22:14:35,925:INFO:          deepchecks: Not installed
2024-12-05 22:14:35,925:INFO:             xgboost: 2.1.2
2024-12-05 22:14:35,925:INFO:            catboost: 1.2.7
2024-12-05 22:14:35,925:INFO:              kmodes: Not installed
2024-12-05 22:14:35,925:INFO:             mlxtend: Not installed
2024-12-05 22:14:35,925:INFO:       statsforecast: Not installed
2024-12-05 22:14:35,925:INFO:        tune_sklearn: Not installed
2024-12-05 22:14:35,925:INFO:                 ray: Not installed
2024-12-05 22:14:35,925:INFO:            hyperopt: Not installed
2024-12-05 22:14:35,925:INFO:              optuna: 4.0.0
2024-12-05 22:14:35,925:INFO:               skopt: Not installed
2024-12-05 22:14:35,925:INFO:              mlflow: 2.18.0
2024-12-05 22:14:35,925:INFO:              gradio: Not installed
2024-12-05 22:14:35,925:INFO:             fastapi: Not installed
2024-12-05 22:14:35,925:INFO:             uvicorn: Not installed
2024-12-05 22:14:35,925:INFO:              m2cgen: Not installed
2024-12-05 22:14:35,925:INFO:           evidently: Not installed
2024-12-05 22:14:35,925:INFO:               fugue: Not installed
2024-12-05 22:14:35,925:INFO:           streamlit: 1.39.0
2024-12-05 22:14:35,925:INFO:             prophet: Not installed
2024-12-05 22:14:35,925:INFO:None
2024-12-05 22:14:35,925:INFO:Set up data.
2024-12-05 22:14:36,387:INFO:Set up folding strategy.
2024-12-05 22:14:36,387:INFO:Set up train/test split.
2024-12-05 22:14:36,621:INFO:Set up index.
2024-12-05 22:14:36,631:INFO:Assigning column types.
2024-12-05 22:14:36,841:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-05 22:14:36,884:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 22:14:36,884:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 22:14:36,960:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:14:36,960:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:14:37,011:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 22:14:37,011:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 22:14:37,043:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:14:37,050:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:14:37,051:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-05 22:14:37,103:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 22:14:37,134:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:14:37,134:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:14:37,193:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 22:14:37,220:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:14:37,226:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:14:37,226:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-05 22:14:37,320:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:14:37,320:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:14:37,401:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:14:37,401:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:14:37,401:INFO:Preparing preprocessing pipeline...
2024-12-05 22:14:37,434:INFO:Set up simple imputation.
2024-12-05 22:14:37,518:INFO:Set up encoding of categorical features.
2024-12-05 22:14:37,794:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\numpy\core\fromnumeric.py:88: RuntimeWarning: invalid value encountered in reduce
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)

2024-12-05 22:17:46,652:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\3338940479.py:491: UserWarning: cannot convert float infinity to integer
  warnings.warn(str(e))

2024-12-05 22:27:24,549:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:24,549:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:24,700:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:24,715:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:24,715:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:24,868:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:24,883:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:24,896:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:25,033:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:25,049:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:25,065:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:25,207:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:25,223:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:25,223:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:25,393:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:25,409:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:25,422:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:25,570:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:25,570:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:25,586:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:25,779:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:25,794:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:25,794:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:25,965:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:25,965:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:25,980:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:26,143:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:26,152:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:26,168:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:26,359:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:26,368:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:26,376:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:26,564:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:26,568:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:27:26,585:WARNING:C:\Users\diego\AppData\Local\Temp\ipykernel_9896\2405556327.py:43: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  nuevas_columnas[f'{col}_variacion_{i}'] = variacion_col

2024-12-05 22:34:28,401:INFO:PyCaret ClassificationExperiment
2024-12-05 22:34:28,401:INFO:Logging name: clf-default-name
2024-12-05 22:34:28,401:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-05 22:34:28,401:INFO:version 3.3.2
2024-12-05 22:34:28,401:INFO:Initializing setup()
2024-12-05 22:34:28,401:INFO:self.USI: b81c
2024-12-05 22:34:28,401:INFO:self._variable_keys: {'_available_plots', 'logging_param', 'is_multiclass', 'fold_generator', 'y', 'data', 'fold_groups_param', 'memory', 'X', 'target_param', 'pipeline', 'y_train', '_ml_usecase', 'seed', 'X_train', 'html_param', 'USI', 'X_test', 'exp_name_log', 'exp_id', 'fix_imbalance', 'fold_shuffle_param', 'gpu_param', 'gpu_n_jobs_param', 'y_test', 'log_plots_param', 'idx', 'n_jobs_param'}
2024-12-05 22:34:28,401:INFO:Checking environment
2024-12-05 22:34:28,401:INFO:python_version: 3.10.11
2024-12-05 22:34:28,401:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-12-05 22:34:28,401:INFO:machine: AMD64
2024-12-05 22:34:28,401:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-05 22:34:28,409:INFO:Memory: svmem(total=17041244160, available=5766189056, percent=66.2, used=11275055104, free=5766189056)
2024-12-05 22:34:28,409:INFO:Physical Core: 4
2024-12-05 22:34:28,409:INFO:Logical Core: 8
2024-12-05 22:34:28,409:INFO:Checking libraries
2024-12-05 22:34:28,409:INFO:System:
2024-12-05 22:34:28,409:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-12-05 22:34:28,409:INFO:executable: c:\Users\diego\AppData\Local\Programs\Python\Python310\python.exe
2024-12-05 22:34:28,409:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-05 22:34:28,409:INFO:PyCaret required dependencies:
2024-12-05 22:34:28,409:INFO:                 pip: 24.2
2024-12-05 22:34:28,409:INFO:          setuptools: 65.5.0
2024-12-05 22:34:28,409:INFO:             pycaret: 3.3.2
2024-12-05 22:34:28,409:INFO:             IPython: 8.26.0
2024-12-05 22:34:28,409:INFO:          ipywidgets: 8.1.5
2024-12-05 22:34:28,409:INFO:                tqdm: 4.66.5
2024-12-05 22:34:28,409:INFO:               numpy: 1.26.4
2024-12-05 22:34:28,409:INFO:              pandas: 1.5.3
2024-12-05 22:34:28,409:INFO:              jinja2: 3.1.4
2024-12-05 22:34:28,409:INFO:               scipy: 1.11.4
2024-12-05 22:34:28,409:INFO:              joblib: 1.3.2
2024-12-05 22:34:28,409:INFO:             sklearn: 1.4.2
2024-12-05 22:34:28,409:INFO:                pyod: 2.0.2
2024-12-05 22:34:28,409:INFO:            imblearn: 0.12.3
2024-12-05 22:34:28,409:INFO:   category_encoders: 2.6.4
2024-12-05 22:34:28,409:INFO:            lightgbm: 4.5.0
2024-12-05 22:34:28,409:INFO:               numba: 0.60.0
2024-12-05 22:34:28,409:INFO:            requests: 2.32.3
2024-12-05 22:34:28,409:INFO:          matplotlib: 3.7.5
2024-12-05 22:34:28,409:INFO:          scikitplot: 0.3.7
2024-12-05 22:34:28,409:INFO:         yellowbrick: 1.5
2024-12-05 22:34:28,409:INFO:              plotly: 5.24.1
2024-12-05 22:34:28,409:INFO:    plotly-resampler: Not installed
2024-12-05 22:34:28,409:INFO:             kaleido: 0.2.1
2024-12-05 22:34:28,409:INFO:           schemdraw: 0.15
2024-12-05 22:34:28,409:INFO:         statsmodels: 0.14.4
2024-12-05 22:34:28,409:INFO:              sktime: 0.26.0
2024-12-05 22:34:28,409:INFO:               tbats: 1.1.3
2024-12-05 22:34:28,409:INFO:            pmdarima: 2.0.4
2024-12-05 22:34:28,409:INFO:              psutil: 6.0.0
2024-12-05 22:34:28,409:INFO:          markupsafe: 2.1.5
2024-12-05 22:34:28,409:INFO:             pickle5: Not installed
2024-12-05 22:34:28,409:INFO:         cloudpickle: 3.1.0
2024-12-05 22:34:28,409:INFO:         deprecation: 2.1.0
2024-12-05 22:34:28,409:INFO:              xxhash: 3.5.0
2024-12-05 22:34:28,409:INFO:           wurlitzer: Not installed
2024-12-05 22:34:28,409:INFO:PyCaret optional dependencies:
2024-12-05 22:34:28,409:INFO:                shap: 0.44.0
2024-12-05 22:34:28,409:INFO:           interpret: 0.5.0
2024-12-05 22:34:28,409:INFO:                umap: 0.5.6
2024-12-05 22:34:28,409:INFO:     ydata_profiling: 4.11.0
2024-12-05 22:34:28,409:INFO:  explainerdashboard: 0.4.7
2024-12-05 22:34:28,409:INFO:             autoviz: Not installed
2024-12-05 22:34:28,409:INFO:           fairlearn: 0.7.0
2024-12-05 22:34:28,409:INFO:          deepchecks: Not installed
2024-12-05 22:34:28,409:INFO:             xgboost: 2.1.2
2024-12-05 22:34:28,409:INFO:            catboost: 1.2.7
2024-12-05 22:34:28,409:INFO:              kmodes: Not installed
2024-12-05 22:34:28,409:INFO:             mlxtend: Not installed
2024-12-05 22:34:28,409:INFO:       statsforecast: Not installed
2024-12-05 22:34:28,409:INFO:        tune_sklearn: Not installed
2024-12-05 22:34:28,409:INFO:                 ray: Not installed
2024-12-05 22:34:28,409:INFO:            hyperopt: Not installed
2024-12-05 22:34:28,409:INFO:              optuna: 4.0.0
2024-12-05 22:34:28,409:INFO:               skopt: Not installed
2024-12-05 22:34:28,409:INFO:              mlflow: 2.18.0
2024-12-05 22:34:28,409:INFO:              gradio: Not installed
2024-12-05 22:34:28,409:INFO:             fastapi: Not installed
2024-12-05 22:34:28,409:INFO:             uvicorn: Not installed
2024-12-05 22:34:28,409:INFO:              m2cgen: Not installed
2024-12-05 22:34:28,409:INFO:           evidently: Not installed
2024-12-05 22:34:28,409:INFO:               fugue: Not installed
2024-12-05 22:34:28,409:INFO:           streamlit: 1.39.0
2024-12-05 22:34:28,409:INFO:             prophet: Not installed
2024-12-05 22:34:28,409:INFO:None
2024-12-05 22:34:28,409:INFO:Set up data.
2024-12-05 22:34:28,676:INFO:Set up folding strategy.
2024-12-05 22:34:28,676:INFO:Set up train/test split.
2024-12-05 22:34:28,833:INFO:Set up index.
2024-12-05 22:34:28,835:INFO:Assigning column types.
2024-12-05 22:34:29,058:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-05 22:34:29,116:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 22:34:29,118:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 22:34:29,150:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:34:29,150:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:34:29,198:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 22:34:29,200:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 22:34:29,226:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:34:29,226:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:34:29,226:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-05 22:34:29,274:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 22:34:29,300:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:34:29,300:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:34:29,399:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 22:34:29,430:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:34:29,430:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:34:29,430:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-05 22:34:29,509:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:34:29,516:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:34:29,592:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:34:29,592:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:34:29,592:INFO:Preparing preprocessing pipeline...
2024-12-05 22:34:29,609:INFO:Set up simple imputation.
2024-12-05 22:34:29,658:INFO:Set up encoding of categorical features.
2024-12-05 22:34:30,708:INFO:Finished creating preprocessing pipeline.
2024-12-05 22:34:30,720:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\diego\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_ti...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['wallet_address'],
                                    transformer=TargetEncoder(cols=['wallet_address'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-12-05 22:34:30,720:INFO:Creating final display dataframe.
2024-12-05 22:34:32,489:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            target
2                   Target type            Binary
3           Original data shape      (31007, 413)
4        Transformed data shape      (31007, 413)
5   Transformed train set shape      (21704, 413)
6    Transformed test set shape       (9303, 413)
7              Numeric features               411
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   StratifiedKFold
16                  Fold Number                 5
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  clf-default-name
21                          USI              b81c
2024-12-05 22:34:32,567:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:34:32,567:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:34:32,645:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:34:32,645:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:34:32,645:INFO:setup() successfully completed in 4.3s...............
2024-12-05 22:34:32,692:INFO:Initializing compare_models()
2024-12-05 22:34:32,692:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-05 22:34:32,692:INFO:Checking exceptions
2024-12-05 22:34:32,777:INFO:Preparing display monitor
2024-12-05 22:34:32,810:INFO:Initializing Logistic Regression
2024-12-05 22:34:32,810:INFO:Total runtime is 0.0 minutes
2024-12-05 22:34:32,813:INFO:SubProcess create_model() called ==================================
2024-12-05 22:34:32,814:INFO:Initializing create_model()
2024-12-05 22:34:32,814:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E14361E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:34:32,814:INFO:Checking exceptions
2024-12-05 22:34:32,815:INFO:Importing libraries
2024-12-05 22:34:32,815:INFO:Copying training dataset
2024-12-05 22:34:33,050:INFO:Defining folds
2024-12-05 22:34:33,050:INFO:Declaring metric variables
2024-12-05 22:34:33,050:INFO:Importing untrained model
2024-12-05 22:34:33,065:INFO:Logistic Regression Imported successfully
2024-12-05 22:34:33,065:INFO:Starting cross validation
2024-12-05 22:34:33,065:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:35:00,202:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-12-05 22:35:00,533:INFO:Calculating mean and std
2024-12-05 22:35:00,533:INFO:Creating metrics dataframe
2024-12-05 22:35:00,533:INFO:Uploading results into container
2024-12-05 22:35:00,533:INFO:Uploading model into container now
2024-12-05 22:35:00,533:INFO:_master_model_container: 1
2024-12-05 22:35:00,533:INFO:_display_container: 2
2024-12-05 22:35:00,533:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-05 22:35:00,533:INFO:create_model() successfully completed......................................
2024-12-05 22:35:00,698:INFO:SubProcess create_model() end ==================================
2024-12-05 22:35:00,698:INFO:Creating metrics dataframe
2024-12-05 22:35:00,707:INFO:Initializing K Neighbors Classifier
2024-12-05 22:35:00,707:INFO:Total runtime is 0.4649545113245646 minutes
2024-12-05 22:35:00,710:INFO:SubProcess create_model() called ==================================
2024-12-05 22:35:00,710:INFO:Initializing create_model()
2024-12-05 22:35:00,710:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E14361E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:35:00,710:INFO:Checking exceptions
2024-12-05 22:35:00,710:INFO:Importing libraries
2024-12-05 22:35:00,710:INFO:Copying training dataset
2024-12-05 22:35:00,815:INFO:Defining folds
2024-12-05 22:35:00,815:INFO:Declaring metric variables
2024-12-05 22:35:00,815:INFO:Importing untrained model
2024-12-05 22:35:00,825:INFO:K Neighbors Classifier Imported successfully
2024-12-05 22:35:00,825:INFO:Starting cross validation
2024-12-05 22:35:00,833:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:35:11,315:INFO:Calculating mean and std
2024-12-05 22:35:11,315:INFO:Creating metrics dataframe
2024-12-05 22:35:11,315:INFO:Uploading results into container
2024-12-05 22:35:11,315:INFO:Uploading model into container now
2024-12-05 22:35:11,315:INFO:_master_model_container: 2
2024-12-05 22:35:11,315:INFO:_display_container: 2
2024-12-05 22:35:11,324:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-05 22:35:11,324:INFO:create_model() successfully completed......................................
2024-12-05 22:35:11,532:INFO:SubProcess create_model() end ==================================
2024-12-05 22:35:11,532:INFO:Creating metrics dataframe
2024-12-05 22:35:11,540:INFO:Initializing Naive Bayes
2024-12-05 22:35:11,540:INFO:Total runtime is 0.6455066680908204 minutes
2024-12-05 22:35:11,543:INFO:SubProcess create_model() called ==================================
2024-12-05 22:35:11,543:INFO:Initializing create_model()
2024-12-05 22:35:11,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E14361E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:35:11,543:INFO:Checking exceptions
2024-12-05 22:35:11,544:INFO:Importing libraries
2024-12-05 22:35:11,544:INFO:Copying training dataset
2024-12-05 22:35:11,657:INFO:Defining folds
2024-12-05 22:35:11,657:INFO:Declaring metric variables
2024-12-05 22:35:11,657:INFO:Importing untrained model
2024-12-05 22:35:11,667:INFO:Naive Bayes Imported successfully
2024-12-05 22:35:11,674:INFO:Starting cross validation
2024-12-05 22:35:11,674:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:35:14,383:INFO:Calculating mean and std
2024-12-05 22:35:14,383:INFO:Creating metrics dataframe
2024-12-05 22:35:14,383:INFO:Uploading results into container
2024-12-05 22:35:14,390:INFO:Uploading model into container now
2024-12-05 22:35:14,391:INFO:_master_model_container: 3
2024-12-05 22:35:14,391:INFO:_display_container: 2
2024-12-05 22:35:14,391:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-05 22:35:14,391:INFO:create_model() successfully completed......................................
2024-12-05 22:35:14,600:INFO:SubProcess create_model() end ==================================
2024-12-05 22:35:14,600:INFO:Creating metrics dataframe
2024-12-05 22:35:14,611:INFO:Initializing Decision Tree Classifier
2024-12-05 22:35:14,611:INFO:Total runtime is 0.6966783364613851 minutes
2024-12-05 22:35:14,614:INFO:SubProcess create_model() called ==================================
2024-12-05 22:35:14,615:INFO:Initializing create_model()
2024-12-05 22:35:14,615:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E14361E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:35:14,615:INFO:Checking exceptions
2024-12-05 22:35:14,615:INFO:Importing libraries
2024-12-05 22:35:14,616:INFO:Copying training dataset
2024-12-05 22:35:14,750:INFO:Defining folds
2024-12-05 22:35:14,750:INFO:Declaring metric variables
2024-12-05 22:35:14,754:INFO:Importing untrained model
2024-12-05 22:35:14,760:INFO:Decision Tree Classifier Imported successfully
2024-12-05 22:35:14,769:INFO:Starting cross validation
2024-12-05 22:35:14,772:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:35:35,979:INFO:Calculating mean and std
2024-12-05 22:35:35,983:INFO:Creating metrics dataframe
2024-12-05 22:35:35,996:INFO:Uploading results into container
2024-12-05 22:35:35,997:INFO:Uploading model into container now
2024-12-05 22:35:36,000:INFO:_master_model_container: 4
2024-12-05 22:35:36,000:INFO:_display_container: 2
2024-12-05 22:35:36,002:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-12-05 22:35:36,002:INFO:create_model() successfully completed......................................
2024-12-05 22:35:36,277:INFO:SubProcess create_model() end ==================================
2024-12-05 22:35:36,277:INFO:Creating metrics dataframe
2024-12-05 22:35:36,306:INFO:Initializing SVM - Linear Kernel
2024-12-05 22:35:36,306:INFO:Total runtime is 1.058265753587087 minutes
2024-12-05 22:35:36,316:INFO:SubProcess create_model() called ==================================
2024-12-05 22:35:36,317:INFO:Initializing create_model()
2024-12-05 22:35:36,317:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E14361E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:35:36,318:INFO:Checking exceptions
2024-12-05 22:35:36,318:INFO:Importing libraries
2024-12-05 22:35:36,318:INFO:Copying training dataset
2024-12-05 22:35:36,612:INFO:Defining folds
2024-12-05 22:35:36,612:INFO:Declaring metric variables
2024-12-05 22:35:36,621:INFO:Importing untrained model
2024-12-05 22:35:36,634:INFO:SVM - Linear Kernel Imported successfully
2024-12-05 22:35:36,658:INFO:Starting cross validation
2024-12-05 22:35:36,663:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:35:43,611:INFO:Calculating mean and std
2024-12-05 22:35:43,617:INFO:Creating metrics dataframe
2024-12-05 22:35:43,641:INFO:Uploading results into container
2024-12-05 22:35:43,646:INFO:Uploading model into container now
2024-12-05 22:35:43,651:INFO:_master_model_container: 5
2024-12-05 22:35:43,651:INFO:_display_container: 2
2024-12-05 22:35:43,654:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-05 22:35:43,655:INFO:create_model() successfully completed......................................
2024-12-05 22:35:44,094:INFO:SubProcess create_model() end ==================================
2024-12-05 22:35:44,094:INFO:Creating metrics dataframe
2024-12-05 22:35:44,142:INFO:Initializing Ridge Classifier
2024-12-05 22:35:44,142:INFO:Total runtime is 1.1888623754183452 minutes
2024-12-05 22:35:44,151:INFO:SubProcess create_model() called ==================================
2024-12-05 22:35:44,151:INFO:Initializing create_model()
2024-12-05 22:35:44,151:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E14361E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:35:44,152:INFO:Checking exceptions
2024-12-05 22:35:44,152:INFO:Importing libraries
2024-12-05 22:35:44,152:INFO:Copying training dataset
2024-12-05 22:35:44,329:INFO:Defining folds
2024-12-05 22:35:44,329:INFO:Declaring metric variables
2024-12-05 22:35:44,333:INFO:Importing untrained model
2024-12-05 22:35:44,339:INFO:Ridge Classifier Imported successfully
2024-12-05 22:35:44,349:INFO:Starting cross validation
2024-12-05 22:35:44,352:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:35:46,505:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.05847e-46): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-12-05 22:35:46,522:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.17412e-51): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-12-05 22:35:46,545:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.18638e-51): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-12-05 22:35:46,547:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.16787e-51): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-12-05 22:35:48,641:INFO:Calculating mean and std
2024-12-05 22:35:48,643:INFO:Creating metrics dataframe
2024-12-05 22:35:48,646:INFO:Uploading results into container
2024-12-05 22:35:48,647:INFO:Uploading model into container now
2024-12-05 22:35:48,647:INFO:_master_model_container: 6
2024-12-05 22:35:48,647:INFO:_display_container: 2
2024-12-05 22:35:48,649:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-12-05 22:35:48,649:INFO:create_model() successfully completed......................................
2024-12-05 22:35:48,818:INFO:SubProcess create_model() end ==================================
2024-12-05 22:35:48,818:INFO:Creating metrics dataframe
2024-12-05 22:35:48,830:INFO:Initializing Random Forest Classifier
2024-12-05 22:35:48,830:INFO:Total runtime is 1.2670084317525228 minutes
2024-12-05 22:35:48,835:INFO:SubProcess create_model() called ==================================
2024-12-05 22:35:48,835:INFO:Initializing create_model()
2024-12-05 22:35:48,835:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E14361E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:35:48,835:INFO:Checking exceptions
2024-12-05 22:35:48,835:INFO:Importing libraries
2024-12-05 22:35:48,835:INFO:Copying training dataset
2024-12-05 22:35:49,020:INFO:Defining folds
2024-12-05 22:35:49,020:INFO:Declaring metric variables
2024-12-05 22:35:49,024:INFO:Importing untrained model
2024-12-05 22:35:49,028:INFO:Random Forest Classifier Imported successfully
2024-12-05 22:35:49,036:INFO:Starting cross validation
2024-12-05 22:35:49,039:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:36:26,351:INFO:Calculating mean and std
2024-12-05 22:36:26,355:INFO:Creating metrics dataframe
2024-12-05 22:36:26,375:INFO:Uploading results into container
2024-12-05 22:36:26,377:INFO:Uploading model into container now
2024-12-05 22:36:26,379:INFO:_master_model_container: 7
2024-12-05 22:36:26,379:INFO:_display_container: 2
2024-12-05 22:36:26,384:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 22:36:26,385:INFO:create_model() successfully completed......................................
2024-12-05 22:36:26,799:INFO:SubProcess create_model() end ==================================
2024-12-05 22:36:26,799:INFO:Creating metrics dataframe
2024-12-05 22:36:26,852:INFO:Initializing Quadratic Discriminant Analysis
2024-12-05 22:36:26,853:INFO:Total runtime is 1.9007132411003114 minutes
2024-12-05 22:36:26,862:INFO:SubProcess create_model() called ==================================
2024-12-05 22:36:26,863:INFO:Initializing create_model()
2024-12-05 22:36:26,863:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E14361E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:36:26,863:INFO:Checking exceptions
2024-12-05 22:36:26,864:INFO:Importing libraries
2024-12-05 22:36:26,864:INFO:Copying training dataset
2024-12-05 22:36:26,996:INFO:Defining folds
2024-12-05 22:36:26,996:INFO:Declaring metric variables
2024-12-05 22:36:27,000:INFO:Importing untrained model
2024-12-05 22:36:27,004:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-05 22:36:27,011:INFO:Starting cross validation
2024-12-05 22:36:27,015:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:36:32,613:INFO:Calculating mean and std
2024-12-05 22:36:32,619:INFO:Creating metrics dataframe
2024-12-05 22:36:32,636:INFO:Uploading results into container
2024-12-05 22:36:32,639:INFO:Uploading model into container now
2024-12-05 22:36:32,641:INFO:_master_model_container: 8
2024-12-05 22:36:32,642:INFO:_display_container: 2
2024-12-05 22:36:32,643:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-05 22:36:32,643:INFO:create_model() successfully completed......................................
2024-12-05 22:36:32,935:INFO:SubProcess create_model() end ==================================
2024-12-05 22:36:32,935:INFO:Creating metrics dataframe
2024-12-05 22:36:32,966:INFO:Initializing Ada Boost Classifier
2024-12-05 22:36:32,966:INFO:Total runtime is 2.0025979320208234 minutes
2024-12-05 22:36:32,975:INFO:SubProcess create_model() called ==================================
2024-12-05 22:36:32,975:INFO:Initializing create_model()
2024-12-05 22:36:32,976:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E14361E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:36:32,976:INFO:Checking exceptions
2024-12-05 22:36:32,977:INFO:Importing libraries
2024-12-05 22:36:32,977:INFO:Copying training dataset
2024-12-05 22:36:33,185:INFO:Defining folds
2024-12-05 22:36:33,185:INFO:Declaring metric variables
2024-12-05 22:36:33,190:INFO:Importing untrained model
2024-12-05 22:36:33,195:INFO:Ada Boost Classifier Imported successfully
2024-12-05 22:36:33,201:INFO:Starting cross validation
2024-12-05 22:36:33,203:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:36:34,872:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 22:36:34,883:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 22:36:34,891:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 22:36:34,895:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 22:36:34,915:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 22:37:23,803:INFO:Calculating mean and std
2024-12-05 22:37:23,809:INFO:Creating metrics dataframe
2024-12-05 22:37:23,829:INFO:Uploading results into container
2024-12-05 22:37:23,833:INFO:Uploading model into container now
2024-12-05 22:37:23,835:INFO:_master_model_container: 9
2024-12-05 22:37:23,835:INFO:_display_container: 2
2024-12-05 22:37:23,836:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-12-05 22:37:23,836:INFO:create_model() successfully completed......................................
2024-12-05 22:37:24,210:INFO:SubProcess create_model() end ==================================
2024-12-05 22:37:24,210:INFO:Creating metrics dataframe
2024-12-05 22:37:24,237:INFO:Initializing Gradient Boosting Classifier
2024-12-05 22:37:24,237:INFO:Total runtime is 2.8571153004964196 minutes
2024-12-05 22:37:24,245:INFO:SubProcess create_model() called ==================================
2024-12-05 22:37:24,247:INFO:Initializing create_model()
2024-12-05 22:37:24,247:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E14361E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:37:24,248:INFO:Checking exceptions
2024-12-05 22:37:24,248:INFO:Importing libraries
2024-12-05 22:37:24,248:INFO:Copying training dataset
2024-12-05 22:37:24,502:INFO:Defining folds
2024-12-05 22:37:24,503:INFO:Declaring metric variables
2024-12-05 22:37:24,514:INFO:Importing untrained model
2024-12-05 22:37:24,526:INFO:Gradient Boosting Classifier Imported successfully
2024-12-05 22:37:24,545:INFO:Starting cross validation
2024-12-05 22:37:24,551:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:41:25,518:INFO:Calculating mean and std
2024-12-05 22:41:25,520:INFO:Creating metrics dataframe
2024-12-05 22:41:25,528:INFO:Uploading results into container
2024-12-05 22:41:25,529:INFO:Uploading model into container now
2024-12-05 22:41:25,530:INFO:_master_model_container: 10
2024-12-05 22:41:25,530:INFO:_display_container: 2
2024-12-05 22:41:25,531:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-05 22:41:25,531:INFO:create_model() successfully completed......................................
2024-12-05 22:41:25,733:INFO:SubProcess create_model() end ==================================
2024-12-05 22:41:25,733:INFO:Creating metrics dataframe
2024-12-05 22:41:25,749:INFO:Initializing Linear Discriminant Analysis
2024-12-05 22:41:25,749:INFO:Total runtime is 6.882323316733043 minutes
2024-12-05 22:41:25,752:INFO:SubProcess create_model() called ==================================
2024-12-05 22:41:25,753:INFO:Initializing create_model()
2024-12-05 22:41:25,753:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E14361E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:41:25,753:INFO:Checking exceptions
2024-12-05 22:41:25,753:INFO:Importing libraries
2024-12-05 22:41:25,753:INFO:Copying training dataset
2024-12-05 22:41:25,879:INFO:Defining folds
2024-12-05 22:41:25,879:INFO:Declaring metric variables
2024-12-05 22:41:25,882:INFO:Importing untrained model
2024-12-05 22:41:25,887:INFO:Linear Discriminant Analysis Imported successfully
2024-12-05 22:41:25,894:INFO:Starting cross validation
2024-12-05 22:41:25,897:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:41:32,368:INFO:Calculating mean and std
2024-12-05 22:41:32,372:INFO:Creating metrics dataframe
2024-12-05 22:41:32,406:INFO:Uploading results into container
2024-12-05 22:41:32,410:INFO:Uploading model into container now
2024-12-05 22:41:32,412:INFO:_master_model_container: 11
2024-12-05 22:41:32,412:INFO:_display_container: 2
2024-12-05 22:41:32,418:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-05 22:41:32,419:INFO:create_model() successfully completed......................................
2024-12-05 22:41:32,687:INFO:SubProcess create_model() end ==================================
2024-12-05 22:41:32,687:INFO:Creating metrics dataframe
2024-12-05 22:41:32,720:INFO:Initializing Extra Trees Classifier
2024-12-05 22:41:32,720:INFO:Total runtime is 6.998508036136628 minutes
2024-12-05 22:41:32,728:INFO:SubProcess create_model() called ==================================
2024-12-05 22:41:32,729:INFO:Initializing create_model()
2024-12-05 22:41:32,730:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E14361E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:41:32,730:INFO:Checking exceptions
2024-12-05 22:41:32,731:INFO:Importing libraries
2024-12-05 22:41:32,731:INFO:Copying training dataset
2024-12-05 22:41:32,934:INFO:Defining folds
2024-12-05 22:41:32,934:INFO:Declaring metric variables
2024-12-05 22:41:32,938:INFO:Importing untrained model
2024-12-05 22:41:32,943:INFO:Extra Trees Classifier Imported successfully
2024-12-05 22:41:32,951:INFO:Starting cross validation
2024-12-05 22:41:32,953:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:41:49,607:INFO:Calculating mean and std
2024-12-05 22:41:49,610:INFO:Creating metrics dataframe
2024-12-05 22:41:49,615:INFO:Uploading results into container
2024-12-05 22:41:49,617:INFO:Uploading model into container now
2024-12-05 22:41:49,618:INFO:_master_model_container: 12
2024-12-05 22:41:49,618:INFO:_display_container: 2
2024-12-05 22:41:49,619:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 22:41:49,619:INFO:create_model() successfully completed......................................
2024-12-05 22:41:50,051:INFO:SubProcess create_model() end ==================================
2024-12-05 22:41:50,052:INFO:Creating metrics dataframe
2024-12-05 22:41:50,099:INFO:Initializing Extreme Gradient Boosting
2024-12-05 22:41:50,100:INFO:Total runtime is 7.288175566991171 minutes
2024-12-05 22:41:50,118:INFO:SubProcess create_model() called ==================================
2024-12-05 22:41:50,119:INFO:Initializing create_model()
2024-12-05 22:41:50,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E14361E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:41:50,120:INFO:Checking exceptions
2024-12-05 22:41:50,121:INFO:Importing libraries
2024-12-05 22:41:50,121:INFO:Copying training dataset
2024-12-05 22:41:50,322:INFO:Defining folds
2024-12-05 22:41:50,322:INFO:Declaring metric variables
2024-12-05 22:41:50,326:INFO:Importing untrained model
2024-12-05 22:41:50,333:INFO:Extreme Gradient Boosting Imported successfully
2024-12-05 22:41:50,342:INFO:Starting cross validation
2024-12-05 22:41:50,345:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:42:12,932:INFO:Calculating mean and std
2024-12-05 22:42:12,935:INFO:Creating metrics dataframe
2024-12-05 22:42:12,948:INFO:Uploading results into container
2024-12-05 22:42:12,950:INFO:Uploading model into container now
2024-12-05 22:42:12,952:INFO:_master_model_container: 13
2024-12-05 22:42:12,952:INFO:_display_container: 2
2024-12-05 22:42:12,955:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-12-05 22:42:12,955:INFO:create_model() successfully completed......................................
2024-12-05 22:42:13,263:INFO:SubProcess create_model() end ==================================
2024-12-05 22:42:13,263:INFO:Creating metrics dataframe
2024-12-05 22:42:13,316:INFO:Initializing Light Gradient Boosting Machine
2024-12-05 22:42:13,316:INFO:Total runtime is 7.675098029772442 minutes
2024-12-05 22:42:13,324:INFO:SubProcess create_model() called ==================================
2024-12-05 22:42:13,326:INFO:Initializing create_model()
2024-12-05 22:42:13,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E14361E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:42:13,326:INFO:Checking exceptions
2024-12-05 22:42:13,326:INFO:Importing libraries
2024-12-05 22:42:13,326:INFO:Copying training dataset
2024-12-05 22:42:13,473:INFO:Defining folds
2024-12-05 22:42:13,473:INFO:Declaring metric variables
2024-12-05 22:42:13,478:INFO:Importing untrained model
2024-12-05 22:42:13,483:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-05 22:42:13,492:INFO:Starting cross validation
2024-12-05 22:42:13,496:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:42:30,662:INFO:Calculating mean and std
2024-12-05 22:42:30,663:INFO:Creating metrics dataframe
2024-12-05 22:42:30,668:INFO:Uploading results into container
2024-12-05 22:42:30,669:INFO:Uploading model into container now
2024-12-05 22:42:30,669:INFO:_master_model_container: 14
2024-12-05 22:42:30,669:INFO:_display_container: 2
2024-12-05 22:42:30,670:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-05 22:42:30,670:INFO:create_model() successfully completed......................................
2024-12-05 22:42:30,838:INFO:SubProcess create_model() end ==================================
2024-12-05 22:42:30,838:INFO:Creating metrics dataframe
2024-12-05 22:42:30,851:INFO:Initializing CatBoost Classifier
2024-12-05 22:42:30,851:INFO:Total runtime is 7.967353649934134 minutes
2024-12-05 22:42:30,854:INFO:SubProcess create_model() called ==================================
2024-12-05 22:42:30,854:INFO:Initializing create_model()
2024-12-05 22:42:30,854:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E14361E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:42:30,854:INFO:Checking exceptions
2024-12-05 22:42:30,854:INFO:Importing libraries
2024-12-05 22:42:30,854:INFO:Copying training dataset
2024-12-05 22:42:31,009:INFO:Defining folds
2024-12-05 22:42:31,009:INFO:Declaring metric variables
2024-12-05 22:42:31,013:INFO:Importing untrained model
2024-12-05 22:42:31,018:INFO:CatBoost Classifier Imported successfully
2024-12-05 22:42:31,026:INFO:Starting cross validation
2024-12-05 22:42:31,028:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:46:53,261:INFO:Calculating mean and std
2024-12-05 22:46:53,263:INFO:Creating metrics dataframe
2024-12-05 22:46:53,270:INFO:Uploading results into container
2024-12-05 22:46:53,271:INFO:Uploading model into container now
2024-12-05 22:46:53,272:INFO:_master_model_container: 15
2024-12-05 22:46:53,272:INFO:_display_container: 2
2024-12-05 22:46:53,272:INFO:<catboost.core.CatBoostClassifier object at 0x0000023E1CD88A00>
2024-12-05 22:46:53,272:INFO:create_model() successfully completed......................................
2024-12-05 22:46:53,471:INFO:SubProcess create_model() end ==================================
2024-12-05 22:46:53,471:INFO:Creating metrics dataframe
2024-12-05 22:46:53,487:INFO:Initializing Dummy Classifier
2024-12-05 22:46:53,487:INFO:Total runtime is 12.344611255327862 minutes
2024-12-05 22:46:53,490:INFO:SubProcess create_model() called ==================================
2024-12-05 22:46:53,490:INFO:Initializing create_model()
2024-12-05 22:46:53,490:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E14361E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:46:53,490:INFO:Checking exceptions
2024-12-05 22:46:53,490:INFO:Importing libraries
2024-12-05 22:46:53,490:INFO:Copying training dataset
2024-12-05 22:46:53,643:INFO:Defining folds
2024-12-05 22:46:53,643:INFO:Declaring metric variables
2024-12-05 22:46:53,647:INFO:Importing untrained model
2024-12-05 22:46:53,652:INFO:Dummy Classifier Imported successfully
2024-12-05 22:46:53,662:INFO:Starting cross validation
2024-12-05 22:46:53,665:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:46:56,568:INFO:Calculating mean and std
2024-12-05 22:46:56,569:INFO:Creating metrics dataframe
2024-12-05 22:46:56,572:INFO:Uploading results into container
2024-12-05 22:46:56,573:INFO:Uploading model into container now
2024-12-05 22:46:56,573:INFO:_master_model_container: 16
2024-12-05 22:46:56,573:INFO:_display_container: 2
2024-12-05 22:46:56,573:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-12-05 22:46:56,574:INFO:create_model() successfully completed......................................
2024-12-05 22:46:56,746:INFO:SubProcess create_model() end ==================================
2024-12-05 22:46:56,747:INFO:Creating metrics dataframe
2024-12-05 22:46:56,782:INFO:Initializing create_model()
2024-12-05 22:46:56,783:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:46:56,783:INFO:Checking exceptions
2024-12-05 22:46:56,785:INFO:Importing libraries
2024-12-05 22:46:56,785:INFO:Copying training dataset
2024-12-05 22:46:56,940:INFO:Defining folds
2024-12-05 22:46:56,940:INFO:Declaring metric variables
2024-12-05 22:46:56,941:INFO:Importing untrained model
2024-12-05 22:46:56,941:INFO:Declaring custom model
2024-12-05 22:46:56,942:INFO:Random Forest Classifier Imported successfully
2024-12-05 22:46:56,943:INFO:Cross validation set to False
2024-12-05 22:46:56,945:INFO:Fitting Model
2024-12-05 22:47:06,949:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 22:47:06,949:INFO:create_model() successfully completed......................................
2024-12-05 22:47:07,133:INFO:_master_model_container: 16
2024-12-05 22:47:07,133:INFO:_display_container: 2
2024-12-05 22:47:07,135:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 22:47:07,135:INFO:compare_models() successfully completed......................................
2024-12-05 22:47:27,375:INFO:Initializing predict_model()
2024-12-05 22:47:27,376:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E1BC1F2E0>)
2024-12-05 22:47:27,376:INFO:Checking exceptions
2024-12-05 22:47:27,376:INFO:Preloading libraries
2024-12-05 22:47:27,379:INFO:Set up data.
2024-12-05 22:47:27,585:INFO:Set up index.
2024-12-05 22:47:29,045:INFO:Initializing finalize_model()
2024-12-05 22:47:29,045:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-05 22:47:29,045:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 22:47:29,177:INFO:Initializing create_model()
2024-12-05 22:47:29,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:47:29,177:INFO:Checking exceptions
2024-12-05 22:47:29,180:INFO:Importing libraries
2024-12-05 22:47:29,180:INFO:Copying training dataset
2024-12-05 22:47:29,199:INFO:Defining folds
2024-12-05 22:47:29,199:INFO:Declaring metric variables
2024-12-05 22:47:29,200:INFO:Importing untrained model
2024-12-05 22:47:29,200:INFO:Declaring custom model
2024-12-05 22:47:29,201:INFO:Random Forest Classifier Imported successfully
2024-12-05 22:47:29,206:INFO:Cross validation set to False
2024-12-05 22:47:29,206:INFO:Fitting Model
2024-12-05 22:47:30,684:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\pandas\core\generic.py:2070: RuntimeWarning: overflow encountered in cast
  return np.asarray(self._values, dtype=dtype)

2024-12-05 22:48:17,913:INFO:Initializing predict_model()
2024-12-05 22:48:17,913:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E186364D0>)
2024-12-05 22:48:17,915:INFO:Checking exceptions
2024-12-05 22:48:17,916:INFO:Preloading libraries
2024-12-05 22:48:17,925:INFO:Set up data.
2024-12-05 22:48:18,176:INFO:Set up index.
2024-12-05 22:48:45,767:INFO:Initializing plot_model()
2024-12-05 22:48:45,768:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E14360E50>, system=True)
2024-12-05 22:48:45,768:INFO:Checking exceptions
2024-12-05 22:48:46,056:INFO:Preloading libraries
2024-12-05 22:48:46,264:INFO:Copying training dataset
2024-12-05 22:48:46,264:INFO:Plot type: feature
2024-12-05 22:48:46,266:WARNING:No coef_ found. Trying feature_importances_
2024-12-05 22:49:22,809:INFO:PyCaret ClassificationExperiment
2024-12-05 22:49:22,809:INFO:Logging name: clf-default-name
2024-12-05 22:49:22,809:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-05 22:49:22,809:INFO:version 3.3.2
2024-12-05 22:49:22,809:INFO:Initializing setup()
2024-12-05 22:49:22,809:INFO:self.USI: f8c8
2024-12-05 22:49:22,809:INFO:self._variable_keys: {'_available_plots', 'logging_param', 'is_multiclass', 'fold_generator', 'y', 'data', 'fold_groups_param', 'memory', 'X', 'target_param', 'pipeline', 'y_train', '_ml_usecase', 'seed', 'X_train', 'html_param', 'USI', 'X_test', 'exp_name_log', 'exp_id', 'fix_imbalance', 'fold_shuffle_param', 'gpu_param', 'gpu_n_jobs_param', 'y_test', 'log_plots_param', 'idx', 'n_jobs_param'}
2024-12-05 22:49:22,809:INFO:Checking environment
2024-12-05 22:49:22,809:INFO:python_version: 3.10.11
2024-12-05 22:49:22,809:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-12-05 22:49:22,809:INFO:machine: AMD64
2024-12-05 22:49:22,809:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-05 22:49:22,812:INFO:Memory: svmem(total=17041244160, available=4010405888, percent=76.5, used=13030838272, free=4010405888)
2024-12-05 22:49:22,812:INFO:Physical Core: 4
2024-12-05 22:49:22,812:INFO:Logical Core: 8
2024-12-05 22:49:22,812:INFO:Checking libraries
2024-12-05 22:49:22,812:INFO:System:
2024-12-05 22:49:22,812:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-12-05 22:49:22,812:INFO:executable: c:\Users\diego\AppData\Local\Programs\Python\Python310\python.exe
2024-12-05 22:49:22,812:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-05 22:49:22,812:INFO:PyCaret required dependencies:
2024-12-05 22:49:22,812:INFO:                 pip: 24.2
2024-12-05 22:49:22,812:INFO:          setuptools: 65.5.0
2024-12-05 22:49:22,812:INFO:             pycaret: 3.3.2
2024-12-05 22:49:22,813:INFO:             IPython: 8.26.0
2024-12-05 22:49:22,813:INFO:          ipywidgets: 8.1.5
2024-12-05 22:49:22,813:INFO:                tqdm: 4.66.5
2024-12-05 22:49:22,813:INFO:               numpy: 1.26.4
2024-12-05 22:49:22,813:INFO:              pandas: 1.5.3
2024-12-05 22:49:22,813:INFO:              jinja2: 3.1.4
2024-12-05 22:49:22,813:INFO:               scipy: 1.11.4
2024-12-05 22:49:22,813:INFO:              joblib: 1.3.2
2024-12-05 22:49:22,813:INFO:             sklearn: 1.4.2
2024-12-05 22:49:22,813:INFO:                pyod: 2.0.2
2024-12-05 22:49:22,813:INFO:            imblearn: 0.12.3
2024-12-05 22:49:22,813:INFO:   category_encoders: 2.6.4
2024-12-05 22:49:22,813:INFO:            lightgbm: 4.5.0
2024-12-05 22:49:22,813:INFO:               numba: 0.60.0
2024-12-05 22:49:22,813:INFO:            requests: 2.32.3
2024-12-05 22:49:22,813:INFO:          matplotlib: 3.7.5
2024-12-05 22:49:22,813:INFO:          scikitplot: 0.3.7
2024-12-05 22:49:22,813:INFO:         yellowbrick: 1.5
2024-12-05 22:49:22,813:INFO:              plotly: 5.24.1
2024-12-05 22:49:22,813:INFO:    plotly-resampler: Not installed
2024-12-05 22:49:22,813:INFO:             kaleido: 0.2.1
2024-12-05 22:49:22,813:INFO:           schemdraw: 0.15
2024-12-05 22:49:22,813:INFO:         statsmodels: 0.14.4
2024-12-05 22:49:22,813:INFO:              sktime: 0.26.0
2024-12-05 22:49:22,813:INFO:               tbats: 1.1.3
2024-12-05 22:49:22,813:INFO:            pmdarima: 2.0.4
2024-12-05 22:49:22,813:INFO:              psutil: 6.0.0
2024-12-05 22:49:22,813:INFO:          markupsafe: 2.1.5
2024-12-05 22:49:22,813:INFO:             pickle5: Not installed
2024-12-05 22:49:22,813:INFO:         cloudpickle: 3.1.0
2024-12-05 22:49:22,813:INFO:         deprecation: 2.1.0
2024-12-05 22:49:22,813:INFO:              xxhash: 3.5.0
2024-12-05 22:49:22,813:INFO:           wurlitzer: Not installed
2024-12-05 22:49:22,813:INFO:PyCaret optional dependencies:
2024-12-05 22:49:22,813:INFO:                shap: 0.44.0
2024-12-05 22:49:22,813:INFO:           interpret: 0.5.0
2024-12-05 22:49:22,813:INFO:                umap: 0.5.6
2024-12-05 22:49:22,815:INFO:     ydata_profiling: 4.11.0
2024-12-05 22:49:22,815:INFO:  explainerdashboard: 0.4.7
2024-12-05 22:49:22,815:INFO:             autoviz: Not installed
2024-12-05 22:49:22,815:INFO:           fairlearn: 0.7.0
2024-12-05 22:49:22,815:INFO:          deepchecks: Not installed
2024-12-05 22:49:22,815:INFO:             xgboost: 2.1.2
2024-12-05 22:49:22,815:INFO:            catboost: 1.2.7
2024-12-05 22:49:22,815:INFO:              kmodes: Not installed
2024-12-05 22:49:22,815:INFO:             mlxtend: Not installed
2024-12-05 22:49:22,815:INFO:       statsforecast: Not installed
2024-12-05 22:49:22,815:INFO:        tune_sklearn: Not installed
2024-12-05 22:49:22,815:INFO:                 ray: Not installed
2024-12-05 22:49:22,815:INFO:            hyperopt: Not installed
2024-12-05 22:49:22,815:INFO:              optuna: 4.0.0
2024-12-05 22:49:22,815:INFO:               skopt: Not installed
2024-12-05 22:49:22,815:INFO:              mlflow: 2.18.0
2024-12-05 22:49:22,815:INFO:              gradio: Not installed
2024-12-05 22:49:22,815:INFO:             fastapi: Not installed
2024-12-05 22:49:22,815:INFO:             uvicorn: Not installed
2024-12-05 22:49:22,815:INFO:              m2cgen: Not installed
2024-12-05 22:49:22,815:INFO:           evidently: Not installed
2024-12-05 22:49:22,815:INFO:               fugue: Not installed
2024-12-05 22:49:22,815:INFO:           streamlit: 1.39.0
2024-12-05 22:49:22,815:INFO:             prophet: Not installed
2024-12-05 22:49:22,815:INFO:None
2024-12-05 22:49:22,816:INFO:Set up data.
2024-12-05 22:49:23,111:INFO:Set up folding strategy.
2024-12-05 22:49:23,112:INFO:Set up train/test split.
2024-12-05 22:49:23,293:INFO:Set up index.
2024-12-05 22:49:23,299:INFO:Assigning column types.
2024-12-05 22:49:23,435:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-05 22:49:23,477:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 22:49:23,478:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 22:49:23,505:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:49:23,509:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:49:23,553:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 22:49:23,554:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 22:49:23,587:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:49:23,591:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:49:23,592:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-05 22:49:23,651:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 22:49:23,686:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:49:23,690:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:49:23,753:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 22:49:23,794:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:49:23,798:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:49:23,800:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-05 22:49:23,968:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:49:23,970:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:49:24,045:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:49:24,048:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:49:24,049:INFO:Preparing preprocessing pipeline...
2024-12-05 22:49:24,066:INFO:Set up simple imputation.
2024-12-05 22:49:24,120:INFO:Set up encoding of categorical features.
2024-12-05 22:49:24,123:INFO:Set up feature normalization.
2024-12-05 22:49:25,107:INFO:Finished creating preprocessing pipeline.
2024-12-05 22:49:25,120:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\diego\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_ti...
                 TransformerWrapper(exclude=None, include=['wallet_address'],
                                    transformer=TargetEncoder(cols=['wallet_address'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-12-05 22:49:25,120:INFO:Creating final display dataframe.
2024-12-05 22:49:26,927:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            target
2                   Target type            Binary
3           Original data shape      (31007, 413)
4        Transformed data shape      (31007, 413)
5   Transformed train set shape      (21704, 413)
6    Transformed test set shape       (9303, 413)
7              Numeric features               411
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                    Normalize              True
16             Normalize method            zscore
17               Fold Generator   StratifiedKFold
18                  Fold Number                 5
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              f8c8
2024-12-05 22:49:27,035:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:49:27,037:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:49:27,123:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:49:27,126:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:49:27,128:INFO:setup() successfully completed in 4.41s...............
2024-12-05 22:49:27,128:INFO:Initializing compare_models()
2024-12-05 22:49:27,128:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E22EA7A30>, include=['et', 'lr', 'rf', 'lightgbm', 'xgboost', 'dt'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023E22EA7A30>, 'include': ['et', 'lr', 'rf', 'lightgbm', 'xgboost', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-05 22:49:27,128:INFO:Checking exceptions
2024-12-05 22:49:27,205:INFO:Preparing display monitor
2024-12-05 22:49:27,231:INFO:Initializing Extra Trees Classifier
2024-12-05 22:49:27,231:INFO:Total runtime is 0.0 minutes
2024-12-05 22:49:27,236:INFO:SubProcess create_model() called ==================================
2024-12-05 22:49:27,237:INFO:Initializing create_model()
2024-12-05 22:49:27,237:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E22EA7A30>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E22F1BFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:49:27,237:INFO:Checking exceptions
2024-12-05 22:49:27,237:INFO:Importing libraries
2024-12-05 22:49:27,237:INFO:Copying training dataset
2024-12-05 22:49:27,377:INFO:Defining folds
2024-12-05 22:49:27,378:INFO:Declaring metric variables
2024-12-05 22:49:27,381:INFO:Importing untrained model
2024-12-05 22:49:27,384:INFO:Extra Trees Classifier Imported successfully
2024-12-05 22:49:27,391:INFO:Starting cross validation
2024-12-05 22:49:27,395:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:49:44,567:INFO:Calculating mean and std
2024-12-05 22:49:44,568:INFO:Creating metrics dataframe
2024-12-05 22:49:44,571:INFO:Uploading results into container
2024-12-05 22:49:44,571:INFO:Uploading model into container now
2024-12-05 22:49:44,572:INFO:_master_model_container: 1
2024-12-05 22:49:44,572:INFO:_display_container: 2
2024-12-05 22:49:44,573:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 22:49:44,573:INFO:create_model() successfully completed......................................
2024-12-05 22:49:44,808:INFO:SubProcess create_model() end ==================================
2024-12-05 22:49:44,809:INFO:Creating metrics dataframe
2024-12-05 22:49:44,819:INFO:Initializing Logistic Regression
2024-12-05 22:49:44,819:INFO:Total runtime is 0.2931207815806071 minutes
2024-12-05 22:49:44,823:INFO:SubProcess create_model() called ==================================
2024-12-05 22:49:44,823:INFO:Initializing create_model()
2024-12-05 22:49:44,823:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E22EA7A30>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E22F1BFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:49:44,824:INFO:Checking exceptions
2024-12-05 22:49:44,824:INFO:Importing libraries
2024-12-05 22:49:44,824:INFO:Copying training dataset
2024-12-05 22:49:44,954:INFO:Defining folds
2024-12-05 22:49:44,955:INFO:Declaring metric variables
2024-12-05 22:49:44,960:INFO:Importing untrained model
2024-12-05 22:49:44,963:INFO:Logistic Regression Imported successfully
2024-12-05 22:49:44,971:INFO:Starting cross validation
2024-12-05 22:49:44,975:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:49:50,039:INFO:Calculating mean and std
2024-12-05 22:49:50,043:INFO:Creating metrics dataframe
2024-12-05 22:49:50,059:INFO:Uploading results into container
2024-12-05 22:49:50,062:INFO:Uploading model into container now
2024-12-05 22:49:50,066:INFO:_master_model_container: 2
2024-12-05 22:49:50,067:INFO:_display_container: 2
2024-12-05 22:49:50,068:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-05 22:49:50,069:INFO:create_model() successfully completed......................................
2024-12-05 22:49:50,399:INFO:SubProcess create_model() end ==================================
2024-12-05 22:49:50,400:INFO:Creating metrics dataframe
2024-12-05 22:49:50,417:INFO:Initializing Random Forest Classifier
2024-12-05 22:49:50,417:INFO:Total runtime is 0.38643119335174564 minutes
2024-12-05 22:49:50,423:INFO:SubProcess create_model() called ==================================
2024-12-05 22:49:50,423:INFO:Initializing create_model()
2024-12-05 22:49:50,424:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E22EA7A30>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E22F1BFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:49:50,424:INFO:Checking exceptions
2024-12-05 22:49:50,424:INFO:Importing libraries
2024-12-05 22:49:50,424:INFO:Copying training dataset
2024-12-05 22:49:50,633:INFO:Defining folds
2024-12-05 22:49:50,633:INFO:Declaring metric variables
2024-12-05 22:49:50,640:INFO:Importing untrained model
2024-12-05 22:49:50,648:INFO:Random Forest Classifier Imported successfully
2024-12-05 22:49:50,662:INFO:Starting cross validation
2024-12-05 22:49:50,667:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:50:23,690:INFO:Calculating mean and std
2024-12-05 22:50:23,695:INFO:Creating metrics dataframe
2024-12-05 22:50:23,710:INFO:Uploading results into container
2024-12-05 22:50:23,713:INFO:Uploading model into container now
2024-12-05 22:50:23,714:INFO:_master_model_container: 3
2024-12-05 22:50:23,714:INFO:_display_container: 2
2024-12-05 22:50:23,717:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 22:50:23,718:INFO:create_model() successfully completed......................................
2024-12-05 22:50:24,094:INFO:SubProcess create_model() end ==================================
2024-12-05 22:50:24,094:INFO:Creating metrics dataframe
2024-12-05 22:50:24,118:INFO:Initializing Light Gradient Boosting Machine
2024-12-05 22:50:24,119:INFO:Total runtime is 0.94812730550766 minutes
2024-12-05 22:50:24,128:INFO:SubProcess create_model() called ==================================
2024-12-05 22:50:24,129:INFO:Initializing create_model()
2024-12-05 22:50:24,130:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E22EA7A30>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E22F1BFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:50:24,130:INFO:Checking exceptions
2024-12-05 22:50:24,131:INFO:Importing libraries
2024-12-05 22:50:24,131:INFO:Copying training dataset
2024-12-05 22:50:24,376:INFO:Defining folds
2024-12-05 22:50:24,377:INFO:Declaring metric variables
2024-12-05 22:50:24,384:INFO:Importing untrained model
2024-12-05 22:50:24,396:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-05 22:50:24,417:INFO:Starting cross validation
2024-12-05 22:50:24,423:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:50:40,537:INFO:Calculating mean and std
2024-12-05 22:50:40,538:INFO:Creating metrics dataframe
2024-12-05 22:50:40,542:INFO:Uploading results into container
2024-12-05 22:50:40,542:INFO:Uploading model into container now
2024-12-05 22:50:40,544:INFO:_master_model_container: 4
2024-12-05 22:50:40,544:INFO:_display_container: 2
2024-12-05 22:50:40,545:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-05 22:50:40,545:INFO:create_model() successfully completed......................................
2024-12-05 22:50:40,757:INFO:SubProcess create_model() end ==================================
2024-12-05 22:50:40,759:INFO:Creating metrics dataframe
2024-12-05 22:50:40,770:INFO:Initializing Extreme Gradient Boosting
2024-12-05 22:50:40,770:INFO:Total runtime is 1.2256421764691672 minutes
2024-12-05 22:50:40,776:INFO:SubProcess create_model() called ==================================
2024-12-05 22:50:40,776:INFO:Initializing create_model()
2024-12-05 22:50:40,776:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E22EA7A30>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E22F1BFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:50:40,776:INFO:Checking exceptions
2024-12-05 22:50:40,776:INFO:Importing libraries
2024-12-05 22:50:40,776:INFO:Copying training dataset
2024-12-05 22:50:40,914:INFO:Defining folds
2024-12-05 22:50:40,914:INFO:Declaring metric variables
2024-12-05 22:50:40,917:INFO:Importing untrained model
2024-12-05 22:50:40,924:INFO:Extreme Gradient Boosting Imported successfully
2024-12-05 22:50:40,933:INFO:Starting cross validation
2024-12-05 22:50:40,937:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:51:00,840:INFO:Calculating mean and std
2024-12-05 22:51:00,846:INFO:Creating metrics dataframe
2024-12-05 22:51:00,865:INFO:Uploading results into container
2024-12-05 22:51:00,868:INFO:Uploading model into container now
2024-12-05 22:51:00,872:INFO:_master_model_container: 5
2024-12-05 22:51:00,874:INFO:_display_container: 2
2024-12-05 22:51:00,881:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-12-05 22:51:00,881:INFO:create_model() successfully completed......................................
2024-12-05 22:51:01,196:INFO:SubProcess create_model() end ==================================
2024-12-05 22:51:01,196:INFO:Creating metrics dataframe
2024-12-05 22:51:01,223:INFO:Initializing Decision Tree Classifier
2024-12-05 22:51:01,223:INFO:Total runtime is 1.566521680355072 minutes
2024-12-05 22:51:01,228:INFO:SubProcess create_model() called ==================================
2024-12-05 22:51:01,230:INFO:Initializing create_model()
2024-12-05 22:51:01,230:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E22EA7A30>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E22F1BFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:51:01,231:INFO:Checking exceptions
2024-12-05 22:51:01,231:INFO:Importing libraries
2024-12-05 22:51:01,231:INFO:Copying training dataset
2024-12-05 22:51:01,440:INFO:Defining folds
2024-12-05 22:51:01,440:INFO:Declaring metric variables
2024-12-05 22:51:01,448:INFO:Importing untrained model
2024-12-05 22:51:01,456:INFO:Decision Tree Classifier Imported successfully
2024-12-05 22:51:01,469:INFO:Starting cross validation
2024-12-05 22:51:01,474:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:51:25,066:INFO:Calculating mean and std
2024-12-05 22:51:25,067:INFO:Creating metrics dataframe
2024-12-05 22:51:25,072:INFO:Uploading results into container
2024-12-05 22:51:25,073:INFO:Uploading model into container now
2024-12-05 22:51:25,073:INFO:_master_model_container: 6
2024-12-05 22:51:25,074:INFO:_display_container: 2
2024-12-05 22:51:25,074:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-12-05 22:51:25,074:INFO:create_model() successfully completed......................................
2024-12-05 22:51:25,305:INFO:SubProcess create_model() end ==================================
2024-12-05 22:51:25,306:INFO:Creating metrics dataframe
2024-12-05 22:51:25,347:INFO:Initializing create_model()
2024-12-05 22:51:25,347:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E22EA7A30>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:51:25,347:INFO:Checking exceptions
2024-12-05 22:51:25,349:INFO:Importing libraries
2024-12-05 22:51:25,350:INFO:Copying training dataset
2024-12-05 22:51:25,539:INFO:Defining folds
2024-12-05 22:51:25,540:INFO:Declaring metric variables
2024-12-05 22:51:25,540:INFO:Importing untrained model
2024-12-05 22:51:25,540:INFO:Declaring custom model
2024-12-05 22:51:25,541:INFO:Random Forest Classifier Imported successfully
2024-12-05 22:51:25,547:INFO:Cross validation set to False
2024-12-05 22:51:25,547:INFO:Fitting Model
2024-12-05 22:51:36,811:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 22:51:36,811:INFO:create_model() successfully completed......................................
2024-12-05 22:51:37,031:INFO:_master_model_container: 6
2024-12-05 22:51:37,031:INFO:_display_container: 2
2024-12-05 22:51:37,032:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 22:51:37,032:INFO:compare_models() successfully completed......................................
2024-12-05 22:51:47,032:INFO:Initializing predict_model()
2024-12-05 22:51:47,032:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E22EA7A30>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E223896C0>)
2024-12-05 22:51:47,032:INFO:Checking exceptions
2024-12-05 22:51:47,032:INFO:Preloading libraries
2024-12-05 22:51:47,035:INFO:Set up data.
2024-12-05 22:51:47,314:INFO:Set up index.
2024-12-05 22:51:48,606:INFO:Initializing finalize_model()
2024-12-05 22:51:48,606:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E22EA7A30>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-05 22:51:48,606:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 22:51:48,692:INFO:Initializing create_model()
2024-12-05 22:51:48,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E22EA7A30>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:51:48,692:INFO:Checking exceptions
2024-12-05 22:51:48,694:INFO:Importing libraries
2024-12-05 22:51:48,694:INFO:Copying training dataset
2024-12-05 22:51:48,707:INFO:Defining folds
2024-12-05 22:51:48,708:INFO:Declaring metric variables
2024-12-05 22:51:48,708:INFO:Importing untrained model
2024-12-05 22:51:48,708:INFO:Declaring custom model
2024-12-05 22:51:48,709:INFO:Random Forest Classifier Imported successfully
2024-12-05 22:51:48,712:INFO:Cross validation set to False
2024-12-05 22:51:48,712:INFO:Fitting Model
2024-12-05 22:52:03,587:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-12-05 22:52:03,587:INFO:create_model() successfully completed......................................
2024-12-05 22:52:03,782:INFO:_master_model_container: 6
2024-12-05 22:52:03,782:INFO:_display_container: 3
2024-12-05 22:52:03,792:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-12-05 22:52:03,792:INFO:finalize_model() successfully completed......................................
2024-12-05 22:52:03,988:INFO:Initializing predict_model()
2024-12-05 22:52:03,988:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E22EA7A30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E22388CA0>)
2024-12-05 22:52:03,988:INFO:Checking exceptions
2024-12-05 22:52:03,988:INFO:Preloading libraries
2024-12-05 22:52:03,990:INFO:Set up data.
2024-12-05 22:52:04,188:INFO:Set up index.
2024-12-05 22:52:17,098:INFO:Initializing predict_model()
2024-12-05 22:52:17,098:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E22EA7A30>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E21DFE8C0>)
2024-12-05 22:52:17,098:INFO:Checking exceptions
2024-12-05 22:52:17,099:INFO:Preloading libraries
2024-12-05 22:52:17,104:INFO:Set up data.
2024-12-05 22:52:17,338:INFO:Set up index.
2024-12-05 22:52:30,446:INFO:Initializing predict_model()
2024-12-05 22:52:30,447:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E22EA7A30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E2238A290>)
2024-12-05 22:52:30,447:INFO:Checking exceptions
2024-12-05 22:52:30,447:INFO:Preloading libraries
2024-12-05 22:52:30,448:INFO:Set up data.
2024-12-05 22:52:30,632:INFO:Set up index.
2024-12-05 22:53:56,089:INFO:PyCaret ClassificationExperiment
2024-12-05 22:53:56,090:INFO:Logging name: clf-default-name
2024-12-05 22:53:56,090:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-05 22:53:56,090:INFO:version 3.3.2
2024-12-05 22:53:56,090:INFO:Initializing setup()
2024-12-05 22:53:56,090:INFO:self.USI: 5034
2024-12-05 22:53:56,090:INFO:self._variable_keys: {'_available_plots', 'logging_param', 'is_multiclass', 'fold_generator', 'y', 'data', 'fold_groups_param', 'memory', 'X', 'target_param', 'pipeline', 'y_train', '_ml_usecase', 'seed', 'X_train', 'html_param', 'USI', 'X_test', 'exp_name_log', 'exp_id', 'fix_imbalance', 'fold_shuffle_param', 'gpu_param', 'gpu_n_jobs_param', 'y_test', 'log_plots_param', 'idx', 'n_jobs_param'}
2024-12-05 22:53:56,090:INFO:Checking environment
2024-12-05 22:53:56,090:INFO:python_version: 3.10.11
2024-12-05 22:53:56,090:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-12-05 22:53:56,090:INFO:machine: AMD64
2024-12-05 22:53:56,090:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-05 22:53:56,095:INFO:Memory: svmem(total=17041244160, available=3328335872, percent=80.5, used=13712908288, free=3328335872)
2024-12-05 22:53:56,095:INFO:Physical Core: 4
2024-12-05 22:53:56,095:INFO:Logical Core: 8
2024-12-05 22:53:56,095:INFO:Checking libraries
2024-12-05 22:53:56,096:INFO:System:
2024-12-05 22:53:56,096:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-12-05 22:53:56,096:INFO:executable: c:\Users\diego\AppData\Local\Programs\Python\Python310\python.exe
2024-12-05 22:53:56,096:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-05 22:53:56,096:INFO:PyCaret required dependencies:
2024-12-05 22:53:56,096:INFO:                 pip: 24.2
2024-12-05 22:53:56,096:INFO:          setuptools: 65.5.0
2024-12-05 22:53:56,096:INFO:             pycaret: 3.3.2
2024-12-05 22:53:56,096:INFO:             IPython: 8.26.0
2024-12-05 22:53:56,096:INFO:          ipywidgets: 8.1.5
2024-12-05 22:53:56,096:INFO:                tqdm: 4.66.5
2024-12-05 22:53:56,096:INFO:               numpy: 1.26.4
2024-12-05 22:53:56,096:INFO:              pandas: 1.5.3
2024-12-05 22:53:56,096:INFO:              jinja2: 3.1.4
2024-12-05 22:53:56,096:INFO:               scipy: 1.11.4
2024-12-05 22:53:56,096:INFO:              joblib: 1.3.2
2024-12-05 22:53:56,097:INFO:             sklearn: 1.4.2
2024-12-05 22:53:56,097:INFO:                pyod: 2.0.2
2024-12-05 22:53:56,097:INFO:            imblearn: 0.12.3
2024-12-05 22:53:56,097:INFO:   category_encoders: 2.6.4
2024-12-05 22:53:56,097:INFO:            lightgbm: 4.5.0
2024-12-05 22:53:56,097:INFO:               numba: 0.60.0
2024-12-05 22:53:56,097:INFO:            requests: 2.32.3
2024-12-05 22:53:56,097:INFO:          matplotlib: 3.7.5
2024-12-05 22:53:56,097:INFO:          scikitplot: 0.3.7
2024-12-05 22:53:56,097:INFO:         yellowbrick: 1.5
2024-12-05 22:53:56,097:INFO:              plotly: 5.24.1
2024-12-05 22:53:56,097:INFO:    plotly-resampler: Not installed
2024-12-05 22:53:56,097:INFO:             kaleido: 0.2.1
2024-12-05 22:53:56,097:INFO:           schemdraw: 0.15
2024-12-05 22:53:56,097:INFO:         statsmodels: 0.14.4
2024-12-05 22:53:56,097:INFO:              sktime: 0.26.0
2024-12-05 22:53:56,097:INFO:               tbats: 1.1.3
2024-12-05 22:53:56,097:INFO:            pmdarima: 2.0.4
2024-12-05 22:53:56,098:INFO:              psutil: 6.0.0
2024-12-05 22:53:56,098:INFO:          markupsafe: 2.1.5
2024-12-05 22:53:56,098:INFO:             pickle5: Not installed
2024-12-05 22:53:56,098:INFO:         cloudpickle: 3.1.0
2024-12-05 22:53:56,098:INFO:         deprecation: 2.1.0
2024-12-05 22:53:56,098:INFO:              xxhash: 3.5.0
2024-12-05 22:53:56,098:INFO:           wurlitzer: Not installed
2024-12-05 22:53:56,098:INFO:PyCaret optional dependencies:
2024-12-05 22:53:56,098:INFO:                shap: 0.44.0
2024-12-05 22:53:56,098:INFO:           interpret: 0.5.0
2024-12-05 22:53:56,098:INFO:                umap: 0.5.6
2024-12-05 22:53:56,098:INFO:     ydata_profiling: 4.11.0
2024-12-05 22:53:56,098:INFO:  explainerdashboard: 0.4.7
2024-12-05 22:53:56,098:INFO:             autoviz: Not installed
2024-12-05 22:53:56,098:INFO:           fairlearn: 0.7.0
2024-12-05 22:53:56,098:INFO:          deepchecks: Not installed
2024-12-05 22:53:56,098:INFO:             xgboost: 2.1.2
2024-12-05 22:53:56,099:INFO:            catboost: 1.2.7
2024-12-05 22:53:56,099:INFO:              kmodes: Not installed
2024-12-05 22:53:56,099:INFO:             mlxtend: Not installed
2024-12-05 22:53:56,099:INFO:       statsforecast: Not installed
2024-12-05 22:53:56,099:INFO:        tune_sklearn: Not installed
2024-12-05 22:53:56,099:INFO:                 ray: Not installed
2024-12-05 22:53:56,099:INFO:            hyperopt: Not installed
2024-12-05 22:53:56,099:INFO:              optuna: 4.0.0
2024-12-05 22:53:56,099:INFO:               skopt: Not installed
2024-12-05 22:53:56,099:INFO:              mlflow: 2.18.0
2024-12-05 22:53:56,099:INFO:              gradio: Not installed
2024-12-05 22:53:56,100:INFO:             fastapi: Not installed
2024-12-05 22:53:56,100:INFO:             uvicorn: Not installed
2024-12-05 22:53:56,100:INFO:              m2cgen: Not installed
2024-12-05 22:53:56,100:INFO:           evidently: Not installed
2024-12-05 22:53:56,100:INFO:               fugue: Not installed
2024-12-05 22:53:56,100:INFO:           streamlit: 1.39.0
2024-12-05 22:53:56,100:INFO:             prophet: Not installed
2024-12-05 22:53:56,100:INFO:None
2024-12-05 22:53:56,100:INFO:Set up data.
2024-12-05 22:53:56,409:INFO:Set up folding strategy.
2024-12-05 22:53:56,409:INFO:Set up train/test split.
2024-12-05 22:53:56,572:INFO:Set up index.
2024-12-05 22:53:56,579:INFO:Assigning column types.
2024-12-05 22:53:56,712:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-05 22:53:56,757:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 22:53:56,758:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 22:53:56,787:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:53:56,790:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:53:56,834:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 22:53:56,835:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 22:53:56,862:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:53:56,866:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:53:56,866:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-05 22:53:56,914:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 22:53:56,942:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:53:56,945:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:53:56,989:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 22:53:57,017:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:53:57,020:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:53:57,021:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-05 22:53:57,147:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:53:57,155:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:53:57,226:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:53:57,229:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:53:57,230:INFO:Preparing preprocessing pipeline...
2024-12-05 22:53:57,248:INFO:Set up simple imputation.
2024-12-05 22:53:57,304:INFO:Set up encoding of categorical features.
2024-12-05 22:53:57,306:INFO:Set up imbalanced handling.
2024-12-05 22:53:57,307:INFO:Set up feature normalization.
2024-12-05 22:53:59,683:INFO:Finished creating preprocessing pipeline.
2024-12-05 22:53:59,697:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\diego\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_ti...
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-12-05 22:53:59,697:INFO:Creating final display dataframe.
2024-12-05 22:54:03,171:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            target
2                   Target type            Binary
3           Original data shape      (31007, 413)
4        Transformed data shape      (31505, 413)
5   Transformed train set shape      (22202, 413)
6    Transformed test set shape       (9303, 413)
7              Numeric features               411
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                 5
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              5034
2024-12-05 22:54:03,249:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:54:03,252:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:54:03,322:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 22:54:03,326:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 22:54:03,327:INFO:setup() successfully completed in 7.34s...............
2024-12-05 22:54:03,392:INFO:Initializing compare_models()
2024-12-05 22:54:03,392:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E2239F7F0>, include=['et', 'catboost', 'lr', 'rf', 'lightgbm', 'gbc', 'xgboost', 'dt'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023E2239F7F0>, 'include': ['et', 'catboost', 'lr', 'rf', 'lightgbm', 'gbc', 'xgboost', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-05 22:54:03,392:INFO:Checking exceptions
2024-12-05 22:54:03,491:INFO:Preparing display monitor
2024-12-05 22:54:03,523:INFO:Initializing Extra Trees Classifier
2024-12-05 22:54:03,524:INFO:Total runtime is 0.0 minutes
2024-12-05 22:54:03,529:INFO:SubProcess create_model() called ==================================
2024-12-05 22:54:03,530:INFO:Initializing create_model()
2024-12-05 22:54:03,530:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E2239F7F0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1B80A2C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:54:03,530:INFO:Checking exceptions
2024-12-05 22:54:03,530:INFO:Importing libraries
2024-12-05 22:54:03,530:INFO:Copying training dataset
2024-12-05 22:54:03,651:INFO:Defining folds
2024-12-05 22:54:03,651:INFO:Declaring metric variables
2024-12-05 22:54:03,654:INFO:Importing untrained model
2024-12-05 22:54:03,657:INFO:Extra Trees Classifier Imported successfully
2024-12-05 22:54:03,663:INFO:Starting cross validation
2024-12-05 22:54:03,674:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:54:24,511:INFO:Calculating mean and std
2024-12-05 22:54:24,516:INFO:Creating metrics dataframe
2024-12-05 22:54:24,544:INFO:Uploading results into container
2024-12-05 22:54:24,547:INFO:Uploading model into container now
2024-12-05 22:54:24,551:INFO:_master_model_container: 1
2024-12-05 22:54:24,552:INFO:_display_container: 2
2024-12-05 22:54:24,555:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 22:54:24,556:INFO:create_model() successfully completed......................................
2024-12-05 22:54:24,888:INFO:SubProcess create_model() end ==================================
2024-12-05 22:54:24,888:INFO:Creating metrics dataframe
2024-12-05 22:54:24,906:INFO:Initializing CatBoost Classifier
2024-12-05 22:54:24,906:INFO:Total runtime is 0.3563747922579447 minutes
2024-12-05 22:54:24,915:INFO:SubProcess create_model() called ==================================
2024-12-05 22:54:24,916:INFO:Initializing create_model()
2024-12-05 22:54:24,916:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E2239F7F0>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1B80A2C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:54:24,917:INFO:Checking exceptions
2024-12-05 22:54:24,917:INFO:Importing libraries
2024-12-05 22:54:24,917:INFO:Copying training dataset
2024-12-05 22:54:25,123:INFO:Defining folds
2024-12-05 22:54:25,123:INFO:Declaring metric variables
2024-12-05 22:54:25,129:INFO:Importing untrained model
2024-12-05 22:54:25,137:INFO:CatBoost Classifier Imported successfully
2024-12-05 22:54:25,151:INFO:Starting cross validation
2024-12-05 22:54:25,169:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:58:37,613:INFO:Calculating mean and std
2024-12-05 22:58:37,618:INFO:Creating metrics dataframe
2024-12-05 22:58:37,641:INFO:Uploading results into container
2024-12-05 22:58:37,646:INFO:Uploading model into container now
2024-12-05 22:58:37,648:INFO:_master_model_container: 2
2024-12-05 22:58:37,649:INFO:_display_container: 2
2024-12-05 22:58:37,650:INFO:<catboost.core.CatBoostClassifier object at 0x0000023E22CF7A30>
2024-12-05 22:58:37,650:INFO:create_model() successfully completed......................................
2024-12-05 22:58:38,135:INFO:SubProcess create_model() end ==================================
2024-12-05 22:58:38,136:INFO:Creating metrics dataframe
2024-12-05 22:58:38,151:INFO:Initializing Logistic Regression
2024-12-05 22:58:38,151:INFO:Total runtime is 4.577122986316681 minutes
2024-12-05 22:58:38,157:INFO:SubProcess create_model() called ==================================
2024-12-05 22:58:38,158:INFO:Initializing create_model()
2024-12-05 22:58:38,158:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E2239F7F0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1B80A2C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:58:38,158:INFO:Checking exceptions
2024-12-05 22:58:38,158:INFO:Importing libraries
2024-12-05 22:58:38,158:INFO:Copying training dataset
2024-12-05 22:58:38,362:INFO:Defining folds
2024-12-05 22:58:38,362:INFO:Declaring metric variables
2024-12-05 22:58:38,366:INFO:Importing untrained model
2024-12-05 22:58:38,374:INFO:Logistic Regression Imported successfully
2024-12-05 22:58:38,382:INFO:Starting cross validation
2024-12-05 22:58:38,396:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:58:47,948:INFO:Calculating mean and std
2024-12-05 22:58:47,953:INFO:Creating metrics dataframe
2024-12-05 22:58:47,975:INFO:Uploading results into container
2024-12-05 22:58:47,980:INFO:Uploading model into container now
2024-12-05 22:58:47,983:INFO:_master_model_container: 3
2024-12-05 22:58:47,983:INFO:_display_container: 2
2024-12-05 22:58:47,986:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-05 22:58:47,986:INFO:create_model() successfully completed......................................
2024-12-05 22:58:48,385:INFO:SubProcess create_model() end ==================================
2024-12-05 22:58:48,387:INFO:Creating metrics dataframe
2024-12-05 22:58:48,410:INFO:Initializing Random Forest Classifier
2024-12-05 22:58:48,411:INFO:Total runtime is 4.748133540153503 minutes
2024-12-05 22:58:48,419:INFO:SubProcess create_model() called ==================================
2024-12-05 22:58:48,421:INFO:Initializing create_model()
2024-12-05 22:58:48,421:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E2239F7F0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1B80A2C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:58:48,421:INFO:Checking exceptions
2024-12-05 22:58:48,421:INFO:Importing libraries
2024-12-05 22:58:48,421:INFO:Copying training dataset
2024-12-05 22:58:48,707:INFO:Defining folds
2024-12-05 22:58:48,707:INFO:Declaring metric variables
2024-12-05 22:58:48,717:INFO:Importing untrained model
2024-12-05 22:58:48,729:INFO:Random Forest Classifier Imported successfully
2024-12-05 22:58:48,744:INFO:Starting cross validation
2024-12-05 22:58:48,763:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 22:59:35,467:INFO:Calculating mean and std
2024-12-05 22:59:35,473:INFO:Creating metrics dataframe
2024-12-05 22:59:35,499:INFO:Uploading results into container
2024-12-05 22:59:35,503:INFO:Uploading model into container now
2024-12-05 22:59:35,504:INFO:_master_model_container: 4
2024-12-05 22:59:35,505:INFO:_display_container: 2
2024-12-05 22:59:35,507:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 22:59:35,507:INFO:create_model() successfully completed......................................
2024-12-05 22:59:36,005:INFO:SubProcess create_model() end ==================================
2024-12-05 22:59:36,006:INFO:Creating metrics dataframe
2024-12-05 22:59:36,043:INFO:Initializing Light Gradient Boosting Machine
2024-12-05 22:59:36,043:INFO:Total runtime is 5.54200450181961 minutes
2024-12-05 22:59:36,055:INFO:SubProcess create_model() called ==================================
2024-12-05 22:59:36,057:INFO:Initializing create_model()
2024-12-05 22:59:36,057:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E2239F7F0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1B80A2C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 22:59:36,057:INFO:Checking exceptions
2024-12-05 22:59:36,057:INFO:Importing libraries
2024-12-05 22:59:36,058:INFO:Copying training dataset
2024-12-05 22:59:36,314:INFO:Defining folds
2024-12-05 22:59:36,314:INFO:Declaring metric variables
2024-12-05 22:59:36,321:INFO:Importing untrained model
2024-12-05 22:59:36,331:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-05 22:59:36,348:INFO:Starting cross validation
2024-12-05 22:59:36,368:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:00:08,965:INFO:Calculating mean and std
2024-12-05 23:00:08,972:INFO:Creating metrics dataframe
2024-12-05 23:00:09,009:INFO:Uploading results into container
2024-12-05 23:00:09,012:INFO:Uploading model into container now
2024-12-05 23:00:09,014:INFO:_master_model_container: 5
2024-12-05 23:00:09,014:INFO:_display_container: 2
2024-12-05 23:00:09,016:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-05 23:00:09,016:INFO:create_model() successfully completed......................................
2024-12-05 23:00:09,257:INFO:SubProcess create_model() end ==================================
2024-12-05 23:00:09,257:INFO:Creating metrics dataframe
2024-12-05 23:00:09,267:INFO:Initializing Gradient Boosting Classifier
2024-12-05 23:00:09,267:INFO:Total runtime is 6.095735259850819 minutes
2024-12-05 23:00:09,270:INFO:SubProcess create_model() called ==================================
2024-12-05 23:00:09,271:INFO:Initializing create_model()
2024-12-05 23:00:09,271:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E2239F7F0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1B80A2C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:00:09,271:INFO:Checking exceptions
2024-12-05 23:00:09,271:INFO:Importing libraries
2024-12-05 23:00:09,271:INFO:Copying training dataset
2024-12-05 23:00:09,396:INFO:Defining folds
2024-12-05 23:00:09,396:INFO:Declaring metric variables
2024-12-05 23:00:09,400:INFO:Importing untrained model
2024-12-05 23:00:09,404:INFO:Gradient Boosting Classifier Imported successfully
2024-12-05 23:00:09,412:INFO:Starting cross validation
2024-12-05 23:00:09,423:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:03:30,105:INFO:Calculating mean and std
2024-12-05 23:03:30,110:INFO:Creating metrics dataframe
2024-12-05 23:03:30,135:INFO:Uploading results into container
2024-12-05 23:03:30,139:INFO:Uploading model into container now
2024-12-05 23:03:30,142:INFO:_master_model_container: 6
2024-12-05 23:03:30,142:INFO:_display_container: 2
2024-12-05 23:03:30,143:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-05 23:03:30,144:INFO:create_model() successfully completed......................................
2024-12-05 23:03:30,702:INFO:SubProcess create_model() end ==================================
2024-12-05 23:03:30,702:INFO:Creating metrics dataframe
2024-12-05 23:03:30,772:INFO:Initializing Extreme Gradient Boosting
2024-12-05 23:03:30,773:INFO:Total runtime is 9.454146560033163 minutes
2024-12-05 23:03:30,792:INFO:SubProcess create_model() called ==================================
2024-12-05 23:03:30,792:INFO:Initializing create_model()
2024-12-05 23:03:30,792:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E2239F7F0>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1B80A2C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:03:30,793:INFO:Checking exceptions
2024-12-05 23:03:30,793:INFO:Importing libraries
2024-12-05 23:03:30,793:INFO:Copying training dataset
2024-12-05 23:03:30,920:INFO:Defining folds
2024-12-05 23:03:30,920:INFO:Declaring metric variables
2024-12-05 23:03:30,925:INFO:Importing untrained model
2024-12-05 23:03:30,930:INFO:Extreme Gradient Boosting Imported successfully
2024-12-05 23:03:30,936:INFO:Starting cross validation
2024-12-05 23:03:30,948:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:03:57,561:INFO:Calculating mean and std
2024-12-05 23:03:57,567:INFO:Creating metrics dataframe
2024-12-05 23:03:57,596:INFO:Uploading results into container
2024-12-05 23:03:57,599:INFO:Uploading model into container now
2024-12-05 23:03:57,603:INFO:_master_model_container: 7
2024-12-05 23:03:57,604:INFO:_display_container: 2
2024-12-05 23:03:57,610:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-12-05 23:03:57,610:INFO:create_model() successfully completed......................................
2024-12-05 23:03:58,149:INFO:SubProcess create_model() end ==================================
2024-12-05 23:03:58,150:INFO:Creating metrics dataframe
2024-12-05 23:03:58,187:INFO:Initializing Decision Tree Classifier
2024-12-05 23:03:58,188:INFO:Total runtime is 9.911072250207265 minutes
2024-12-05 23:03:58,200:INFO:SubProcess create_model() called ==================================
2024-12-05 23:03:58,200:INFO:Initializing create_model()
2024-12-05 23:03:58,202:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E2239F7F0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1B80A2C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:03:58,202:INFO:Checking exceptions
2024-12-05 23:03:58,202:INFO:Importing libraries
2024-12-05 23:03:58,202:INFO:Copying training dataset
2024-12-05 23:03:58,439:INFO:Defining folds
2024-12-05 23:03:58,439:INFO:Declaring metric variables
2024-12-05 23:03:58,445:INFO:Importing untrained model
2024-12-05 23:03:58,451:INFO:Decision Tree Classifier Imported successfully
2024-12-05 23:03:58,462:INFO:Starting cross validation
2024-12-05 23:03:58,477:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:04:22,679:INFO:Calculating mean and std
2024-12-05 23:04:22,682:INFO:Creating metrics dataframe
2024-12-05 23:04:22,691:INFO:Uploading results into container
2024-12-05 23:04:22,692:INFO:Uploading model into container now
2024-12-05 23:04:22,693:INFO:_master_model_container: 8
2024-12-05 23:04:22,693:INFO:_display_container: 2
2024-12-05 23:04:22,693:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-12-05 23:04:22,694:INFO:create_model() successfully completed......................................
2024-12-05 23:04:23,000:INFO:SubProcess create_model() end ==================================
2024-12-05 23:04:23,000:INFO:Creating metrics dataframe
2024-12-05 23:04:23,052:INFO:Initializing create_model()
2024-12-05 23:04:23,056:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E2239F7F0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:04:23,057:INFO:Checking exceptions
2024-12-05 23:04:23,060:INFO:Importing libraries
2024-12-05 23:04:23,060:INFO:Copying training dataset
2024-12-05 23:04:23,210:INFO:Defining folds
2024-12-05 23:04:23,210:INFO:Declaring metric variables
2024-12-05 23:04:23,210:INFO:Importing untrained model
2024-12-05 23:04:23,210:INFO:Declaring custom model
2024-12-05 23:04:23,211:INFO:Random Forest Classifier Imported successfully
2024-12-05 23:04:23,223:INFO:Cross validation set to False
2024-12-05 23:04:23,223:INFO:Fitting Model
2024-12-05 23:04:34,144:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 23:04:34,144:INFO:create_model() successfully completed......................................
2024-12-05 23:04:34,354:INFO:_master_model_container: 8
2024-12-05 23:04:34,355:INFO:_display_container: 2
2024-12-05 23:04:34,355:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 23:04:34,355:INFO:compare_models() successfully completed......................................
2024-12-05 23:04:34,414:INFO:Initializing predict_model()
2024-12-05 23:04:34,414:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E2239F7F0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E1B4A32E0>)
2024-12-05 23:04:34,414:INFO:Checking exceptions
2024-12-05 23:04:34,414:INFO:Preloading libraries
2024-12-05 23:04:34,418:INFO:Set up data.
2024-12-05 23:04:34,607:INFO:Set up index.
2024-12-05 23:04:35,608:INFO:Initializing finalize_model()
2024-12-05 23:04:35,609:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E2239F7F0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-05 23:04:35,609:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 23:04:35,685:INFO:Initializing create_model()
2024-12-05 23:04:35,686:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E2239F7F0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:04:35,686:INFO:Checking exceptions
2024-12-05 23:04:35,688:INFO:Importing libraries
2024-12-05 23:04:35,688:INFO:Copying training dataset
2024-12-05 23:04:35,699:INFO:Defining folds
2024-12-05 23:04:35,699:INFO:Declaring metric variables
2024-12-05 23:04:35,699:INFO:Importing untrained model
2024-12-05 23:04:35,699:INFO:Declaring custom model
2024-12-05 23:04:35,700:INFO:Random Forest Classifier Imported successfully
2024-12-05 23:04:35,708:INFO:Cross validation set to False
2024-12-05 23:04:35,709:INFO:Fitting Model
2024-12-05 23:04:52,985:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-12-05 23:04:52,986:INFO:create_model() successfully completed......................................
2024-12-05 23:04:53,178:INFO:_master_model_container: 8
2024-12-05 23:04:53,178:INFO:_display_container: 3
2024-12-05 23:04:53,192:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-12-05 23:04:53,192:INFO:finalize_model() successfully completed......................................
2024-12-05 23:04:53,385:INFO:Initializing predict_model()
2024-12-05 23:04:53,385:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E2239F7F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E19A8BEB0>)
2024-12-05 23:04:53,385:INFO:Checking exceptions
2024-12-05 23:04:53,385:INFO:Preloading libraries
2024-12-05 23:04:53,387:INFO:Set up data.
2024-12-05 23:04:53,582:INFO:Set up index.
2024-12-05 23:04:54,788:INFO:Initializing predict_model()
2024-12-05 23:04:54,788:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E2239F7F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E1B4A23B0>)
2024-12-05 23:04:54,788:INFO:Checking exceptions
2024-12-05 23:04:54,788:INFO:Preloading libraries
2024-12-05 23:04:54,791:INFO:Set up data.
2024-12-05 23:04:54,977:INFO:Set up index.
2024-12-05 23:04:56,499:INFO:PyCaret ClassificationExperiment
2024-12-05 23:04:56,499:INFO:Logging name: clf-default-name
2024-12-05 23:04:56,499:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-05 23:04:56,499:INFO:version 3.3.2
2024-12-05 23:04:56,499:INFO:Initializing setup()
2024-12-05 23:04:56,499:INFO:self.USI: 6342
2024-12-05 23:04:56,499:INFO:self._variable_keys: {'_available_plots', 'logging_param', 'is_multiclass', 'fold_generator', 'y', 'data', 'fold_groups_param', 'memory', 'X', 'target_param', 'pipeline', 'y_train', '_ml_usecase', 'seed', 'X_train', 'html_param', 'USI', 'X_test', 'exp_name_log', 'exp_id', 'fix_imbalance', 'fold_shuffle_param', 'gpu_param', 'gpu_n_jobs_param', 'y_test', 'log_plots_param', 'idx', 'n_jobs_param'}
2024-12-05 23:04:56,499:INFO:Checking environment
2024-12-05 23:04:56,499:INFO:python_version: 3.10.11
2024-12-05 23:04:56,499:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-12-05 23:04:56,499:INFO:machine: AMD64
2024-12-05 23:04:56,499:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-05 23:04:56,503:INFO:Memory: svmem(total=17041244160, available=4210511872, percent=75.3, used=12830732288, free=4210511872)
2024-12-05 23:04:56,503:INFO:Physical Core: 4
2024-12-05 23:04:56,503:INFO:Logical Core: 8
2024-12-05 23:04:56,503:INFO:Checking libraries
2024-12-05 23:04:56,503:INFO:System:
2024-12-05 23:04:56,503:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-12-05 23:04:56,503:INFO:executable: c:\Users\diego\AppData\Local\Programs\Python\Python310\python.exe
2024-12-05 23:04:56,503:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-05 23:04:56,503:INFO:PyCaret required dependencies:
2024-12-05 23:04:56,503:INFO:                 pip: 24.2
2024-12-05 23:04:56,503:INFO:          setuptools: 65.5.0
2024-12-05 23:04:56,503:INFO:             pycaret: 3.3.2
2024-12-05 23:04:56,503:INFO:             IPython: 8.26.0
2024-12-05 23:04:56,503:INFO:          ipywidgets: 8.1.5
2024-12-05 23:04:56,503:INFO:                tqdm: 4.66.5
2024-12-05 23:04:56,503:INFO:               numpy: 1.26.4
2024-12-05 23:04:56,504:INFO:              pandas: 1.5.3
2024-12-05 23:04:56,504:INFO:              jinja2: 3.1.4
2024-12-05 23:04:56,504:INFO:               scipy: 1.11.4
2024-12-05 23:04:56,504:INFO:              joblib: 1.3.2
2024-12-05 23:04:56,504:INFO:             sklearn: 1.4.2
2024-12-05 23:04:56,504:INFO:                pyod: 2.0.2
2024-12-05 23:04:56,504:INFO:            imblearn: 0.12.3
2024-12-05 23:04:56,504:INFO:   category_encoders: 2.6.4
2024-12-05 23:04:56,504:INFO:            lightgbm: 4.5.0
2024-12-05 23:04:56,504:INFO:               numba: 0.60.0
2024-12-05 23:04:56,504:INFO:            requests: 2.32.3
2024-12-05 23:04:56,504:INFO:          matplotlib: 3.7.5
2024-12-05 23:04:56,504:INFO:          scikitplot: 0.3.7
2024-12-05 23:04:56,504:INFO:         yellowbrick: 1.5
2024-12-05 23:04:56,504:INFO:              plotly: 5.24.1
2024-12-05 23:04:56,504:INFO:    plotly-resampler: Not installed
2024-12-05 23:04:56,504:INFO:             kaleido: 0.2.1
2024-12-05 23:04:56,504:INFO:           schemdraw: 0.15
2024-12-05 23:04:56,504:INFO:         statsmodels: 0.14.4
2024-12-05 23:04:56,504:INFO:              sktime: 0.26.0
2024-12-05 23:04:56,504:INFO:               tbats: 1.1.3
2024-12-05 23:04:56,504:INFO:            pmdarima: 2.0.4
2024-12-05 23:04:56,504:INFO:              psutil: 6.0.0
2024-12-05 23:04:56,504:INFO:          markupsafe: 2.1.5
2024-12-05 23:04:56,504:INFO:             pickle5: Not installed
2024-12-05 23:04:56,504:INFO:         cloudpickle: 3.1.0
2024-12-05 23:04:56,504:INFO:         deprecation: 2.1.0
2024-12-05 23:04:56,504:INFO:              xxhash: 3.5.0
2024-12-05 23:04:56,504:INFO:           wurlitzer: Not installed
2024-12-05 23:04:56,505:INFO:PyCaret optional dependencies:
2024-12-05 23:04:56,505:INFO:                shap: 0.44.0
2024-12-05 23:04:56,505:INFO:           interpret: 0.5.0
2024-12-05 23:04:56,505:INFO:                umap: 0.5.6
2024-12-05 23:04:56,505:INFO:     ydata_profiling: 4.11.0
2024-12-05 23:04:56,505:INFO:  explainerdashboard: 0.4.7
2024-12-05 23:04:56,505:INFO:             autoviz: Not installed
2024-12-05 23:04:56,505:INFO:           fairlearn: 0.7.0
2024-12-05 23:04:56,505:INFO:          deepchecks: Not installed
2024-12-05 23:04:56,505:INFO:             xgboost: 2.1.2
2024-12-05 23:04:56,505:INFO:            catboost: 1.2.7
2024-12-05 23:04:56,505:INFO:              kmodes: Not installed
2024-12-05 23:04:56,505:INFO:             mlxtend: Not installed
2024-12-05 23:04:56,505:INFO:       statsforecast: Not installed
2024-12-05 23:04:56,505:INFO:        tune_sklearn: Not installed
2024-12-05 23:04:56,505:INFO:                 ray: Not installed
2024-12-05 23:04:56,505:INFO:            hyperopt: Not installed
2024-12-05 23:04:56,505:INFO:              optuna: 4.0.0
2024-12-05 23:04:56,505:INFO:               skopt: Not installed
2024-12-05 23:04:56,505:INFO:              mlflow: 2.18.0
2024-12-05 23:04:56,505:INFO:              gradio: Not installed
2024-12-05 23:04:56,505:INFO:             fastapi: Not installed
2024-12-05 23:04:56,505:INFO:             uvicorn: Not installed
2024-12-05 23:04:56,505:INFO:              m2cgen: Not installed
2024-12-05 23:04:56,505:INFO:           evidently: Not installed
2024-12-05 23:04:56,505:INFO:               fugue: Not installed
2024-12-05 23:04:56,505:INFO:           streamlit: 1.39.0
2024-12-05 23:04:56,505:INFO:             prophet: Not installed
2024-12-05 23:04:56,506:INFO:None
2024-12-05 23:04:56,506:INFO:Set up data.
2024-12-05 23:04:56,792:INFO:Set up folding strategy.
2024-12-05 23:04:56,792:INFO:Set up train/test split.
2024-12-05 23:04:56,968:INFO:Set up index.
2024-12-05 23:04:56,976:INFO:Assigning column types.
2024-12-05 23:04:57,108:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-05 23:04:57,152:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 23:04:57,153:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 23:04:57,180:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 23:04:57,182:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 23:04:57,225:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 23:04:57,226:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 23:04:57,255:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 23:04:57,258:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 23:04:57,258:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-05 23:04:57,307:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 23:04:57,349:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 23:04:57,352:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 23:04:57,403:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 23:04:57,429:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 23:04:57,431:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 23:04:57,431:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-05 23:04:57,508:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 23:04:57,511:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 23:04:57,645:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 23:04:57,648:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 23:04:57,649:INFO:Preparing preprocessing pipeline...
2024-12-05 23:04:57,666:INFO:Set up simple imputation.
2024-12-05 23:04:57,712:INFO:Set up encoding of categorical features.
2024-12-05 23:04:57,714:INFO:Set up imbalanced handling.
2024-12-05 23:04:57,715:INFO:Set up feature normalization.
2024-12-05 23:04:57,715:INFO:Set up feature selection.
2024-12-05 23:04:57,788:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 23:04:57,790:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 23:05:03,297:INFO:Finished creating preprocessing pipeline.
2024-12-05 23:05:03,322:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\diego\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_ti...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=82,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2024-12-05 23:05:03,322:INFO:Creating final display dataframe.
2024-12-05 23:05:04,954:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            target
2                   Target type            Binary
3           Original data shape      (31007, 413)
4        Transformed data shape       (31505, 83)
5   Transformed train set shape       (22202, 83)
6    Transformed test set shape        (9303, 83)
7              Numeric features               411
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17                    Normalize              True
18             Normalize method            zscore
19            Feature selection              True
20     Feature selection method           classic
21  Feature selection estimator          lightgbm
22  Number of features selected               0.2
23               Fold Generator   StratifiedKFold
24                  Fold Number                 5
25                     CPU Jobs                -1
26                      Use GPU             False
27               Log Experiment             False
28              Experiment Name  clf-default-name
29                          USI              6342
2024-12-05 23:05:05,050:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 23:05:05,054:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 23:05:05,132:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 23:05:05,134:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 23:05:05,136:INFO:setup() successfully completed in 8.71s...............
2024-12-05 23:05:05,204:INFO:Initializing compare_models()
2024-12-05 23:05:05,204:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E244DC0A0>, include=['et', 'catboost', 'lr', 'rf', 'lightgbm', 'gbc', 'xgboost', 'dt'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023E244DC0A0>, 'include': ['et', 'catboost', 'lr', 'rf', 'lightgbm', 'gbc', 'xgboost', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-05 23:05:05,205:INFO:Checking exceptions
2024-12-05 23:05:05,290:INFO:Preparing display monitor
2024-12-05 23:05:05,317:INFO:Initializing Extra Trees Classifier
2024-12-05 23:05:05,317:INFO:Total runtime is 0.0 minutes
2024-12-05 23:05:05,324:INFO:SubProcess create_model() called ==================================
2024-12-05 23:05:05,324:INFO:Initializing create_model()
2024-12-05 23:05:05,324:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E244DC0A0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1CD895D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:05:05,324:INFO:Checking exceptions
2024-12-05 23:05:05,324:INFO:Importing libraries
2024-12-05 23:05:05,325:INFO:Copying training dataset
2024-12-05 23:05:05,457:INFO:Defining folds
2024-12-05 23:05:05,457:INFO:Declaring metric variables
2024-12-05 23:05:05,460:INFO:Importing untrained model
2024-12-05 23:05:05,465:INFO:Extra Trees Classifier Imported successfully
2024-12-05 23:05:05,473:INFO:Starting cross validation
2024-12-05 23:05:05,487:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:05:39,857:INFO:Calculating mean and std
2024-12-05 23:05:39,859:INFO:Creating metrics dataframe
2024-12-05 23:05:39,869:INFO:Uploading results into container
2024-12-05 23:05:39,870:INFO:Uploading model into container now
2024-12-05 23:05:39,872:INFO:_master_model_container: 1
2024-12-05 23:05:39,872:INFO:_display_container: 2
2024-12-05 23:05:39,873:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 23:05:39,873:INFO:create_model() successfully completed......................................
2024-12-05 23:05:40,288:INFO:SubProcess create_model() end ==================================
2024-12-05 23:05:40,288:INFO:Creating metrics dataframe
2024-12-05 23:05:40,303:INFO:Initializing CatBoost Classifier
2024-12-05 23:05:40,303:INFO:Total runtime is 0.5830901940663655 minutes
2024-12-05 23:05:40,308:INFO:SubProcess create_model() called ==================================
2024-12-05 23:05:40,308:INFO:Initializing create_model()
2024-12-05 23:05:40,308:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E244DC0A0>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1CD895D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:05:40,309:INFO:Checking exceptions
2024-12-05 23:05:40,309:INFO:Importing libraries
2024-12-05 23:05:40,309:INFO:Copying training dataset
2024-12-05 23:05:40,490:INFO:Defining folds
2024-12-05 23:05:40,490:INFO:Declaring metric variables
2024-12-05 23:05:40,498:INFO:Importing untrained model
2024-12-05 23:05:40,506:INFO:CatBoost Classifier Imported successfully
2024-12-05 23:05:40,516:INFO:Starting cross validation
2024-12-05 23:05:40,538:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:07:06,086:INFO:Calculating mean and std
2024-12-05 23:07:06,088:INFO:Creating metrics dataframe
2024-12-05 23:07:06,095:INFO:Uploading results into container
2024-12-05 23:07:06,096:INFO:Uploading model into container now
2024-12-05 23:07:06,097:INFO:_master_model_container: 2
2024-12-05 23:07:06,097:INFO:_display_container: 2
2024-12-05 23:07:06,097:INFO:<catboost.core.CatBoostClassifier object at 0x0000023E243F3D60>
2024-12-05 23:07:06,097:INFO:create_model() successfully completed......................................
2024-12-05 23:07:06,366:INFO:SubProcess create_model() end ==================================
2024-12-05 23:07:06,366:INFO:Creating metrics dataframe
2024-12-05 23:07:06,386:INFO:Initializing Logistic Regression
2024-12-05 23:07:06,387:INFO:Total runtime is 2.017819301287333 minutes
2024-12-05 23:07:06,392:INFO:SubProcess create_model() called ==================================
2024-12-05 23:07:06,393:INFO:Initializing create_model()
2024-12-05 23:07:06,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E244DC0A0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1CD895D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:07:06,393:INFO:Checking exceptions
2024-12-05 23:07:06,394:INFO:Importing libraries
2024-12-05 23:07:06,394:INFO:Copying training dataset
2024-12-05 23:07:06,619:INFO:Defining folds
2024-12-05 23:07:06,621:INFO:Declaring metric variables
2024-12-05 23:07:06,628:INFO:Importing untrained model
2024-12-05 23:07:06,636:INFO:Logistic Regression Imported successfully
2024-12-05 23:07:06,651:INFO:Starting cross validation
2024-12-05 23:07:06,679:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:07:32,731:INFO:Calculating mean and std
2024-12-05 23:07:32,737:INFO:Creating metrics dataframe
2024-12-05 23:07:32,759:INFO:Uploading results into container
2024-12-05 23:07:32,762:INFO:Uploading model into container now
2024-12-05 23:07:32,764:INFO:_master_model_container: 3
2024-12-05 23:07:32,765:INFO:_display_container: 2
2024-12-05 23:07:32,768:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-05 23:07:32,769:INFO:create_model() successfully completed......................................
2024-12-05 23:07:33,264:INFO:SubProcess create_model() end ==================================
2024-12-05 23:07:33,265:INFO:Creating metrics dataframe
2024-12-05 23:07:33,303:INFO:Initializing Random Forest Classifier
2024-12-05 23:07:33,303:INFO:Total runtime is 2.4664323727289834 minutes
2024-12-05 23:07:33,315:INFO:SubProcess create_model() called ==================================
2024-12-05 23:07:33,316:INFO:Initializing create_model()
2024-12-05 23:07:33,317:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E244DC0A0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1CD895D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:07:33,317:INFO:Checking exceptions
2024-12-05 23:07:33,317:INFO:Importing libraries
2024-12-05 23:07:33,318:INFO:Copying training dataset
2024-12-05 23:07:33,529:INFO:Defining folds
2024-12-05 23:07:33,529:INFO:Declaring metric variables
2024-12-05 23:07:33,535:INFO:Importing untrained model
2024-12-05 23:07:33,541:INFO:Random Forest Classifier Imported successfully
2024-12-05 23:07:33,553:INFO:Starting cross validation
2024-12-05 23:07:33,573:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:08:11,992:INFO:Calculating mean and std
2024-12-05 23:08:11,996:INFO:Creating metrics dataframe
2024-12-05 23:08:12,015:INFO:Uploading results into container
2024-12-05 23:08:12,021:INFO:Uploading model into container now
2024-12-05 23:08:12,022:INFO:_master_model_container: 4
2024-12-05 23:08:12,022:INFO:_display_container: 2
2024-12-05 23:08:12,025:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 23:08:12,028:INFO:create_model() successfully completed......................................
2024-12-05 23:08:12,519:INFO:SubProcess create_model() end ==================================
2024-12-05 23:08:12,519:INFO:Creating metrics dataframe
2024-12-05 23:08:12,551:INFO:Initializing Light Gradient Boosting Machine
2024-12-05 23:08:12,551:INFO:Total runtime is 3.1205641428629556 minutes
2024-12-05 23:08:12,563:INFO:SubProcess create_model() called ==================================
2024-12-05 23:08:12,564:INFO:Initializing create_model()
2024-12-05 23:08:12,565:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E244DC0A0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1CD895D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:08:12,566:INFO:Checking exceptions
2024-12-05 23:08:12,566:INFO:Importing libraries
2024-12-05 23:08:12,567:INFO:Copying training dataset
2024-12-05 23:08:12,767:INFO:Defining folds
2024-12-05 23:08:12,767:INFO:Declaring metric variables
2024-12-05 23:08:12,772:INFO:Importing untrained model
2024-12-05 23:08:12,778:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-05 23:08:12,785:INFO:Starting cross validation
2024-12-05 23:08:12,800:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:08:37,368:INFO:Calculating mean and std
2024-12-05 23:08:37,369:INFO:Creating metrics dataframe
2024-12-05 23:08:37,374:INFO:Uploading results into container
2024-12-05 23:08:37,374:INFO:Uploading model into container now
2024-12-05 23:08:37,376:INFO:_master_model_container: 5
2024-12-05 23:08:37,376:INFO:_display_container: 2
2024-12-05 23:08:37,376:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-05 23:08:37,376:INFO:create_model() successfully completed......................................
2024-12-05 23:08:37,597:INFO:SubProcess create_model() end ==================================
2024-12-05 23:08:37,598:INFO:Creating metrics dataframe
2024-12-05 23:08:37,607:INFO:Initializing Gradient Boosting Classifier
2024-12-05 23:08:37,608:INFO:Total runtime is 3.5381834268569943 minutes
2024-12-05 23:08:37,611:INFO:SubProcess create_model() called ==================================
2024-12-05 23:08:37,611:INFO:Initializing create_model()
2024-12-05 23:08:37,611:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E244DC0A0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1CD895D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:08:37,611:INFO:Checking exceptions
2024-12-05 23:08:37,611:INFO:Importing libraries
2024-12-05 23:08:37,612:INFO:Copying training dataset
2024-12-05 23:08:37,773:INFO:Defining folds
2024-12-05 23:08:37,773:INFO:Declaring metric variables
2024-12-05 23:08:37,777:INFO:Importing untrained model
2024-12-05 23:08:37,781:INFO:Gradient Boosting Classifier Imported successfully
2024-12-05 23:08:37,790:INFO:Starting cross validation
2024-12-05 23:08:37,805:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:09:49,355:INFO:Calculating mean and std
2024-12-05 23:09:49,359:INFO:Creating metrics dataframe
2024-12-05 23:09:49,374:INFO:Uploading results into container
2024-12-05 23:09:49,376:INFO:Uploading model into container now
2024-12-05 23:09:49,377:INFO:_master_model_container: 6
2024-12-05 23:09:49,377:INFO:_display_container: 2
2024-12-05 23:09:49,379:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-05 23:09:49,380:INFO:create_model() successfully completed......................................
2024-12-05 23:09:49,671:INFO:SubProcess create_model() end ==================================
2024-12-05 23:09:49,672:INFO:Creating metrics dataframe
2024-12-05 23:09:49,695:INFO:Initializing Extreme Gradient Boosting
2024-12-05 23:09:49,696:INFO:Total runtime is 4.739636516571045 minutes
2024-12-05 23:09:49,702:INFO:SubProcess create_model() called ==================================
2024-12-05 23:09:49,703:INFO:Initializing create_model()
2024-12-05 23:09:49,704:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E244DC0A0>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1CD895D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:09:49,704:INFO:Checking exceptions
2024-12-05 23:09:49,704:INFO:Importing libraries
2024-12-05 23:09:49,704:INFO:Copying training dataset
2024-12-05 23:09:49,934:INFO:Defining folds
2024-12-05 23:09:49,934:INFO:Declaring metric variables
2024-12-05 23:09:49,940:INFO:Importing untrained model
2024-12-05 23:09:49,949:INFO:Extreme Gradient Boosting Imported successfully
2024-12-05 23:09:49,965:INFO:Starting cross validation
2024-12-05 23:09:49,993:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:10:14,872:INFO:Calculating mean and std
2024-12-05 23:10:14,873:INFO:Creating metrics dataframe
2024-12-05 23:10:14,877:INFO:Uploading results into container
2024-12-05 23:10:14,878:INFO:Uploading model into container now
2024-12-05 23:10:14,878:INFO:_master_model_container: 7
2024-12-05 23:10:14,878:INFO:_display_container: 2
2024-12-05 23:10:14,880:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-12-05 23:10:14,880:INFO:create_model() successfully completed......................................
2024-12-05 23:10:15,095:INFO:SubProcess create_model() end ==================================
2024-12-05 23:10:15,095:INFO:Creating metrics dataframe
2024-12-05 23:10:15,108:INFO:Initializing Decision Tree Classifier
2024-12-05 23:10:15,108:INFO:Total runtime is 5.163170611858368 minutes
2024-12-05 23:10:15,111:INFO:SubProcess create_model() called ==================================
2024-12-05 23:10:15,111:INFO:Initializing create_model()
2024-12-05 23:10:15,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E244DC0A0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1CD895D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:10:15,112:INFO:Checking exceptions
2024-12-05 23:10:15,112:INFO:Importing libraries
2024-12-05 23:10:15,112:INFO:Copying training dataset
2024-12-05 23:10:15,254:INFO:Defining folds
2024-12-05 23:10:15,254:INFO:Declaring metric variables
2024-12-05 23:10:15,259:INFO:Importing untrained model
2024-12-05 23:10:15,266:INFO:Decision Tree Classifier Imported successfully
2024-12-05 23:10:15,276:INFO:Starting cross validation
2024-12-05 23:10:15,294:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:10:40,835:INFO:Calculating mean and std
2024-12-05 23:10:40,843:INFO:Creating metrics dataframe
2024-12-05 23:10:40,869:INFO:Uploading results into container
2024-12-05 23:10:40,875:INFO:Uploading model into container now
2024-12-05 23:10:40,877:INFO:_master_model_container: 8
2024-12-05 23:10:40,877:INFO:_display_container: 2
2024-12-05 23:10:40,881:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-12-05 23:10:40,881:INFO:create_model() successfully completed......................................
2024-12-05 23:10:41,181:INFO:SubProcess create_model() end ==================================
2024-12-05 23:10:41,181:INFO:Creating metrics dataframe
2024-12-05 23:10:41,213:INFO:Initializing create_model()
2024-12-05 23:10:41,214:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E244DC0A0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:10:41,214:INFO:Checking exceptions
2024-12-05 23:10:41,218:INFO:Importing libraries
2024-12-05 23:10:41,218:INFO:Copying training dataset
2024-12-05 23:10:41,378:INFO:Defining folds
2024-12-05 23:10:41,378:INFO:Declaring metric variables
2024-12-05 23:10:41,378:INFO:Importing untrained model
2024-12-05 23:10:41,378:INFO:Declaring custom model
2024-12-05 23:10:41,379:INFO:Extra Trees Classifier Imported successfully
2024-12-05 23:10:41,389:INFO:Cross validation set to False
2024-12-05 23:10:41,389:INFO:Fitting Model
2024-12-05 23:10:44,620:INFO:[LightGBM] [Info] Number of positive: 11101, number of negative: 11101
2024-12-05 23:10:44,683:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0,054204 seconds.
2024-12-05 23:10:44,683:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-12-05 23:10:44,686:INFO:[LightGBM] [Info] Total Bins 93928
2024-12-05 23:10:44,690:INFO:[LightGBM] [Info] Number of data points in the train set: 22202, number of used features: 412
2024-12-05 23:10:44,694:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0,500000 -> initscore=0,000000
2024-12-05 23:10:49,409:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 23:10:49,409:INFO:create_model() successfully completed......................................
2024-12-05 23:10:49,716:INFO:_master_model_container: 8
2024-12-05 23:10:49,717:INFO:_display_container: 2
2024-12-05 23:10:49,718:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 23:10:49,718:INFO:compare_models() successfully completed......................................
2024-12-05 23:10:49,788:INFO:Initializing predict_model()
2024-12-05 23:10:49,788:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E244DC0A0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E2383E680>)
2024-12-05 23:10:49,788:INFO:Checking exceptions
2024-12-05 23:10:49,788:INFO:Preloading libraries
2024-12-05 23:10:49,791:INFO:Set up data.
2024-12-05 23:10:49,988:INFO:Set up index.
2024-12-05 23:10:51,132:INFO:Initializing finalize_model()
2024-12-05 23:10:51,132:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E244DC0A0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-05 23:10:51,132:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 23:10:51,216:INFO:Initializing create_model()
2024-12-05 23:10:51,216:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E244DC0A0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:10:51,216:INFO:Checking exceptions
2024-12-05 23:10:51,217:INFO:Importing libraries
2024-12-05 23:10:51,217:INFO:Copying training dataset
2024-12-05 23:10:51,227:INFO:Defining folds
2024-12-05 23:10:51,227:INFO:Declaring metric variables
2024-12-05 23:10:51,227:INFO:Importing untrained model
2024-12-05 23:10:51,227:INFO:Declaring custom model
2024-12-05 23:10:51,228:INFO:Extra Trees Classifier Imported successfully
2024-12-05 23:10:51,238:INFO:Cross validation set to False
2024-12-05 23:10:51,238:INFO:Fitting Model
2024-12-05 23:10:56,583:INFO:[LightGBM] [Info] Number of positive: 15859, number of negative: 15859
2024-12-05 23:10:56,666:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0,072028 seconds.
2024-12-05 23:10:56,666:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-12-05 23:10:56,669:INFO:[LightGBM] [Info] Total Bins 94086
2024-12-05 23:10:56,674:INFO:[LightGBM] [Info] Number of data points in the train set: 31718, number of used features: 411
2024-12-05 23:10:56,676:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0,500000 -> initscore=0,000000
2024-12-05 23:11:02,900:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 23:11:02,900:INFO:create_model() successfully completed......................................
2024-12-05 23:11:03,099:INFO:_master_model_container: 8
2024-12-05 23:11:03,099:INFO:_display_container: 3
2024-12-05 23:11:03,122:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 23:11:03,122:INFO:finalize_model() successfully completed......................................
2024-12-05 23:11:03,370:INFO:Initializing predict_model()
2024-12-05 23:11:03,370:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E244DC0A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E2383D7E0>)
2024-12-05 23:11:03,370:INFO:Checking exceptions
2024-12-05 23:11:03,370:INFO:Preloading libraries
2024-12-05 23:11:03,372:INFO:Set up data.
2024-12-05 23:11:03,661:INFO:Set up index.
2024-12-05 23:11:05,058:INFO:Initializing predict_model()
2024-12-05 23:11:05,058:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E244DC0A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E2383F0A0>)
2024-12-05 23:11:05,058:INFO:Checking exceptions
2024-12-05 23:11:05,058:INFO:Preloading libraries
2024-12-05 23:11:05,060:INFO:Set up data.
2024-12-05 23:11:05,291:INFO:Set up index.
2024-12-05 23:12:36,344:INFO:Initializing plot_model()
2024-12-05 23:12:36,345:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E244DC0A0>, system=True)
2024-12-05 23:12:36,345:INFO:Checking exceptions
2024-12-05 23:12:36,506:INFO:Preloading libraries
2024-12-05 23:12:36,610:INFO:Copying training dataset
2024-12-05 23:12:36,610:INFO:Plot type: feature
2024-12-05 23:12:36,611:WARNING:No coef_ found. Trying feature_importances_
2024-12-05 23:12:37,018:INFO:Visual Rendered Successfully
2024-12-05 23:12:37,194:INFO:plot_model() successfully completed......................................
2024-12-05 23:13:08,247:INFO:Initializing plot_model()
2024-12-05 23:13:08,247:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'wallet_age',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contract_count',
                                             'risky_first_tx_timestamp',
                                             'risky_first_last_tx_timestamp_diff',
                                             'incoming_tx_sum_eth',
                                             'out...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E244DC0A0>, system=True)
2024-12-05 23:13:08,247:INFO:Checking exceptions
2024-12-05 23:13:08,346:INFO:Preloading libraries
2024-12-05 23:13:08,479:INFO:Copying training dataset
2024-12-05 23:13:08,479:INFO:Plot type: feature
2024-12-05 23:13:08,479:WARNING:No coef_ found. Trying feature_importances_
2024-12-05 23:13:08,897:INFO:Visual Rendered Successfully
2024-12-05 23:13:09,074:INFO:plot_model() successfully completed......................................
2024-12-05 23:24:48,304:INFO:PyCaret ClassificationExperiment
2024-12-05 23:24:48,305:INFO:Logging name: clf-default-name
2024-12-05 23:24:48,305:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-05 23:24:48,305:INFO:version 3.3.2
2024-12-05 23:24:48,305:INFO:Initializing setup()
2024-12-05 23:24:48,305:INFO:self.USI: dad0
2024-12-05 23:24:48,305:INFO:self._variable_keys: {'_available_plots', 'logging_param', 'is_multiclass', 'fold_generator', 'y', 'data', 'fold_groups_param', 'memory', 'X', 'target_param', 'pipeline', 'y_train', '_ml_usecase', 'seed', 'X_train', 'html_param', 'USI', 'X_test', 'exp_name_log', 'exp_id', 'fix_imbalance', 'fold_shuffle_param', 'gpu_param', 'gpu_n_jobs_param', 'y_test', 'log_plots_param', 'idx', 'n_jobs_param'}
2024-12-05 23:24:48,305:INFO:Checking environment
2024-12-05 23:24:48,305:INFO:python_version: 3.10.11
2024-12-05 23:24:48,305:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-12-05 23:24:48,305:INFO:machine: AMD64
2024-12-05 23:24:48,305:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-05 23:24:48,309:INFO:Memory: svmem(total=17041244160, available=6964391936, percent=59.1, used=10076852224, free=6964391936)
2024-12-05 23:24:48,309:INFO:Physical Core: 4
2024-12-05 23:24:48,309:INFO:Logical Core: 8
2024-12-05 23:24:48,309:INFO:Checking libraries
2024-12-05 23:24:48,309:INFO:System:
2024-12-05 23:24:48,310:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-12-05 23:24:48,310:INFO:executable: c:\Users\diego\AppData\Local\Programs\Python\Python310\python.exe
2024-12-05 23:24:48,310:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-05 23:24:48,310:INFO:PyCaret required dependencies:
2024-12-05 23:24:48,310:INFO:                 pip: 24.2
2024-12-05 23:24:48,310:INFO:          setuptools: 65.5.0
2024-12-05 23:24:48,310:INFO:             pycaret: 3.3.2
2024-12-05 23:24:48,310:INFO:             IPython: 8.26.0
2024-12-05 23:24:48,310:INFO:          ipywidgets: 8.1.5
2024-12-05 23:24:48,310:INFO:                tqdm: 4.66.5
2024-12-05 23:24:48,310:INFO:               numpy: 1.26.4
2024-12-05 23:24:48,310:INFO:              pandas: 1.5.3
2024-12-05 23:24:48,311:INFO:              jinja2: 3.1.4
2024-12-05 23:24:48,311:INFO:               scipy: 1.11.4
2024-12-05 23:24:48,311:INFO:              joblib: 1.3.2
2024-12-05 23:24:48,311:INFO:             sklearn: 1.4.2
2024-12-05 23:24:48,311:INFO:                pyod: 2.0.2
2024-12-05 23:24:48,311:INFO:            imblearn: 0.12.3
2024-12-05 23:24:48,311:INFO:   category_encoders: 2.6.4
2024-12-05 23:24:48,311:INFO:            lightgbm: 4.5.0
2024-12-05 23:24:48,311:INFO:               numba: 0.60.0
2024-12-05 23:24:48,311:INFO:            requests: 2.32.3
2024-12-05 23:24:48,311:INFO:          matplotlib: 3.7.5
2024-12-05 23:24:48,311:INFO:          scikitplot: 0.3.7
2024-12-05 23:24:48,311:INFO:         yellowbrick: 1.5
2024-12-05 23:24:48,311:INFO:              plotly: 5.24.1
2024-12-05 23:24:48,311:INFO:    plotly-resampler: Not installed
2024-12-05 23:24:48,311:INFO:             kaleido: 0.2.1
2024-12-05 23:24:48,311:INFO:           schemdraw: 0.15
2024-12-05 23:24:48,311:INFO:         statsmodels: 0.14.4
2024-12-05 23:24:48,311:INFO:              sktime: 0.26.0
2024-12-05 23:24:48,311:INFO:               tbats: 1.1.3
2024-12-05 23:24:48,311:INFO:            pmdarima: 2.0.4
2024-12-05 23:24:48,312:INFO:              psutil: 6.0.0
2024-12-05 23:24:48,312:INFO:          markupsafe: 2.1.5
2024-12-05 23:24:48,312:INFO:             pickle5: Not installed
2024-12-05 23:24:48,312:INFO:         cloudpickle: 3.1.0
2024-12-05 23:24:48,312:INFO:         deprecation: 2.1.0
2024-12-05 23:24:48,312:INFO:              xxhash: 3.5.0
2024-12-05 23:24:48,312:INFO:           wurlitzer: Not installed
2024-12-05 23:24:48,312:INFO:PyCaret optional dependencies:
2024-12-05 23:24:48,312:INFO:                shap: 0.44.0
2024-12-05 23:24:48,312:INFO:           interpret: 0.5.0
2024-12-05 23:24:48,312:INFO:                umap: 0.5.6
2024-12-05 23:24:48,312:INFO:     ydata_profiling: 4.11.0
2024-12-05 23:24:48,312:INFO:  explainerdashboard: 0.4.7
2024-12-05 23:24:48,312:INFO:             autoviz: Not installed
2024-12-05 23:24:48,312:INFO:           fairlearn: 0.7.0
2024-12-05 23:24:48,312:INFO:          deepchecks: Not installed
2024-12-05 23:24:48,312:INFO:             xgboost: 2.1.2
2024-12-05 23:24:48,312:INFO:            catboost: 1.2.7
2024-12-05 23:24:48,312:INFO:              kmodes: Not installed
2024-12-05 23:24:48,312:INFO:             mlxtend: Not installed
2024-12-05 23:24:48,312:INFO:       statsforecast: Not installed
2024-12-05 23:24:48,312:INFO:        tune_sklearn: Not installed
2024-12-05 23:24:48,313:INFO:                 ray: Not installed
2024-12-05 23:24:48,313:INFO:            hyperopt: Not installed
2024-12-05 23:24:48,313:INFO:              optuna: 4.0.0
2024-12-05 23:24:48,313:INFO:               skopt: Not installed
2024-12-05 23:24:48,313:INFO:              mlflow: 2.18.0
2024-12-05 23:24:48,313:INFO:              gradio: Not installed
2024-12-05 23:24:48,313:INFO:             fastapi: Not installed
2024-12-05 23:24:48,313:INFO:             uvicorn: Not installed
2024-12-05 23:24:48,313:INFO:              m2cgen: Not installed
2024-12-05 23:24:48,313:INFO:           evidently: Not installed
2024-12-05 23:24:48,313:INFO:               fugue: Not installed
2024-12-05 23:24:48,313:INFO:           streamlit: 1.39.0
2024-12-05 23:24:48,313:INFO:             prophet: Not installed
2024-12-05 23:24:48,313:INFO:None
2024-12-05 23:24:48,313:INFO:Set up data.
2024-12-05 23:24:48,383:INFO:Set up folding strategy.
2024-12-05 23:24:48,383:INFO:Set up train/test split.
2024-12-05 23:24:48,426:INFO:Set up index.
2024-12-05 23:24:48,427:INFO:Assigning column types.
2024-12-05 23:24:48,462:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-05 23:24:48,514:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 23:24:48,515:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 23:24:48,554:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 23:24:48,556:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 23:24:48,605:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-05 23:24:48,606:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 23:24:48,643:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 23:24:48,646:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 23:24:48,647:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-05 23:24:48,698:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 23:24:48,730:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 23:24:48,732:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 23:24:48,781:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-05 23:24:48,816:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 23:24:48,819:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 23:24:48,820:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-05 23:24:48,896:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 23:24:48,899:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 23:24:48,973:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 23:24:48,976:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 23:24:48,977:INFO:Preparing preprocessing pipeline...
2024-12-05 23:24:48,981:INFO:Set up simple imputation.
2024-12-05 23:24:48,994:INFO:Set up encoding of categorical features.
2024-12-05 23:24:48,995:INFO:Set up imbalanced handling.
2024-12-05 23:24:48,995:INFO:Set up feature normalization.
2024-12-05 23:24:49,481:INFO:Finished creating preprocessing pipeline.
2024-12-05 23:24:49,490:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\diego\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_et...
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-12-05 23:24:49,490:INFO:Creating final display dataframe.
2024-12-05 23:24:50,276:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            target
2                   Target type            Binary
3           Original data shape       (31007, 78)
4        Transformed data shape       (31505, 78)
5   Transformed train set shape       (22202, 78)
6    Transformed test set shape        (9303, 78)
7              Numeric features                76
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                 5
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              dad0
2024-12-05 23:24:50,385:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 23:24:50,388:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 23:24:50,475:INFO:Soft dependency imported: xgboost: 2.1.2
2024-12-05 23:24:50,477:INFO:Soft dependency imported: catboost: 1.2.7
2024-12-05 23:24:50,478:INFO:setup() successfully completed in 2.27s...............
2024-12-05 23:24:50,539:INFO:Initializing compare_models()
2024-12-05 23:24:50,539:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-05 23:24:50,539:INFO:Checking exceptions
2024-12-05 23:24:50,559:INFO:Preparing display monitor
2024-12-05 23:24:50,586:INFO:Initializing Logistic Regression
2024-12-05 23:24:50,586:INFO:Total runtime is 1.675287882486979e-05 minutes
2024-12-05 23:24:50,589:INFO:SubProcess create_model() called ==================================
2024-12-05 23:24:50,590:INFO:Initializing create_model()
2024-12-05 23:24:50,590:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12F32E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:24:50,590:INFO:Checking exceptions
2024-12-05 23:24:50,590:INFO:Importing libraries
2024-12-05 23:24:50,590:INFO:Copying training dataset
2024-12-05 23:24:50,636:INFO:Defining folds
2024-12-05 23:24:50,637:INFO:Declaring metric variables
2024-12-05 23:24:50,641:INFO:Importing untrained model
2024-12-05 23:24:50,646:INFO:Logistic Regression Imported successfully
2024-12-05 23:24:50,656:INFO:Starting cross validation
2024-12-05 23:24:50,657:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:25:00,452:INFO:Calculating mean and std
2024-12-05 23:25:00,458:INFO:Creating metrics dataframe
2024-12-05 23:25:00,476:INFO:Uploading results into container
2024-12-05 23:25:00,480:INFO:Uploading model into container now
2024-12-05 23:25:00,481:INFO:_master_model_container: 1
2024-12-05 23:25:00,482:INFO:_display_container: 2
2024-12-05 23:25:00,483:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-05 23:25:00,483:INFO:create_model() successfully completed......................................
2024-12-05 23:25:00,896:INFO:SubProcess create_model() end ==================================
2024-12-05 23:25:00,896:INFO:Creating metrics dataframe
2024-12-05 23:25:00,920:INFO:Initializing K Neighbors Classifier
2024-12-05 23:25:00,920:INFO:Total runtime is 0.1722550908724467 minutes
2024-12-05 23:25:00,929:INFO:SubProcess create_model() called ==================================
2024-12-05 23:25:00,929:INFO:Initializing create_model()
2024-12-05 23:25:00,930:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12F32E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:25:00,930:INFO:Checking exceptions
2024-12-05 23:25:00,930:INFO:Importing libraries
2024-12-05 23:25:00,931:INFO:Copying training dataset
2024-12-05 23:25:01,007:INFO:Defining folds
2024-12-05 23:25:01,008:INFO:Declaring metric variables
2024-12-05 23:25:01,017:INFO:Importing untrained model
2024-12-05 23:25:01,027:INFO:K Neighbors Classifier Imported successfully
2024-12-05 23:25:01,046:INFO:Starting cross validation
2024-12-05 23:25:01,050:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:25:08,172:INFO:Calculating mean and std
2024-12-05 23:25:08,176:INFO:Creating metrics dataframe
2024-12-05 23:25:08,193:INFO:Uploading results into container
2024-12-05 23:25:08,196:INFO:Uploading model into container now
2024-12-05 23:25:08,199:INFO:_master_model_container: 2
2024-12-05 23:25:08,199:INFO:_display_container: 2
2024-12-05 23:25:08,201:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-05 23:25:08,201:INFO:create_model() successfully completed......................................
2024-12-05 23:25:08,642:INFO:SubProcess create_model() end ==================================
2024-12-05 23:25:08,642:INFO:Creating metrics dataframe
2024-12-05 23:25:08,675:INFO:Initializing Naive Bayes
2024-12-05 23:25:08,675:INFO:Total runtime is 0.3015088121096293 minutes
2024-12-05 23:25:08,687:INFO:SubProcess create_model() called ==================================
2024-12-05 23:25:08,687:INFO:Initializing create_model()
2024-12-05 23:25:08,688:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12F32E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:25:08,688:INFO:Checking exceptions
2024-12-05 23:25:08,688:INFO:Importing libraries
2024-12-05 23:25:08,688:INFO:Copying training dataset
2024-12-05 23:25:08,783:INFO:Defining folds
2024-12-05 23:25:08,784:INFO:Declaring metric variables
2024-12-05 23:25:08,796:INFO:Importing untrained model
2024-12-05 23:25:08,808:INFO:Naive Bayes Imported successfully
2024-12-05 23:25:08,833:INFO:Starting cross validation
2024-12-05 23:25:08,839:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:25:10,690:INFO:Calculating mean and std
2024-12-05 23:25:10,694:INFO:Creating metrics dataframe
2024-12-05 23:25:10,709:INFO:Uploading results into container
2024-12-05 23:25:10,713:INFO:Uploading model into container now
2024-12-05 23:25:10,715:INFO:_master_model_container: 3
2024-12-05 23:25:10,715:INFO:_display_container: 2
2024-12-05 23:25:10,716:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-05 23:25:10,716:INFO:create_model() successfully completed......................................
2024-12-05 23:25:11,153:INFO:SubProcess create_model() end ==================================
2024-12-05 23:25:11,153:INFO:Creating metrics dataframe
2024-12-05 23:25:11,167:INFO:Initializing Decision Tree Classifier
2024-12-05 23:25:11,167:INFO:Total runtime is 0.34304466644922893 minutes
2024-12-05 23:25:11,172:INFO:SubProcess create_model() called ==================================
2024-12-05 23:25:11,172:INFO:Initializing create_model()
2024-12-05 23:25:11,172:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12F32E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:25:11,172:INFO:Checking exceptions
2024-12-05 23:25:11,172:INFO:Importing libraries
2024-12-05 23:25:11,172:INFO:Copying training dataset
2024-12-05 23:25:11,214:INFO:Defining folds
2024-12-05 23:25:11,215:INFO:Declaring metric variables
2024-12-05 23:25:11,219:INFO:Importing untrained model
2024-12-05 23:25:11,223:INFO:Decision Tree Classifier Imported successfully
2024-12-05 23:25:11,236:INFO:Starting cross validation
2024-12-05 23:25:11,237:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:25:14,999:INFO:Calculating mean and std
2024-12-05 23:25:15,005:INFO:Creating metrics dataframe
2024-12-05 23:25:15,019:INFO:Uploading results into container
2024-12-05 23:25:15,021:INFO:Uploading model into container now
2024-12-05 23:25:15,022:INFO:_master_model_container: 4
2024-12-05 23:25:15,022:INFO:_display_container: 2
2024-12-05 23:25:15,023:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-12-05 23:25:15,023:INFO:create_model() successfully completed......................................
2024-12-05 23:25:15,292:INFO:SubProcess create_model() end ==================================
2024-12-05 23:25:15,292:INFO:Creating metrics dataframe
2024-12-05 23:25:15,307:INFO:Initializing SVM - Linear Kernel
2024-12-05 23:25:15,307:INFO:Total runtime is 0.41203490098317463 minutes
2024-12-05 23:25:15,310:INFO:SubProcess create_model() called ==================================
2024-12-05 23:25:15,311:INFO:Initializing create_model()
2024-12-05 23:25:15,311:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12F32E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:25:15,311:INFO:Checking exceptions
2024-12-05 23:25:15,312:INFO:Importing libraries
2024-12-05 23:25:15,312:INFO:Copying training dataset
2024-12-05 23:25:15,361:INFO:Defining folds
2024-12-05 23:25:15,362:INFO:Declaring metric variables
2024-12-05 23:25:15,368:INFO:Importing untrained model
2024-12-05 23:25:15,372:INFO:SVM - Linear Kernel Imported successfully
2024-12-05 23:25:15,382:INFO:Starting cross validation
2024-12-05 23:25:15,386:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:25:17,971:INFO:Calculating mean and std
2024-12-05 23:25:17,979:INFO:Creating metrics dataframe
2024-12-05 23:25:18,005:INFO:Uploading results into container
2024-12-05 23:25:18,007:INFO:Uploading model into container now
2024-12-05 23:25:18,008:INFO:_master_model_container: 5
2024-12-05 23:25:18,009:INFO:_display_container: 2
2024-12-05 23:25:18,013:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-05 23:25:18,013:INFO:create_model() successfully completed......................................
2024-12-05 23:25:18,406:INFO:SubProcess create_model() end ==================================
2024-12-05 23:25:18,407:INFO:Creating metrics dataframe
2024-12-05 23:25:18,439:INFO:Initializing Ridge Classifier
2024-12-05 23:25:18,439:INFO:Total runtime is 0.46423863967259726 minutes
2024-12-05 23:25:18,449:INFO:SubProcess create_model() called ==================================
2024-12-05 23:25:18,450:INFO:Initializing create_model()
2024-12-05 23:25:18,450:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12F32E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:25:18,450:INFO:Checking exceptions
2024-12-05 23:25:18,451:INFO:Importing libraries
2024-12-05 23:25:18,451:INFO:Copying training dataset
2024-12-05 23:25:18,536:INFO:Defining folds
2024-12-05 23:25:18,536:INFO:Declaring metric variables
2024-12-05 23:25:18,547:INFO:Importing untrained model
2024-12-05 23:25:18,554:INFO:Ridge Classifier Imported successfully
2024-12-05 23:25:18,566:INFO:Starting cross validation
2024-12-05 23:25:18,570:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:25:20,474:INFO:Calculating mean and std
2024-12-05 23:25:20,487:INFO:Creating metrics dataframe
2024-12-05 23:25:20,505:INFO:Uploading results into container
2024-12-05 23:25:20,511:INFO:Uploading model into container now
2024-12-05 23:25:20,515:INFO:_master_model_container: 6
2024-12-05 23:25:20,516:INFO:_display_container: 2
2024-12-05 23:25:20,520:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-12-05 23:25:20,520:INFO:create_model() successfully completed......................................
2024-12-05 23:25:20,977:INFO:SubProcess create_model() end ==================================
2024-12-05 23:25:20,977:INFO:Creating metrics dataframe
2024-12-05 23:25:21,019:INFO:Initializing Random Forest Classifier
2024-12-05 23:25:21,019:INFO:Total runtime is 0.5072364648183187 minutes
2024-12-05 23:25:21,030:INFO:SubProcess create_model() called ==================================
2024-12-05 23:25:21,032:INFO:Initializing create_model()
2024-12-05 23:25:21,032:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12F32E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:25:21,033:INFO:Checking exceptions
2024-12-05 23:25:21,033:INFO:Importing libraries
2024-12-05 23:25:21,033:INFO:Copying training dataset
2024-12-05 23:25:21,161:INFO:Defining folds
2024-12-05 23:25:21,162:INFO:Declaring metric variables
2024-12-05 23:25:21,172:INFO:Importing untrained model
2024-12-05 23:25:21,180:INFO:Random Forest Classifier Imported successfully
2024-12-05 23:25:21,190:INFO:Starting cross validation
2024-12-05 23:25:21,191:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:25:34,533:INFO:Calculating mean and std
2024-12-05 23:25:34,535:INFO:Creating metrics dataframe
2024-12-05 23:25:34,538:INFO:Uploading results into container
2024-12-05 23:25:34,538:INFO:Uploading model into container now
2024-12-05 23:25:34,539:INFO:_master_model_container: 7
2024-12-05 23:25:34,539:INFO:_display_container: 2
2024-12-05 23:25:34,539:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-12-05 23:25:34,539:INFO:create_model() successfully completed......................................
2024-12-05 23:25:34,742:INFO:SubProcess create_model() end ==================================
2024-12-05 23:25:34,742:INFO:Creating metrics dataframe
2024-12-05 23:25:34,757:INFO:Initializing Quadratic Discriminant Analysis
2024-12-05 23:25:34,757:INFO:Total runtime is 0.7362063646316529 minutes
2024-12-05 23:25:34,761:INFO:SubProcess create_model() called ==================================
2024-12-05 23:25:34,761:INFO:Initializing create_model()
2024-12-05 23:25:34,762:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12F32E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:25:34,762:INFO:Checking exceptions
2024-12-05 23:25:34,762:INFO:Importing libraries
2024-12-05 23:25:34,762:INFO:Copying training dataset
2024-12-05 23:25:34,798:INFO:Defining folds
2024-12-05 23:25:34,799:INFO:Declaring metric variables
2024-12-05 23:25:34,804:INFO:Importing untrained model
2024-12-05 23:25:34,809:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-05 23:25:34,822:INFO:Starting cross validation
2024-12-05 23:25:34,824:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:25:36,763:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 23:25:36,780:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 23:25:36,805:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 23:25:36,814:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 23:25:36,826:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-05 23:25:37,530:INFO:Calculating mean and std
2024-12-05 23:25:37,535:INFO:Creating metrics dataframe
2024-12-05 23:25:37,566:INFO:Uploading results into container
2024-12-05 23:25:37,572:INFO:Uploading model into container now
2024-12-05 23:25:37,589:INFO:_master_model_container: 8
2024-12-05 23:25:37,590:INFO:_display_container: 2
2024-12-05 23:25:37,599:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-05 23:25:37,600:INFO:create_model() successfully completed......................................
2024-12-05 23:25:37,975:INFO:SubProcess create_model() end ==================================
2024-12-05 23:25:37,976:INFO:Creating metrics dataframe
2024-12-05 23:25:37,990:INFO:Initializing Ada Boost Classifier
2024-12-05 23:25:37,991:INFO:Total runtime is 0.7900986711184185 minutes
2024-12-05 23:25:37,996:INFO:SubProcess create_model() called ==================================
2024-12-05 23:25:37,996:INFO:Initializing create_model()
2024-12-05 23:25:37,997:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12F32E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:25:37,997:INFO:Checking exceptions
2024-12-05 23:25:37,997:INFO:Importing libraries
2024-12-05 23:25:37,997:INFO:Copying training dataset
2024-12-05 23:25:38,037:INFO:Defining folds
2024-12-05 23:25:38,038:INFO:Declaring metric variables
2024-12-05 23:25:38,044:INFO:Importing untrained model
2024-12-05 23:25:38,050:INFO:Ada Boost Classifier Imported successfully
2024-12-05 23:25:38,063:INFO:Starting cross validation
2024-12-05 23:25:38,066:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:25:39,778:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 23:25:39,810:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 23:25:39,810:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 23:25:39,812:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 23:25:39,815:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-05 23:25:48,520:INFO:Calculating mean and std
2024-12-05 23:25:48,524:INFO:Creating metrics dataframe
2024-12-05 23:25:48,542:INFO:Uploading results into container
2024-12-05 23:25:48,545:INFO:Uploading model into container now
2024-12-05 23:25:48,547:INFO:_master_model_container: 9
2024-12-05 23:25:48,547:INFO:_display_container: 2
2024-12-05 23:25:48,548:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-12-05 23:25:48,548:INFO:create_model() successfully completed......................................
2024-12-05 23:25:49,082:INFO:SubProcess create_model() end ==================================
2024-12-05 23:25:49,082:INFO:Creating metrics dataframe
2024-12-05 23:25:49,139:INFO:Initializing Gradient Boosting Classifier
2024-12-05 23:25:49,139:INFO:Total runtime is 0.9759069720904033 minutes
2024-12-05 23:25:49,151:INFO:SubProcess create_model() called ==================================
2024-12-05 23:25:49,152:INFO:Initializing create_model()
2024-12-05 23:25:49,153:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12F32E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:25:49,153:INFO:Checking exceptions
2024-12-05 23:25:49,153:INFO:Importing libraries
2024-12-05 23:25:49,153:INFO:Copying training dataset
2024-12-05 23:25:49,200:INFO:Defining folds
2024-12-05 23:25:49,200:INFO:Declaring metric variables
2024-12-05 23:25:49,208:INFO:Importing untrained model
2024-12-05 23:25:49,215:INFO:Gradient Boosting Classifier Imported successfully
2024-12-05 23:25:49,227:INFO:Starting cross validation
2024-12-05 23:25:49,229:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:26:27,530:INFO:Calculating mean and std
2024-12-05 23:26:27,535:INFO:Creating metrics dataframe
2024-12-05 23:26:27,564:INFO:Uploading results into container
2024-12-05 23:26:27,570:INFO:Uploading model into container now
2024-12-05 23:26:27,572:INFO:_master_model_container: 10
2024-12-05 23:26:27,573:INFO:_display_container: 2
2024-12-05 23:26:27,577:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-05 23:26:27,579:INFO:create_model() successfully completed......................................
2024-12-05 23:26:27,932:INFO:SubProcess create_model() end ==================================
2024-12-05 23:26:27,932:INFO:Creating metrics dataframe
2024-12-05 23:26:27,960:INFO:Initializing Linear Discriminant Analysis
2024-12-05 23:26:27,961:INFO:Total runtime is 1.622930999596914 minutes
2024-12-05 23:26:27,968:INFO:SubProcess create_model() called ==================================
2024-12-05 23:26:27,970:INFO:Initializing create_model()
2024-12-05 23:26:27,970:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12F32E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:26:27,970:INFO:Checking exceptions
2024-12-05 23:26:27,970:INFO:Importing libraries
2024-12-05 23:26:27,970:INFO:Copying training dataset
2024-12-05 23:26:28,043:INFO:Defining folds
2024-12-05 23:26:28,043:INFO:Declaring metric variables
2024-12-05 23:26:28,086:INFO:Importing untrained model
2024-12-05 23:26:28,099:INFO:Linear Discriminant Analysis Imported successfully
2024-12-05 23:26:28,114:INFO:Starting cross validation
2024-12-05 23:26:28,118:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:26:30,681:INFO:Calculating mean and std
2024-12-05 23:26:30,841:INFO:Creating metrics dataframe
2024-12-05 23:26:30,866:INFO:Uploading results into container
2024-12-05 23:26:30,869:INFO:Uploading model into container now
2024-12-05 23:26:30,871:INFO:_master_model_container: 11
2024-12-05 23:26:30,872:INFO:_display_container: 2
2024-12-05 23:26:30,873:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-05 23:26:30,874:INFO:create_model() successfully completed......................................
2024-12-05 23:26:31,190:INFO:SubProcess create_model() end ==================================
2024-12-05 23:26:31,190:INFO:Creating metrics dataframe
2024-12-05 23:26:31,202:INFO:Initializing Extra Trees Classifier
2024-12-05 23:26:31,202:INFO:Total runtime is 1.6769576072692873 minutes
2024-12-05 23:26:31,205:INFO:SubProcess create_model() called ==================================
2024-12-05 23:26:31,205:INFO:Initializing create_model()
2024-12-05 23:26:31,205:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12F32E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:26:31,205:INFO:Checking exceptions
2024-12-05 23:26:31,205:INFO:Importing libraries
2024-12-05 23:26:31,205:INFO:Copying training dataset
2024-12-05 23:26:31,266:INFO:Defining folds
2024-12-05 23:26:31,266:INFO:Declaring metric variables
2024-12-05 23:26:31,274:INFO:Importing untrained model
2024-12-05 23:26:31,280:INFO:Extra Trees Classifier Imported successfully
2024-12-05 23:26:31,289:INFO:Starting cross validation
2024-12-05 23:26:31,292:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:26:37,274:INFO:Calculating mean and std
2024-12-05 23:26:37,280:INFO:Creating metrics dataframe
2024-12-05 23:26:37,296:INFO:Uploading results into container
2024-12-05 23:26:37,298:INFO:Uploading model into container now
2024-12-05 23:26:37,299:INFO:_master_model_container: 12
2024-12-05 23:26:37,299:INFO:_display_container: 2
2024-12-05 23:26:37,302:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 23:26:37,303:INFO:create_model() successfully completed......................................
2024-12-05 23:26:37,565:INFO:SubProcess create_model() end ==================================
2024-12-05 23:26:37,565:INFO:Creating metrics dataframe
2024-12-05 23:26:37,580:INFO:Initializing Extreme Gradient Boosting
2024-12-05 23:26:37,580:INFO:Total runtime is 1.783247478802999 minutes
2024-12-05 23:26:37,584:INFO:SubProcess create_model() called ==================================
2024-12-05 23:26:37,584:INFO:Initializing create_model()
2024-12-05 23:26:37,584:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12F32E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:26:37,584:INFO:Checking exceptions
2024-12-05 23:26:37,584:INFO:Importing libraries
2024-12-05 23:26:37,585:INFO:Copying training dataset
2024-12-05 23:26:37,617:INFO:Defining folds
2024-12-05 23:26:37,617:INFO:Declaring metric variables
2024-12-05 23:26:37,621:INFO:Importing untrained model
2024-12-05 23:26:37,625:INFO:Extreme Gradient Boosting Imported successfully
2024-12-05 23:26:37,636:INFO:Starting cross validation
2024-12-05 23:26:37,639:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:26:42,631:INFO:Calculating mean and std
2024-12-05 23:26:42,635:INFO:Creating metrics dataframe
2024-12-05 23:26:42,654:INFO:Uploading results into container
2024-12-05 23:26:42,657:INFO:Uploading model into container now
2024-12-05 23:26:42,659:INFO:_master_model_container: 13
2024-12-05 23:26:42,659:INFO:_display_container: 2
2024-12-05 23:26:42,663:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-12-05 23:26:42,664:INFO:create_model() successfully completed......................................
2024-12-05 23:26:43,129:INFO:SubProcess create_model() end ==================================
2024-12-05 23:26:43,129:INFO:Creating metrics dataframe
2024-12-05 23:26:43,165:INFO:Initializing Light Gradient Boosting Machine
2024-12-05 23:26:43,165:INFO:Total runtime is 1.876329012711843 minutes
2024-12-05 23:26:43,176:INFO:SubProcess create_model() called ==================================
2024-12-05 23:26:43,177:INFO:Initializing create_model()
2024-12-05 23:26:43,178:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12F32E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:26:43,178:INFO:Checking exceptions
2024-12-05 23:26:43,179:INFO:Importing libraries
2024-12-05 23:26:43,179:INFO:Copying training dataset
2024-12-05 23:26:43,296:INFO:Defining folds
2024-12-05 23:26:43,297:INFO:Declaring metric variables
2024-12-05 23:26:43,300:INFO:Importing untrained model
2024-12-05 23:26:43,305:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-05 23:26:43,318:INFO:Starting cross validation
2024-12-05 23:26:43,321:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:26:48,084:INFO:Calculating mean and std
2024-12-05 23:26:48,085:INFO:Creating metrics dataframe
2024-12-05 23:26:48,089:INFO:Uploading results into container
2024-12-05 23:26:48,090:INFO:Uploading model into container now
2024-12-05 23:26:48,090:INFO:_master_model_container: 14
2024-12-05 23:26:48,090:INFO:_display_container: 2
2024-12-05 23:26:48,091:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-05 23:26:48,091:INFO:create_model() successfully completed......................................
2024-12-05 23:26:48,298:INFO:SubProcess create_model() end ==================================
2024-12-05 23:26:48,298:INFO:Creating metrics dataframe
2024-12-05 23:26:48,312:INFO:Initializing CatBoost Classifier
2024-12-05 23:26:48,312:INFO:Total runtime is 1.962112895647685 minutes
2024-12-05 23:26:48,316:INFO:SubProcess create_model() called ==================================
2024-12-05 23:26:48,317:INFO:Initializing create_model()
2024-12-05 23:26:48,317:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12F32E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:26:48,317:INFO:Checking exceptions
2024-12-05 23:26:48,317:INFO:Importing libraries
2024-12-05 23:26:48,317:INFO:Copying training dataset
2024-12-05 23:26:48,357:INFO:Defining folds
2024-12-05 23:26:48,358:INFO:Declaring metric variables
2024-12-05 23:26:48,363:INFO:Importing untrained model
2024-12-05 23:26:48,369:INFO:CatBoost Classifier Imported successfully
2024-12-05 23:26:48,380:INFO:Starting cross validation
2024-12-05 23:26:48,384:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:27:54,857:INFO:Calculating mean and std
2024-12-05 23:27:54,861:INFO:Creating metrics dataframe
2024-12-05 23:27:54,882:INFO:Uploading results into container
2024-12-05 23:27:54,886:INFO:Uploading model into container now
2024-12-05 23:27:54,887:INFO:_master_model_container: 15
2024-12-05 23:27:54,888:INFO:_display_container: 2
2024-12-05 23:27:54,888:INFO:<catboost.core.CatBoostClassifier object at 0x0000023E22F31C30>
2024-12-05 23:27:54,890:INFO:create_model() successfully completed......................................
2024-12-05 23:27:55,472:INFO:SubProcess create_model() end ==================================
2024-12-05 23:27:55,473:INFO:Creating metrics dataframe
2024-12-05 23:27:55,524:INFO:Initializing Dummy Classifier
2024-12-05 23:27:55,524:INFO:Total runtime is 3.0823175549507145 minutes
2024-12-05 23:27:55,538:INFO:SubProcess create_model() called ==================================
2024-12-05 23:27:55,539:INFO:Initializing create_model()
2024-12-05 23:27:55,539:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E12F32E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:27:55,540:INFO:Checking exceptions
2024-12-05 23:27:55,540:INFO:Importing libraries
2024-12-05 23:27:55,541:INFO:Copying training dataset
2024-12-05 23:27:55,635:INFO:Defining folds
2024-12-05 23:27:55,635:INFO:Declaring metric variables
2024-12-05 23:27:55,644:INFO:Importing untrained model
2024-12-05 23:27:55,650:INFO:Dummy Classifier Imported successfully
2024-12-05 23:27:55,660:INFO:Starting cross validation
2024-12-05 23:27:55,664:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:27:57,531:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 23:27:57,531:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 23:27:57,542:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 23:27:57,595:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 23:27:57,601:WARNING:c:\Users\diego\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-05 23:27:57,725:INFO:Calculating mean and std
2024-12-05 23:27:57,731:INFO:Creating metrics dataframe
2024-12-05 23:27:57,748:INFO:Uploading results into container
2024-12-05 23:27:57,754:INFO:Uploading model into container now
2024-12-05 23:27:57,760:INFO:_master_model_container: 16
2024-12-05 23:27:57,760:INFO:_display_container: 2
2024-12-05 23:27:57,761:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-12-05 23:27:57,762:INFO:create_model() successfully completed......................................
2024-12-05 23:27:58,117:INFO:SubProcess create_model() end ==================================
2024-12-05 23:27:58,117:INFO:Creating metrics dataframe
2024-12-05 23:27:58,183:INFO:Initializing create_model()
2024-12-05 23:27:58,184:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:27:58,185:INFO:Checking exceptions
2024-12-05 23:27:58,192:INFO:Importing libraries
2024-12-05 23:27:58,192:INFO:Copying training dataset
2024-12-05 23:27:58,335:INFO:Defining folds
2024-12-05 23:27:58,335:INFO:Declaring metric variables
2024-12-05 23:27:58,335:INFO:Importing untrained model
2024-12-05 23:27:58,335:INFO:Declaring custom model
2024-12-05 23:27:58,336:INFO:Extra Trees Classifier Imported successfully
2024-12-05 23:27:58,337:INFO:Cross validation set to False
2024-12-05 23:27:58,337:INFO:Fitting Model
2024-12-05 23:28:00,241:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 23:28:00,241:INFO:create_model() successfully completed......................................
2024-12-05 23:28:00,858:INFO:_master_model_container: 16
2024-12-05 23:28:00,859:INFO:_display_container: 2
2024-12-05 23:28:00,860:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 23:28:00,862:INFO:compare_models() successfully completed......................................
2024-12-05 23:28:29,002:INFO:Initializing predict_model()
2024-12-05 23:28:29,003:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E1B4A1B40>)
2024-12-05 23:28:29,003:INFO:Checking exceptions
2024-12-05 23:28:29,003:INFO:Preloading libraries
2024-12-05 23:28:29,008:INFO:Set up data.
2024-12-05 23:28:29,069:INFO:Set up index.
2024-12-05 23:28:29,752:INFO:Initializing finalize_model()
2024-12-05 23:28:29,752:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-05 23:28:29,753:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 23:28:29,771:INFO:Initializing create_model()
2024-12-05 23:28:29,771:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:28:29,771:INFO:Checking exceptions
2024-12-05 23:28:29,773:INFO:Importing libraries
2024-12-05 23:28:29,773:INFO:Copying training dataset
2024-12-05 23:28:29,775:INFO:Defining folds
2024-12-05 23:28:29,776:INFO:Declaring metric variables
2024-12-05 23:28:29,776:INFO:Importing untrained model
2024-12-05 23:28:29,776:INFO:Declaring custom model
2024-12-05 23:28:29,776:INFO:Extra Trees Classifier Imported successfully
2024-12-05 23:28:29,777:INFO:Cross validation set to False
2024-12-05 23:28:29,777:INFO:Fitting Model
2024-12-05 23:28:32,644:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 23:28:32,644:INFO:create_model() successfully completed......................................
2024-12-05 23:28:32,850:INFO:_master_model_container: 16
2024-12-05 23:28:32,851:INFO:_display_container: 3
2024-12-05 23:28:32,867:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 23:28:32,867:INFO:finalize_model() successfully completed......................................
2024-12-05 23:28:33,151:INFO:Initializing predict_model()
2024-12-05 23:28:33,151:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E1B4A32E0>)
2024-12-05 23:28:33,151:INFO:Checking exceptions
2024-12-05 23:28:33,151:INFO:Preloading libraries
2024-12-05 23:28:33,154:INFO:Set up data.
2024-12-05 23:28:33,243:INFO:Set up index.
2024-12-05 23:28:39,140:INFO:Initializing predict_model()
2024-12-05 23:28:39,141:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E1B4A28C0>)
2024-12-05 23:28:39,141:INFO:Checking exceptions
2024-12-05 23:28:39,141:INFO:Preloading libraries
2024-12-05 23:28:39,145:INFO:Set up data.
2024-12-05 23:28:39,216:INFO:Set up index.
2024-12-05 23:32:26,073:INFO:Initializing tune_model()
2024-12-05 23:32:26,073:INFO:tune_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>)
2024-12-05 23:32:26,073:INFO:Checking exceptions
2024-12-05 23:32:26,116:INFO:Copying training dataset
2024-12-05 23:32:26,147:INFO:Checking base model
2024-12-05 23:32:26,148:INFO:Base model : Extra Trees Classifier
2024-12-05 23:32:26,160:INFO:Declaring metric variables
2024-12-05 23:32:26,166:INFO:Defining Hyperparameters
2024-12-05 23:32:26,449:INFO:Tuning with n_jobs=-1
2024-12-05 23:32:26,450:INFO:Initializing RandomizedSearchCV
2024-12-05 23:33:10,324:INFO:best_params: {'actual_estimator__n_estimators': 200, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2024-12-05 23:33:10,325:INFO:Hyperparameter search completed
2024-12-05 23:33:10,325:INFO:SubProcess create_model() called ==================================
2024-12-05 23:33:10,326:INFO:Initializing create_model()
2024-12-05 23:33:10,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E1B75ADD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 200, 'min_samples_split': 7, 'min_samples_leaf': 4, 'min_impurity_decrease': 0, 'max_features': 1.0, 'max_depth': 6, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2024-12-05 23:33:10,326:INFO:Checking exceptions
2024-12-05 23:33:10,327:INFO:Importing libraries
2024-12-05 23:33:10,327:INFO:Copying training dataset
2024-12-05 23:33:10,366:INFO:Defining folds
2024-12-05 23:33:10,367:INFO:Declaring metric variables
2024-12-05 23:33:10,371:INFO:Importing untrained model
2024-12-05 23:33:10,371:INFO:Declaring custom model
2024-12-05 23:33:10,374:INFO:Extra Trees Classifier Imported successfully
2024-12-05 23:33:10,384:INFO:Starting cross validation
2024-12-05 23:33:10,386:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:33:29,477:INFO:Calculating mean and std
2024-12-05 23:33:29,478:INFO:Creating metrics dataframe
2024-12-05 23:33:29,484:INFO:Finalizing model
2024-12-05 23:33:34,164:INFO:Uploading results into container
2024-12-05 23:33:34,167:INFO:Uploading model into container now
2024-12-05 23:33:34,168:INFO:_master_model_container: 17
2024-12-05 23:33:34,168:INFO:_display_container: 6
2024-12-05 23:33:34,169:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='gini',
                     max_depth=6, max_features=1.0, max_leaf_nodes=None,
                     max_samples=None, min_impurity_decrease=0,
                     min_samples_leaf=4, min_samples_split=7,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=200, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2024-12-05 23:33:34,169:INFO:create_model() successfully completed......................................
2024-12-05 23:33:34,419:INFO:SubProcess create_model() end ==================================
2024-12-05 23:33:34,420:INFO:choose_better activated
2024-12-05 23:33:34,423:INFO:SubProcess create_model() called ==================================
2024-12-05 23:33:34,424:INFO:Initializing create_model()
2024-12-05 23:33:34,424:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:33:34,424:INFO:Checking exceptions
2024-12-05 23:33:34,427:INFO:Importing libraries
2024-12-05 23:33:34,427:INFO:Copying training dataset
2024-12-05 23:33:34,462:INFO:Defining folds
2024-12-05 23:33:34,462:INFO:Declaring metric variables
2024-12-05 23:33:34,462:INFO:Importing untrained model
2024-12-05 23:33:34,462:INFO:Declaring custom model
2024-12-05 23:33:34,463:INFO:Extra Trees Classifier Imported successfully
2024-12-05 23:33:34,463:INFO:Starting cross validation
2024-12-05 23:33:34,465:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-05 23:33:41,095:INFO:Calculating mean and std
2024-12-05 23:33:41,097:INFO:Creating metrics dataframe
2024-12-05 23:33:41,106:INFO:Finalizing model
2024-12-05 23:33:43,014:INFO:Uploading results into container
2024-12-05 23:33:43,014:INFO:Uploading model into container now
2024-12-05 23:33:43,015:INFO:_master_model_container: 18
2024-12-05 23:33:43,015:INFO:_display_container: 7
2024-12-05 23:33:43,016:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 23:33:43,016:INFO:create_model() successfully completed......................................
2024-12-05 23:33:43,206:INFO:SubProcess create_model() end ==================================
2024-12-05 23:33:43,207:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) result for Accuracy is 0.8998
2024-12-05 23:33:43,207:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='gini',
                     max_depth=6, max_features=1.0, max_leaf_nodes=None,
                     max_samples=None, min_impurity_decrease=0,
                     min_samples_leaf=4, min_samples_split=7,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=200, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.8759
2024-12-05 23:33:43,208:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) is best model
2024-12-05 23:33:43,208:INFO:choose_better completed
2024-12-05 23:33:43,209:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-12-05 23:33:43,222:INFO:_master_model_container: 18
2024-12-05 23:33:43,222:INFO:_display_container: 6
2024-12-05 23:33:43,222:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 23:33:43,223:INFO:tune_model() successfully completed......................................
2024-12-05 23:33:43,514:INFO:Initializing finalize_model()
2024-12-05 23:33:43,515:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-05 23:33:43,515:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-12-05 23:33:43,534:INFO:Initializing create_model()
2024-12-05 23:33:43,535:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-05 23:33:43,535:INFO:Checking exceptions
2024-12-05 23:33:43,536:INFO:Importing libraries
2024-12-05 23:33:43,536:INFO:Copying training dataset
2024-12-05 23:33:43,538:INFO:Defining folds
2024-12-05 23:33:43,538:INFO:Declaring metric variables
2024-12-05 23:33:43,538:INFO:Importing untrained model
2024-12-05 23:33:43,538:INFO:Declaring custom model
2024-12-05 23:33:43,538:INFO:Extra Trees Classifier Imported successfully
2024-12-05 23:33:43,540:INFO:Cross validation set to False
2024-12-05 23:33:43,540:INFO:Fitting Model
2024-12-05 23:33:46,290:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 23:33:46,290:INFO:create_model() successfully completed......................................
2024-12-05 23:33:46,463:INFO:_master_model_container: 18
2024-12-05 23:33:46,463:INFO:_display_container: 6
2024-12-05 23:33:46,479:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-05 23:33:46,479:INFO:finalize_model() successfully completed......................................
2024-12-05 23:33:46,724:INFO:Initializing predict_model()
2024-12-05 23:33:46,724:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E1BC1EB90>)
2024-12-05 23:33:46,724:INFO:Checking exceptions
2024-12-05 23:33:46,724:INFO:Preloading libraries
2024-12-05 23:33:46,727:INFO:Set up data.
2024-12-05 23:33:46,831:INFO:Set up index.
2024-12-05 23:33:47,493:INFO:Initializing predict_model()
2024-12-05 23:33:47,493:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E1FEF7E80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['borrow_block_number',
                                             'borrow_timestamp',
                                             'first_tx_timestamp',
                                             'last_tx_timestamp', 'wallet_age',
                                             'incoming_tx_count',
                                             'outgoing_tx_count',
                                             'net_incoming_tx_count',
                                             'total_gas_paid_eth',
                                             'avg_gas_paid_per_tx_eth',
                                             'risky_tx_count',
                                             'risky_unique_contra...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E1BC1EB90>)
2024-12-05 23:33:47,493:INFO:Checking exceptions
2024-12-05 23:33:47,493:INFO:Preloading libraries
2024-12-05 23:33:47,495:INFO:Set up data.
2024-12-05 23:33:47,554:INFO:Set up index.
